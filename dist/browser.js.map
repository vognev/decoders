{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///browser.js","webpack:///webpack/bootstrap 565e19fd46db9787f590","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./node_modules/babel-runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/babel-runtime/helpers/inherits.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./src/aac/constants.js","webpack:///./src/aac/frame.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_wks-ext.js","webpack:///./node_modules/core-js/library/modules/_wks-define.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./src/pcm_format.js","webpack:///./src/bitstream.js","webpack:///./src/aac/elements/element.js","webpack:///./src/aac/huffman/hcb.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/babel-runtime/helpers/typeof.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/_object-gopn.js","webpack:///./node_modules/core-js/library/modules/_object-gopd.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/string_decoder/index.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./src/aac/elements/cpe.js","webpack:///./src/aac/elements/icstream.js","webpack:///./src/aac/elements/sce_lfe.js","webpack:///./index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./src/wav/index.js","webpack:///./node_modules/core-js/library/fn/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/babel-runtime/core-js/symbol/iterator.js","webpack:///./node_modules/core-js/library/fn/symbol/iterator.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/babel-runtime/core-js/symbol.js","webpack:///./node_modules/core-js/library/fn/symbol/index.js","webpack:///./node_modules/core-js/library/modules/es6.symbol.js","webpack:///./node_modules/core-js/library/modules/_meta.js","webpack:///./node_modules/core-js/library/modules/_enum-keys.js","webpack:///./node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js","webpack:///./node_modules/babel-runtime/core-js/object/set-prototype-of.js","webpack:///./node_modules/core-js/library/fn/object/set-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./node_modules/core-js/library/modules/_set-proto.js","webpack:///./node_modules/babel-runtime/core-js/object/create.js","webpack:///./node_modules/core-js/library/fn/object/create.js","webpack:///./node_modules/core-js/library/modules/es6.object.create.js","webpack:///./node_modules/readable-stream/readable.js","webpack:///./node_modules/readable-stream/writable.js","webpack:///./node_modules/readable-stream/duplex.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/ms/index.js","webpack:///./src/wav/header.js","webpack:///./node_modules/babel-runtime/core-js/number/is-integer.js","webpack:///./node_modules/core-js/library/fn/number/is-integer.js","webpack:///./node_modules/core-js/library/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/library/modules/_is-integer.js","webpack:///./src/mp3/index.js","webpack:///./src/mp3/util.js","webpack:///./src/mp3/frame.js","webpack:///./src/mp3/decoder.js","webpack:///./src/mp3/layer3.js","webpack:///./src/mp3/huffcodetab.js","webpack:///./src/mp3/bitreserve.js","webpack:///./src/mp3/fltout.js","webpack:///./src/aac/index.js","webpack:///./src/aac/decoder.js","webpack:///./src/aac/elements/index.js","webpack:///./src/aac/elements/icsinfo.js","webpack:///./src/aac/tools/sfb.js","webpack:///./src/aac/huffman/index.js","webpack:///./src/aac/tools/sft.js","webpack:///./src/aac/tools/tns.js","webpack:///./src/aac/tools/iqt.js","webpack:///./src/aac/tools/msmask.js","webpack:///./src/aac/elements/fil.js","webpack:///./src/aac/tools/is.js","webpack:///./src/aac/tools/ms.js","webpack:///./src/aac/filterbank/index.js","webpack:///./src/aac/filterbank/windows.js","webpack:///./src/aac/filterbank/mdct.js","webpack:///./src/aac/filterbank/mdct_tables.js","webpack:///./src/aac/filterbank/fft.js","webpack:///./src/aac/filterbank/fft_tables.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","instance","Constructor","TypeError","_defineProperty","_defineProperty2","obj","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","global","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","value","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","byteOffset","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","e","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","join","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","core","version","__e","_typeof2","_typeof3","self","ReferenceError","_interopRequireDefault","_setPrototypeOf","_setPrototypeOf2","_create","_create2","subClass","superClass","constructor","window","Function","__g","ctx","hide","$export","source","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","it","Stream","EE","EventEmitter","Readable","Writable","Duplex","Transform","PassThrough","pipe","dest","options","ondata","chunk","pause","ondrain","readable","resume","onend","didOnEnd","onclose","destroy","onerror","er","cleanup","listenerCount","removeListener","on","_isStdio","emit","createDesc","IObject","defined","store","uid","USE_SYMBOL","create","ctor","superCtor","super_","TempCtor","isObject","exec","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","process","nextTick","args","title","browser","env","argv","versions","addListener","once","off","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isDate","isError","isFunction","isPrimitive","bitmap","id","px","random","allowHalfOpen","_writableState","ended","bind","objectKeys","keys","util","inherits","xs","method","useColors","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","RegExp","$1","formatArgs","namespace","humanize","diff","color","splice","index","lastC","log","save","namespaces","storage","removeItem","debug","load","r","DEBUG","chrome","local","localStorage","colors","formatters","v","JSON","stringify","err","message","enable","elements","SCE","CPE","CCE","LFE","DSE","PCE","FIL","END","MAX_ELEMENTS","MAX_SECTIONS","MAX_MS_MASK","WINDOW_LEN_LONG","WINDOW_LEN_SHORT","WINDOW_SMALL_LEN_LONG","WINDOW_SMALL_LEN_SHORT","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","PCM","_PCM","AACFrame","_this","profile","samplingIndex","channelConfig","hasCrc","fn","valueOf","shared","ceil","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","display","appendChild","contentWindow","open","lt","close","Properties","result","$keys","split","def","has","TAG","tag","stat","LIBRARY","wksExt","$Symbol","charAt","propertyIsEnumerable","WriteReq","cb","callback","WritableState","stream","hwm","highWaterMark","objectMode","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","sync","bufferProcessing","onwrite","writecb","writelen","errorEmitted","writeAfterEnd","state","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","_write","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","need","endWritable","TransformState","afterTransform","needTransform","transforming","writechunk","ts","_transformState","rs","_readableState","reading","needReadable","_read","_flush","done","ws","_transform","writeencoding","_isInteger","_isInteger2","PCMFormat","byteRate","bitsPerSample","channels","sampleRate","assert","blockAlign","BYTE","BitStream","bitPosition","maxPosition","skipBits","bits","available","readBits","Element","instanceTag","sbr","bitStream","sf","count","stereo","crc","downSampled","smallFrames","HCB","aFunction","is","createElement","toObject","ObjectProto","getPrototypeOf","_iterator","_iterator2","_symbol","_symbol2","_typeof","redefine","Iterators","$iterCreate","setToStringTag","ITERATOR","BUGGY","returnThis","Base","NAME","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","toIObject","names","getOwnPropertySymbols","hiddenKeys","getOwnPropertyNames","pIE","gOPD","getOwnPropertyDescriptor","_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler","error","context","listener","newListener","warned","trace","g","fired","position","evlistener","emitter","ReadableState","pipes","pipesCount","flowing","endEmitted","calledRead","emittedReadable","readableListening","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","unshift","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","endReadable","emitReadable_","maybeReadMore_","pipeOnDrain","flow","forEach","emitDataEvents","pipeOnReadable","startPaused","paused","fromList","stringMode","shift","cpy","setEncoding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","_fromList","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","charCode","substring","cr","ICStream","MSMask","Constants","_Element","frame","msMask","msUsed","commonWindow","icsL","icsR","readInstanceTag","info","getInfo","decode","setData","forInt","TYPE_USED","maxSFB","getMaxSFB","windowGroupCount","getWindowGroupCount","idx","readBit","TYPE_ALL_1","TYPE_ALL_0","isErrorResilientProfile","ICSInfo","Huffman","SFT","TNS","IQT","sfbCB","Int32Array","sectEnd","Float32Array","frameLength","scaleFactors","globalGain","pulseDataPresent","tnsDataPresent","gainControlPresent","randomState","decodeSectionData","decodeScaleFactors","isEightShortFrame","tns","decodeSpectralData","sectionDataResilienceUsed","escVal","incr","k","windowGroups","tmp","sfb","ZERO_HCB","INTENSITY_HCB","INTENSITY_HCB2","decodeScaleFactor","SCALEFACTOR_TABLE","NOISE_HCB","offsets","getSWBOffsets","w","hcb","width","num","groupOff","groupLen","getWindowGroupLength","FIRST_PAIR_HCB","IQ_TABLE","SCE_LFE","ics","Decoders","MP3","AAC","WAV","_Buffer","_len","_key","eval","placeHoldersCount","b64","placeHolders","Arr","L","revLookup","tripletToBase64","lookup","encodeChunk","uint8","output","extraBytes","parts","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","$Object","desc","Header","Demuxer","_stream$Transform","pendingBytes","pendingCb","header","_bytes","_processChunkId","remnd","pendingBt","chunkId","_processChunkSize","chunkSize","order","_processFormat","format","_processSubchunkHeader","subchunkId","subchunkSz","subchunk1Id","subchunk1Size","_processFmtChunk","subchunk2Id","subchunk2Size","audioFormat","$getPrototypeOf","fails","KEY","exp","$at","iterated","_t","_i","point","toInteger","TO_STRING","getKeys","cof","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","TO_STRING_TAG","DOMIterables","Collection","addToUnscopables","step","_k","Arguments","DESCRIPTORS","META","$fails","wks","wksDefine","enumKeys","gOPNExt","$GOPD","$DP","gOPN","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","isEnum","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","D","protoDesc","sym","iterator","$defineProperty","$defineProperties","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","fastKey","getWeak","onFreeze","meta","NEED","gOPS","getSymbols","symbols","windowNames","getWindowNames","setPrototypeOf","check","test","buggy","READABLE_STREAM","selectColor","hash","createDebug","enabled","curr","Date","ms","prevTime","prev","coerce","formatter","init","instances","skips","disable","stack","parse","parseFloat","h","fmtShort","round","fmtLong","plural","long","isBE","isInteger","Util","Decoder","frstFrame","currFrame","syncword","rawId3v2","_read_id3_header","getSizeFromID3v2Header","_read_id3v2_data","_read_frame_header","makeFrameHeader","frameSize","_read_frame_data","decodeFrame","bProtect","_read_frame_crc","Bitstream","FrameHeader","layer","bitrate","freq","bPadding","bPrivate","mode","extension","bCopyright","bOriginal","emphasis","PCMFrame","_PCMFrame","MP3Frame","bitrates","frequencies","framesize","Layer3","FltOut","bInitialized","layer3","initialize","clear","retrieveDecoder","asBuffer","SampleBuffer","filter1","SynthesisFilter","filter2","LAYER3","reorder","scalefac_band","ix","huffcodetab","BitReserve","header0","filtera","filterb","buffer0","CheckSumHuff","part2_start","is_pos","is_ratio","samples1","samples2","tsOutCopy","rawout","inithuff","is_1d","SBLIMIT","SSLIMIT","ro","map","lr","out_1d","prevblck","nonzero","scalefac","temporaire2","sfBandIndex","l0","s0","l1","s1","l2","s2","l3","s3","l4","s4","l5","s5","l6","s6","l7","s7","l8","s8","SBI","reorder_table","frame_start","SINGLE_CHANNEL","max_gr","MPEG1","sfreq","MPEG25_LSF","br","si","III_side_info_t","nSlots","slots","flush_main","gr","ch","ss","sb","sb18","main_data_end","bytes_to_discard","get_side_info","hputbuf","hsstell","hgetbits","main_data_begin","rewindNbytes","get_scale_factors","huffman_decode","dequantize_sample","antialias","hybrid","input_samples","calculate_pcm_samples","private_bits","scfsi","part2_3_length","big_values","global_gain","scalefac_compress","window_switching_flag","block_type","mixed_block_flag","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","gr_info","scale_comp","length0","slen","length1","part2_3_end","num_bits","region1Start","region2Start","buf1","ht","huffman_decoder","rewindNbits","xr","xr_1d","cb_begin","cb_width","next_cb_boundary","t_index","g_gain","reste","quotien","abv","t_43","d43","two_to_negative_half_pow","pretab","mode_ext","ms_stereo","JOINT_STEREO","freq3","sfb_start","sfb_lines","src_line","des_line","sfb_start3","sb18lim","src_idx1","src_idx2","bu","bd","cs","ca","bt","tsOut","cc","inv_mdct","prvblk","inp","win_bt","tmpf_0","tmpf_1","tmpf_2","tmpf_3","tmpf_4","tmpf_5","tmpf_6","tmpf_7","tmpf_8","tmpf_9","tmpf_10","tmpf_11","tmpf_12","tmpf_13","tmpf_14","tmpf_15","tmpf_16","tmpf_17","six_i","pp1","pp2","sum","tmp0","tmp1","tmp2","tmp3","tmp4","tmp0_","tmp1_","tmp2_","tmp3_","tmp0o","tmp1o","tmp2o","tmp3o","tmp4o","tmp0_o","tmp1_o","tmp2_o","tmp3_o","i00","iip12","i66_","i0","i0p12","i6_","win","gr_info_s","temporaire","thel","thes","t43","XLEN","YLEN","LINBITS","LINMAX","REF","TABLE","HLEN","VAL","TREELEN","inst","tablename0","tablename1","tablename2","xlen","ylen","linbits","linmax","ref","hlen","treelen","ValTab0","ValTab1","ValTab2","ValTab3","ValTab4","ValTab5","ValTab6","ValTab7","ValTab8","ValTab9","ValTab10","ValTab11","ValTab12","ValTab13","ValTab14","ValTab15","ValTab16","ValTab24","ValTab32","ValTab33","level","hget1bit","BUFSIZE","BUFSIZE_MASK","totbit","buf_byte_idx","ofs","N","Short","MAX_VALUE","MIN_VALUE","frequency","bufferp","channel","fs","outBuf","outPos","channelnumber","factor","eq0","_tmpOut","actual_v","actual_write_pos","v1","v2","samples","scalefactor","setEQ","reset","eq","compute_new_v","compute_pcm_samples","new_v0","new_v1","new_v2","new_v3","new_v4","new_v5","new_v6","new_v7","new_v8","new_v9","new_v10","new_v11","new_v12","new_v13","new_v14","new_v15","new_v16","new_v17","new_v18","new_v19","new_v20","new_v21","new_v22","new_v23","new_v24","new_v25","new_v26","new_v27","new_v28","new_v29","new_v30","new_v31","s9","s10","s11","s12","s13","s14","s15","s16","s17","s18","s19","s20","s21","s22","s23","s24","s25","s26","s27","s28","s29","s30","s31","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","pp0","pp3","pp4","pp5","pp6","pp7","pp8","cos1_32","pp9","cos3_32","pp10","cos5_32","pp11","cos7_32","pp12","cos9_32","pp13","cos11_32","pp14","cos13_32","pp15","cos15_32","cos1_16","cos3_16","cos5_16","cos7_16","cos1_8","cos3_8","cos1_4","cos1_64","cos3_64","cos5_64","cos7_64","cos9_64","cos11_64","cos13_64","cos15_64","cos17_64","cos19_64","cos21_64","cos23_64","cos25_64","cos27_64","cos29_64","cos31_64","vp","tmpOut","dvp","pcm_sample","dp","d16","compute_pcm_samples0","compute_pcm_samples1","compute_pcm_samples2","compute_pcm_samples3","compute_pcm_samples4","compute_pcm_samples5","compute_pcm_samples6","compute_pcm_samples7","compute_pcm_samples8","compute_pcm_samples9","compute_pcm_samples10","compute_pcm_samples11","compute_pcm_samples12","compute_pcm_samples13","compute_pcm_samples14","compute_pcm_samples15","appendSamples","ar","bs","MY_PI","cos","AACDecoder","mpeg_version","mpeg_layer","no_crc","num_frames","dataLength","Elements","FilterBank","filterBank","IS","MS","fils","sbrPresent","psPresent","elementType","decodeSCE_LFE","decodeCPE","decodeFIL","chs","processPair","cpe","ics1","getLeftChannel","ics2","getRightChannel","info1","info2","iqData1","getInstanceTag","getInvQuantData","iqData2","isCommonWindow","isMSMaskPresent","isTNSDataPresent","getTNS","getWindowSequence","getCurrentWindowShape","getPreviousWindowShape","element","isSBRPresent","getSBR","isPSUsed","ONLY_LONG_SEQUENCE","SFB","windowShape","_windowSequence","windowGroupLength","predictionDataPresent","windowCount","swbCount","swbOffsets","skipBit","windowSequence","SWB_OFFSET_SHORT_WINDOW","SWB_SHORT_WINDOW_COUNT","SWB_OFFSET_LONG_WINDOW","SWB_LONG_WINDOW_COUNT","seq","Int16Array","SWB_OFFSET_1024_96","SWB_OFFSET_1024_64","SWB_OFFSET_1024_48","SWB_OFFSET_1024_32","SWB_OFFSET_1024_24","SWB_OFFSET_1024_16","SWB_OFFSET_1024_8","SWB_OFFSET_128_96","SWB_OFFSET_128_64","SWB_OFFSET_128_48","SWB_OFFSET_128_24","SWB_OFFSET_128_16","SWB_OFFSET_128_8","CODEBOOKS","findOffset","UNSIGNED","signValues","QUAD_LEN","PAIR_LEN","getEscape","HCB_SF","cw","neg","HCB1","HCB2","HCB3","HCB4","HCB5","HCB6","HCB7","HCB8","HCB9","HCB10","HCB11","ScaleFactorTable","nFilt","getWindowCount","SHORT_BITS","LONG_BITS","filt","coefLen","coefRes","coefCompress","spec","int","TYPE_RESERVED","downSampledSBR","sbrEnabled","decodeExtensionPayload","pos2","bitsLeft","decodeDynamicRangeInfo","decodeSBR","specL","specR","getSfbCB","getSectEnd","getScaleFactors","scale","isMSUsed","sfbCBl","sfbCBr","t","Windows","MDCT","shortLen","LONG_WINDOWS","SINE_1024","KBD_1024","SHORT_WINDOWS","SINE_128","KBD_128","mid","trans","mdctShort","mdctLong","overlaps","windowShapePrev","overlap","sin","PI","alpha","PIN","alpha2","bessel","sqrt","generateSineWindow","generateKBDWindow","Tables","FFT","N2","N4","N8","sincos","MDCT_TABLE_2048","MDCT_TABLE_256","MDCT_TABLE_1920","MDCT_TABLE_240","fft","inOff","outOff","MDCTTables","roots","FFT_TABLE_64","tabln","FFT_TABLE_512","FFT_TABLE_60","FFT_TABLE_480","forward","imOff","rev","ii","a0","a1","b0","b1","c0","c1","d0","d1","e1_0","e1_1","e2_0","e2_1","km","rootRe","rootIm","zRe","zIm","FFTTables","cosT","sinT","lastImag","generateShortTable","generateLongTable"],"mappings":"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Y,UAAY,YAAc,WAAa,WAAa,WAAa,YAAc,SAAW,SAAU,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,UAAY,UAAY,YAAc,WAAa,YAAc,UAAY,WAAa,SAAW,UAAW,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,UAAY,SAAW,YAAc,UAAY,YAAc,UAAY,YAAc,QAAU,UAAW,UAAY,SAAW,UAAY,WAAa,WAAa,WAAa,WAAa,UAAY,UAAY,YAAc,WAAa,WAAa,UAAY,YAAc,QAAU,UAAW,UAAY,SAAW,UAAY,WAAa,UAAY,WAAa,WAAa,UAAY,WAAa,WAAa,WAAa,WAAa,WAAa,WAAa,UAAY,UAAW,SAAW,UAAY,WAAa,WAAa,SAAW,WAAa,WAAa,UAAY,WAAa,YAAc,WAAa,YAAc,UAAY,YAAc,SAAW,UAAW,SAAW,UAAY,SAAW,YAAc,UAAY,WAAa,WAAa,UAAY,WAAa,YAAc,WAAa,YAAc,WAAa,WAAa,UAAY,UAAW,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,YAAc,WAAa,YAAc,WAAa,YAAc,SAAW,UAAW,UAAY,UAAY,WAAa,WAAa,WAAa,WAAa,WAAa,UAAY,UAAY,YAAc,UAAY,YAAc,WAAa,WAAa,SAAW,UAAW,UAAY,UAAY,UAAY,YAAc,WAAa,WAAa,WAAa,UAAY,WAAa,YAAc,WAAa,YAAc,UAAY,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,YAAc,WAAa,WAAa,UAAY,UAAY,WAAa,YAAc,YAAc,WAAa,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,YAAc,WAAa,WAAa,UAAY,UAAY,WAAa,YAAc,YAAc,YAAc,WAAa,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,YAAc,WAAa,WAAa,UAAY,WAAa,WAAa,YAAc,YAAc,WAAa,WAAa,WAAa,UAAW,SAAW,UAAY,WAAa,WAAa,WAAa,WAAa,UAAY,UAAY,WAAa,WAAa,YAAc,WAAa,YAAc,WAAa,WAAa,UAAW,SAAW,WAAa,WAAa,WAAa,YAAc,WAAa,WAAa,UAAY,UAAY,UAAY,WAAa,WAAa,YAAc,WAAa,WAAa,UAAW,UAAY,UAAY,WAAa,WAAa,YAAc,WAAa,WAAa,UAAY,WAA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G,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,GAAI,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,GAAI,GAAI,EAAG,IAClB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,GAAI,GAAI,EAAG,GAAI,IAClB,EAAG,IAAK,EAAG,GAAI,EAAG,IAClB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,GAAI,IACjB,EAAG,IAAK,EAAG,GAAI,EAAG,IAClB,EAAG,IAAK,EAAG,GAAI,EAAG,IAClB,EAAG,KAAM,EAAG,GAAI,EAAG,IACnB,EAAG,IAAK,GAAI,EAAG,GAAI,IACnB,EAAG,IAAK,GAAI,EAAG,EAAG,IAClB,EAAG,IAAK,EAAG,EAAG,GAAI,IAClB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,KAAM,EAAG,EAAG,EAAG,IAClB,EAAG,IAAK,GAAI,GAAI,EAAG,IACnB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,KAAM,EAAG,EAAG,GAAI,IACnB,EAAG,KAAM,GAAI,GAAI,EAAG,IACpB,EAAG,KAAM,EAAG,GAAI,EAAG,IACnB,EAAG,IAAK,GAAI,GAAI,EAAG,IACnB,EAAG,IAAK,EAAG,GAAI,EAAG,IAClB,EAAG,IAAK,GAAI,EAAG,EAAG,IAClB,EAAG,KAAM,EAAG,EAAG,GAAI,IACnB,EAAG,KAAM,GAAI,EAAG,EAAG,IACnB,EAAG,KAAM,EAAG,EAAG,EAAG,IAClB,EAAG,KAAM,GAAI,EAAG,EAAG,IACnB,EAAG,KAAM,GAAI,EAAG,GAAI,IACpB,EAAG,IAAK,GAAI,GAAI,GAAI,IACpB,EAAG,IAAK,EAAG,EAAG,GAAI,IAClB,EAAG,IAAK,EAAG,GAAI,GAAI,IACnB,EAAG,IAAK,EAAG,GAAI,GAAI,IACnB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,KAAM,EAAG,EAAG,EAAG,IAClB,EAAG,KAAM,EAAG,GAAI,GAAI,IACpB,EAAG,IAAK,EAAG,EAAG,GAAI,IAClB,EAAG,IAAK,GAAI,EAAG,GAAI,IACnB,EAAG,IAAK,GAAI,EAAG,EAAG,IAClB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,GAAI,EAAG,GAAI,IACnB,EAAG,KAAM,EAAG,GAAI,EAAG,IACnB,EAAG,IAAK,GAAI,GAAI,EAAG,IACnB,EAAG,KAAM,GAAI,GAAI,GAAI,IACrB,EAAG,KAAM,EAAG,EAAG,GAAI,IACnB,EAAG,KAAM,EAAG,EAAG,EAAG,IAClB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,KAAM,GAAI,EAAG,GAAI,IACpB,EAAG,IAAK,GAAI,EAAG,EAAG,IAClB,EAAG,KAAM,EAAG,GAAI,GAAI,IACpB,EAAG,KAAM,GAAI,EAAG,EAAG,IACnB,EAAG,IAAK,EAAG,GAAI,GAAI,IACnB,EAAG,IAAK,GAAI,GAAI,GAAI,IACpB,EAAG,KAAM,GAAI,GAAI,EAAG,IACpB,EAAG,IAAK,EAAG,GAAI,EAAG,IAClB,EAAG,IAAK,EAAG,EAAG,GAAI,IAGjBC,IACD,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,KAAM,EAAG,EAAG,EAAG,IACnB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IACpB,GAAI,MAAO,EAAG,EAAG,EAAG,IAGnBC,IACD,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,GAAI,EAAG,EAAG,EAAG,IAChB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,IAAK,EAAG,EAAG,EAAG,IACjB,EAAG,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AAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,EAAG,IACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,GAAI,IACd,GAAI,KAAM,EAAG,KACb,GAAI,KAAM,EAAG,KACb,GAAI,MAAO,EAAG,KACd,GAAI,MAAO,GAAI,IACf,GAAI,MAAO,EAAG,KACd,GAAI,MAAO,EAAG,KACd,GAAI,MAAO,EAAG,KACd,GAAI,MAAO,EAAG,KACd,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,IACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,IACf,GAAI,MAAO,GAAI,IACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KACf,GAAI,MAAO,GAAI,KAGdC,IACD,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IACT,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,GAAI,EAAG,IACV,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,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,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,KACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,IACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,EAAG,IAAK,EAAG,KACX,EAAG,IAAK,GAAI,IACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,KACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,IACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK,GAAI,IACb,GAAI,IAAK,EAAG,KACZ,GAAI,IAAK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CA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,gBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,gBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,eACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,gBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,gBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,gBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,gBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,eACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,gBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,iBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,gBACA,kBACA,kBACA,gBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,gBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,gBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,cACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,eACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,gBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,gBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,gBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,gBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,sB9IkvIE,SAAU5wB,EAAQD,EAASM,GAEjC,YAWA,SAASgR,GAAuBjP,GAAO,MAAOA,IAAOA,EAAIb,WAAaa,GAAQN,QAASM,GARvF,GAAIkc,GAAmBje,EAAoB,GAEvCke,EAAmBlN,EAAuBiN,GAE1CE,EAAgBne,EAAoB,GAEpCoe,EAAgBpN,EAAuBmN,E+I9vY3Cxe,GAAOD,QAAP,mBAAA4uB,MAAA,EAAApQ,EAAAzc,SAAA3B,KAAAwuB,GAAA,SAAAlQ,EAAA3c,SAAA6sB,EAAA,OAAAhsB,IAAA,SAAAiB,MAAA,SAOkB69C,GACV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iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBAGlBE,IACD,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,gBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBAGlBH,IACD,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,eAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,cAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,cAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,eAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBAGlBE,IACD,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,aAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,eAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,eAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,gBAAmB,mBACnB,gBAAmB,iBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,eAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,iBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,eAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,kBACnB,gBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,gBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,gBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,mBACnB,iBAAmB,kBACnB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","file":"browser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Decoders\"] = factory();\n\telse\n\t\troot[\"Decoders\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Decoders\"] = factory();\n\telse\n\t\troot[\"Decoders\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 69);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(73);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(71)\nvar ieee754 = __webpack_require__(72)\nvar isArray = __webpack_require__(48)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(78), __esModule: true };\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__(54);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__(106);\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__(110);\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__(54);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(7);\nvar core = __webpack_require__(3);\nvar ctx = __webpack_require__(49);\nvar hide = __webpack_require__(13);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(18);\nvar IE8_DOM_DEFINE = __webpack_require__(50);\nvar toPrimitive = __webpack_require__(28);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(19)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(62).EventEmitter;\nvar inherits = __webpack_require__(17);\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(113);\nStream.Writable = __webpack_require__(114);\nStream.Duplex = __webpack_require__(115);\nStream.Transform = __webpack_require__(116);\nStream.PassThrough = __webpack_require__(117);\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(9);\nvar createDesc = __webpack_require__(22);\nmodule.exports = __webpack_require__(10) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(87);\nvar defined = __webpack_require__(29);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(31)('wks');\nvar uid = __webpack_require__(23);\nvar Symbol = __webpack_require__(7).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(14);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = __webpack_require__(21);\nutil.inherits = __webpack_require__(17);\n/*</replacement>*/\n\nvar Readable = __webpack_require__(63);\nvar Writable = __webpack_require__(42);\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(118);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n    elements: {\n        SCE: 0,\n        CPE: 1,\n        CCE: 2,\n        LFE: 3,\n        DSE: 4,\n        PCE: 5,\n        FIL: 6,\n        END: 7\n    },\n\n    MAX_ELEMENTS: 16,\n    MAX_SECTIONS: 120,\n    MAX_MS_MASK: 128,\n\n    WINDOW_LEN_LONG: 1024,\n    WINDOW_LEN_SHORT: 128,\n    WINDOW_SMALL_LEN_LONG: 960,\n    WINDOW_SMALL_LEN_SHORT: 120\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PCM = __webpack_require__(44);\n\nmodule.exports = function (_PCM) {\n    (0, _inherits3.default)(AACFrame, _PCM);\n\n    function AACFrame() {\n        (0, _classCallCheck3.default)(this, AACFrame);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (AACFrame.__proto__ || (0, _getPrototypeOf2.default)(AACFrame)).call(this));\n\n        _this.profile = null;\n\n        _this.samplingIndex = null;\n\n        _this.channelConfig = null;\n\n        _this.hasCrc = null;\n\n        _this.length = null;\n        return _this;\n    }\n\n    (0, _createClass3.default)(AACFrame, [{\n        key: 'isErrorResilientProfile',\n\n\n        // decoder config getters\n\n        value: function isErrorResilientProfile() {\n            return this.profile > 16;\n        }\n    }, {\n        key: 'frameLength',\n        get: function get() {\n            // For AAC-LC its 1024 for long windows and 128 for short windows and its fixed\n            return 1024;\n        }\n    }, {\n        key: 'dataLength',\n        get: function get() {\n            return this.length - (this.hasCrc ? 9 : 7);\n        }\n\n        // pcm getters\n\n    }, {\n        key: 'channels',\n        get: function get() {\n            switch (this.channelConfig) {\n                case 2:\n                    return this.channelConfig;\n                default:\n                    throw 'Fixme: unsupported channelConfig';\n            }\n        }\n    }, {\n        key: 'sampleRate',\n        get: function get() {\n            switch (this.samplingIndex) {\n                case 3:\n                    return 48000;\n                case 4:\n                    return 44100;\n                case 7:\n                    return 22050;\n                case 10:\n                    return 11025;\n                default:\n                    throw 'Fixme: unsupported samplingIndex';\n            }\n        }\n    }, {\n        key: 'bitsPerSample',\n        get: function get() {\n            return 16;\n        }\n    }]);\n    return AACFrame;\n}(PCM);\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(14);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(31)('keys');\nvar uid = __webpack_require__(23);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(7);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(18);\nvar dPs = __webpack_require__(86);\nvar enumBugKeys = __webpack_require__(37);\nvar IE_PROTO = __webpack_require__(30)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(51)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(91).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(57);\nvar enumBugKeys = __webpack_require__(37);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(9).f;\nvar has = __webpack_require__(11);\nvar TAG = __webpack_require__(16)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.f = __webpack_require__(16);\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(7);\nvar core = __webpack_require__(3);\nvar LIBRARY = __webpack_require__(33);\nvar wksExt = __webpack_require__(39);\nvar defineProperty = __webpack_require__(9).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = __webpack_require__(2).Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = __webpack_require__(21);\nutil.inherits = __webpack_require__(17);\n/*</replacement>*/\n\nvar Stream = __webpack_require__(12);\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = __webpack_require__(24);\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(24);\n\n/*<replacement>*/\nvar util = __webpack_require__(21);\nutil.inherits = __webpack_require__(17);\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _isInteger = __webpack_require__(121);\n\nvar _isInteger2 = _interopRequireDefault(_isInteger);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @property {Number} channels\n * @property {Number} sampleRate\n * @property {Number} bitsPerSample\n * @type {PCMFormat}\n */\nmodule.exports = function () {\n  function PCMFormat() {\n    (0, _classCallCheck3.default)(this, PCMFormat);\n  }\n\n  (0, _createClass3.default)(PCMFormat, [{\n    key: \"byteRate\",\n\n    /**\n     * bytes per second\n     * @returns {Number}\n     */\n    get: function get() {\n      var byteRate = this.bitsPerSample * this.channels * this.sampleRate / 8;\n      console.assert((0, _isInteger2.default)(byteRate));\n      return byteRate;\n    }\n\n    /**\n     * bytes per single sample\n     * @returns {number}\n     */\n\n  }, {\n    key: \"blockAlign\",\n    get: function get() {\n      var blockAlign = this.bitsPerSample * this.channels / 8;\n      console.assert((0, _isInteger2.default)(blockAlign));\n      return blockAlign;\n    }\n  }]);\n  return PCMFormat;\n}();\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BYTE = 8;\nvar READ = 'readUInt8';\n\nmodule.exports = function () {\n    function BitStream(buffer) {\n        (0, _classCallCheck3.default)(this, BitStream);\n\n        this.buffer = buffer;\n        this.bitPosition = 0;\n        this.maxPosition = buffer.length * BYTE;\n    }\n\n    (0, _createClass3.default)(BitStream, [{\n        key: 'available',\n        value: function available() {\n            return this.maxPosition - this.bitPosition;\n        }\n    }, {\n        key: 'skipBit',\n        value: function skipBit() {\n            return this.skipBits(1);\n        }\n    }, {\n        key: 'skipBits',\n        value: function skipBits(bits) {\n            if (this.available() < bits) throw 'Unable to skipBitspast the end of stream';\n            this.bitPosition += bits;\n            return this;\n        }\n    }, {\n        key: 'readBit',\n        value: function readBit() {\n            return this.readBits(1);\n        }\n    }, {\n        key: 'readBits',\n        value: function readBits(bits) {\n            var res = 0;\n\n            if (this.available() < bits) throw 'Unable to readBits past the end of stream';\n\n            while (bits) {\n                var pow = BYTE - 1 - this.bitPosition % BYTE;\n                var int = this.buffer[READ](this.bitPosition / BYTE ^ 0);\n\n                res = res << 1 | (int & 1 << pow) >> pow;\n\n                this.bitPosition++;\n                bits--;\n            }\n\n            return res;\n        }\n    }]);\n    return BitStream;\n}();\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function Element() {\n        (0, _classCallCheck3.default)(this, Element);\n\n        this.instanceTag = null;\n        this.sbr = null;\n    }\n\n    (0, _createClass3.default)(Element, [{\n        key: 'readInstanceTag',\n        value: function readInstanceTag(bitStream) {\n            this.instanceTag = bitStream.readBits(4);\n        }\n    }, {\n        key: 'getInstanceTag',\n        value: function getInstanceTag() {\n            return this.instanceTag;\n        }\n    }, {\n        key: 'decodeSBR',\n        value: function decodeSBR(bitStream, sf, count, stereo, crc, downSampled, smallFrames) {\n            throw 'not implemented';\n        }\n    }, {\n        key: 'isSBRPresent',\n        value: function isSBRPresent() {\n            return this.sbr != null;\n        }\n    }, {\n        key: 'getSBR',\n        value: function getSBR() {\n            return this.sbr;\n        }\n    }]);\n    return Element;\n}();\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function HCB() {\n        (0, _classCallCheck3.default)(this, HCB);\n    }\n\n    (0, _createClass3.default)(HCB, null, [{\n        key: \"ZERO_HCB\",\n        get: function get() {\n            return 0;\n        }\n    }, {\n        key: \"ESCAPE_HCB\",\n        get: function get() {\n            return 11;\n        }\n    }, {\n        key: \"NOISE_HCB\",\n        get: function get() {\n            return 13;\n        }\n    }, {\n        key: \"INTENSITY_HCB2\",\n        get: function get() {\n            return 14;\n        }\n    }, {\n        key: \"INTENSITY_HCB\",\n        get: function get() {\n            return 15;\n        }\n        //\n\n    }, {\n        key: \"FIRST_PAIR_HCB\",\n        get: function get() {\n            return 5;\n        }\n    }]);\n    return HCB;\n}();\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(76);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(10) && !__webpack_require__(19)(function () {\n  return Object.defineProperty(__webpack_require__(51)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(14);\nvar document = __webpack_require__(7).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(29);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(11);\nvar toObject = __webpack_require__(52);\nvar IE_PROTO = __webpack_require__(30)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(81);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(96);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(33);\nvar $export = __webpack_require__(8);\nvar redefine = __webpack_require__(56);\nvar hide = __webpack_require__(13);\nvar has = __webpack_require__(11);\nvar Iterators = __webpack_require__(34);\nvar $iterCreate = __webpack_require__(85);\nvar setToStringTag = __webpack_require__(38);\nvar getPrototypeOf = __webpack_require__(53);\nvar ITERATOR = __webpack_require__(16)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(11);\nvar toIObject = __webpack_require__(15);\nvar arrayIndexOf = __webpack_require__(88)(false);\nvar IE_PROTO = __webpack_require__(30)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(57);\nvar hiddenKeys = __webpack_require__(37).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(41);\nvar createDesc = __webpack_require__(22);\nvar toIObject = __webpack_require__(15);\nvar toPrimitive = __webpack_require__(28);\nvar has = __webpack_require__(11);\nvar IE8_DOM_DEFINE = __webpack_require__(50);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(48);\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = __webpack_require__(2).Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = __webpack_require__(62).EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = __webpack_require__(12);\n\n/*<replacement>*/\nvar util = __webpack_require__(21);\nutil.inherits = __webpack_require__(17);\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = __webpack_require__(64).StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = __webpack_require__(64).StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = __webpack_require__(2).Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(43);\n\n/*<replacement>*/\nvar util = __webpack_require__(21);\nutil.inherits = __webpack_require__(17);\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Element = __webpack_require__(46);\nvar ICStream = __webpack_require__(67);\nvar AACFrame = __webpack_require__(27);\nvar MSMask = __webpack_require__(142);\nvar Constants = __webpack_require__(26);\n\nmodule.exports = function (_Element) {\n    (0, _inherits3.default)(CPE, _Element);\n\n    function CPE(frame) {\n        (0, _classCallCheck3.default)(this, CPE);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (CPE.__proto__ || (0, _getPrototypeOf2.default)(CPE)).call(this));\n\n        console.assert(frame instanceof AACFrame);\n        _this.frame = frame;\n\n        _this.msMask = null;\n\n        // private boolean[] msUsed;\n        _this.msUsed = new Uint8Array(Constants.MAX_MS_MASK);\n\n        _this.commonWindow = null;\n\n        _this.icsL = new ICStream(frame);\n        _this.icsR = new ICStream(frame);\n        return _this;\n    }\n\n    (0, _createClass3.default)(CPE, [{\n        key: 'decode',\n        value: function decode(bitStream) {\n            this.readInstanceTag(bitStream);\n\n            this.commonWindow = bitStream.readBits(1);\n\n            var info = this.icsL.getInfo();\n\n            if (this.commonWindow) {\n                info.decode(bitStream, this.commonWindow);\n\n                this.icsR.getInfo().setData(info);\n\n                this.msMask = MSMask.forInt(bitStream.readBits(2));\n\n                if (MSMask.TYPE_USED === this.msMask) {\n                    var maxSFB = info.getMaxSFB();\n                    var windowGroupCount = info.getWindowGroupCount();\n\n                    for (var idx = 0; idx < windowGroupCount * maxSFB; idx++) {\n                        this.msUsed[idx] = bitStream.readBit();\n                    }\n                } else if (MSMask.TYPE_ALL_1 === this.msMask) {\n                    this.msUsed.fill(1);\n                } else if (MSMask.TYPE_ALL_0 === this.msMask) {\n                    this.msUsed.fill(0);\n                } else {\n                    throw \"reserved MS mask type used\";\n                }\n            } else {\n                this.msMask = MSMask.TYPE_ALL_0;\n                this.msUsed.fill(0);\n            }\n\n            if (this.frame.isErrorResilientProfile()) {\n                throw 'not implemented';\n            }\n\n            this.icsL.decode(bitStream, this.commonWindow);\n\n            this.icsR.decode(bitStream, this.commonWindow);\n\n            return this;\n        }\n    }, {\n        key: 'isCommonWindow',\n        value: function isCommonWindow() {\n            return !!this.commonWindow;\n        }\n    }, {\n        key: 'getLeftChannel',\n        value: function getLeftChannel() {\n            return this.icsL;\n        }\n    }, {\n        key: 'getRightChannel',\n        value: function getRightChannel() {\n            return this.icsR;\n        }\n    }, {\n        key: 'isMSMaskPresent',\n        value: function isMSMaskPresent() {\n            return MSMask.TYPE_ALL_0 !== this.msMask;\n        }\n    }, {\n        key: 'isMSUsed',\n        value: function isMSUsed(off) {\n            return !!this.msUsed[off];\n        }\n    }]);\n    return CPE;\n}(Element);\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ICSInfo = __webpack_require__(136);\nvar AACFrame = __webpack_require__(27);\nvar Constants = __webpack_require__(26);\nvar HCB = __webpack_require__(47);\nvar Huffman = __webpack_require__(138);\nvar SFT = __webpack_require__(139);\nvar TNS = __webpack_require__(140);\nvar IQT = __webpack_require__(141);\n\nvar SF_DELTA = 60;\nvar SF_OFFSET = 200;\n\nmodule.exports = function () {\n    function ICStream(frame) {\n        (0, _classCallCheck3.default)(this, ICStream);\n\n        console.assert(frame instanceof AACFrame);\n        this.frame = frame;\n\n        this.info = new ICSInfo(frame);\n\n        // private final int[] sfbCB;\n        this.sfbCB = new Int32Array(Constants.MAX_SECTIONS);\n\n        // private final int[] sectEnd;\n        this.sectEnd = new Int32Array(Constants.MAX_SECTIONS);\n\n        // private final float[] data;\n        this.data = new Float32Array(frame.frameLength);\n\n        // private final float[] scaleFactors;\n        this.scaleFactors = new Float32Array(Constants.MAX_SECTIONS);\n\n        this.globalGain = null;\n        this.pulseDataPresent = null;\n        this.tnsDataPresent = null;\n        this.gainControlPresent = null;\n\n        this.randomState = 0x1F2E3D4C;\n    }\n\n    (0, _createClass3.default)(ICStream, [{\n        key: 'decode',\n        value: function decode(bitStream, commonWindow) {\n            var er = this.frame.isErrorResilientProfile();\n            if (er) {\n                throw 'errorResilientProfile not implemented';\n            }\n\n            this.globalGain = bitStream.readBits(8);\n\n            if (!commonWindow) {\n                this.info.decode(bitStream, commonWindow);\n            }\n\n            this.decodeSectionData(bitStream /* fixme: conf.isSectionDataResilienceUsed() */);\n\n            this.decodeScaleFactors(bitStream);\n\n            this.pulseDataPresent = !!bitStream.readBit();\n\n            if (this.pulseDataPresent) {\n                if (this.info.isEightShortFrame()) throw \"pulse data not allowed for short frames\";\n                // fixme: decodePulseData(in);\n                throw 'decodePulseData(in)';\n            }\n\n            this.tnsDataPresent = !!bitStream.readBit();\n            if (this.tnsDataPresent && !er) {\n                if (!this.tns) this.tns = new TNS();\n                this.tns.decode(bitStream, this.info);\n            }\n\n            this.gainControlPresent = !!bitStream.readBit();\n            if (this.gainControlPresent) {\n                throw 'gainControl.decode(in, info.getWindowSequence())';\n            }\n\n            // fixme: conf.isSpectralDataResilienceUsed()\n\n            this.decodeSpectralData(bitStream);\n        }\n    }, {\n        key: 'decodeSectionData',\n        value: function decodeSectionData(bitStream, sectionDataResilienceUsed) {\n\n            this.sfbCB.fill(0);\n            this.sectEnd.fill(0);\n\n            var bits = this.info.isEightShortFrame() ? 3 : 5;\n            var escVal = (1 << bits) - 1;\n\n            var windowGroupCount = this.info.getWindowGroupCount();\n            var maxSFB = this.info.getMaxSFB();\n\n            var end = void 0,\n                cb = void 0,\n                incr = void 0,\n                idx = 0;\n\n            for (var g = 0; g < windowGroupCount; g++) {\n                var k = 0;\n\n                while (k < maxSFB) {\n                    end = k, cb = bitStream.readBits(4);\n\n                    if (12 === cb) throw \"invalid huffman codebook: 12\";\n\n                    while ((incr = bitStream.readBits(bits)) === escVal) {\n                        end += incr;\n                    }\n\n                    end += incr;\n\n                    if (end > maxSFB) throw \"too many bands: \" + end + \", allowed: \" + maxSFB;\n\n                    for (; k < end; k++) {\n                        this.sfbCB[idx] = cb;\n                        this.sectEnd[idx++] = end;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'decodeScaleFactors',\n        value: function decodeScaleFactors(bitStream) {\n            var windowGroups = this.info.getWindowGroupCount();\n            var maxSFB = this.info.getMaxSFB();\n\n            //0: spectrum, 1: noise, 2: intensity\n            var offset = [this.globalGain, this.globalGain - 90, 0];\n\n            var tmp = void 0,\n                noiseFlag = true;\n\n            var sfb = void 0,\n                idx = 0;\n\n            for (var g = 0; g < windowGroups; g++) {\n                for (sfb = 0; sfb < maxSFB;) {\n                    var end = this.sectEnd[idx];\n\n                    switch (this.sfbCB[idx]) {\n                        case HCB.ZERO_HCB:\n                            for (; sfb < end; sfb++, idx++) {\n                                this.scaleFactors[idx] = 0;\n                            }\n                            break;\n                        case HCB.INTENSITY_HCB:\n                        case HCB.INTENSITY_HCB2:\n                            for (; sfb < end; sfb++, idx++) {\n                                offset[2] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                                tmp = Math.min(Math.max(offset[2], -155), 100);\n                                this.scaleFactors[idx] = SFT.SCALEFACTOR_TABLE[-tmp + SF_OFFSET];\n                            }\n                            break;\n                        case HCB.NOISE_HCB:\n                            throw 'not implemented';\n                        // for(; sfb < end; sfb++, idx++) {\n                        //     if(noiseFlag) {\n                        //         offset[1] += bitStream.readBits(9) - 256;\n                        //         noiseFlag = false;\n                        //     }\n                        //     else offset[1] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                        //     tmp = Math.min(Math.max(offset[1], -100), 155);\n                        //    this.scaleFactors[idx] = -SCALEFACTOR_TABLE[tmp+SF_OFFSET];\n                        // }\n                        // break;\n                        default:\n                            for (; sfb < end; sfb++, idx++) {\n                                offset[0] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                                if (offset[0] > 255) throw \"scalefactor out of range: \" + offset[0];\n                                this.scaleFactors[idx] = SFT.SCALEFACTOR_TABLE[offset[0] - 100 + SF_OFFSET];\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'decodeSpectralData',\n        value: function decodeSpectralData(bitStream) {\n\n            this.data.fill(0);\n\n            var maxSFB = this.info.getMaxSFB();\n\n            var windowGroups = this.info.getWindowGroupCount();\n\n            var offsets = this.info.getSWBOffsets();\n\n            // final int[] buf = new int[4];\n            var buf = new Int32Array(4);\n\n            var sfb = void 0,\n                j = void 0,\n                k = void 0,\n                w = void 0,\n                hcb = void 0,\n                off = void 0,\n                width = void 0,\n                num = void 0;\n\n            var groupOff = 0,\n                idx = 0;\n\n            for (var g = 0; g < windowGroups; g++) {\n                var groupLen = this.info.getWindowGroupLength(g);\n\n                for (sfb = 0; sfb < maxSFB; sfb++, idx++) {\n                    hcb = this.sfbCB[idx];\n                    off = groupOff + offsets[sfb];\n                    width = offsets[sfb + 1] - offsets[sfb];\n\n                    if (hcb === HCB.ZERO_HCB || hcb === HCB.INTENSITY_HCB || hcb === HCB.INTENSITY_HCB2) {\n                        for (w = 0; w < groupLen; w++, off += 128) {\n                            this.data.fill(off, off + width, 0);\n                        }\n                    } else if (hcb === HCB.NOISE_HCB) {\n                        throw 'not implemented';\n                        //apply PNS: fill with random values\n                        for (w = 0; w < groupLen; w++, off += 128) {\n                            var energy = 0.0;\n\n                            for (k = 0; k < width; k++) {\n                                // fixme: uint math overflow\n                                this.randomState *= 1664525 + 1013904223;\n                                this.data[off + k] = this.randomState;\n                                energy += this.data[off + k] * data[off + k];\n                            }\n\n                            var scale = this.scaleFactors[idx] / Math.sqrt(energy);\n\n                            for (k = 0; k < width; k++) {\n                                this.data[off + k] *= scale;\n                            }\n                        }\n                    } else {\n                        for (w = 0; w < groupLen; w++, off += 128) {\n                            num = hcb >= HCB.FIRST_PAIR_HCB ? 2 : 4;\n                            for (k = 0; k < width; k += num) {\n                                Huffman.decodeSpectralData(bitStream, hcb, buf, 0);\n\n                                //inverse quantization & scaling\n                                for (j = 0; j < num; j++) {\n                                    this.data[off + k + j] = buf[j] > 0 ? IQT.IQ_TABLE[buf[j]] : -IQT.IQ_TABLE[-buf[j]];\n                                    this.data[off + k + j] *= this.scaleFactors[idx];\n                                }\n                            }\n                        }\n                    }\n                }\n                groupOff += groupLen << 7;\n            }\n        }\n    }, {\n        key: 'getInfo',\n        value: function getInfo() {\n            return this.info;\n        }\n    }, {\n        key: 'getInvQuantData',\n        value: function getInvQuantData() {\n            return this.data;\n        }\n    }, {\n        key: 'getSfbCB',\n        value: function getSfbCB() {\n            return this.sfbCB;\n        }\n    }, {\n        key: 'getSectEnd',\n        value: function getSectEnd() {\n            return this.sectEnd;\n        }\n    }, {\n        key: 'getScaleFactors',\n        value: function getScaleFactors() {\n            return this.scaleFactors;\n        }\n    }, {\n        key: 'getTNS',\n        value: function getTNS() {\n            return this.tns;\n        }\n    }, {\n        key: 'isTNSDataPresent',\n        value: function isTNSDataPresent() {\n            return this.tnsDataPresent;\n        }\n    }]);\n    return ICStream;\n}();\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Element = __webpack_require__(46);\nvar ICStream = __webpack_require__(67);\n\nmodule.exports = function (_Element) {\n    (0, _inherits3.default)(SCE_LFE, _Element);\n\n    function SCE_LFE(frame) {\n        (0, _classCallCheck3.default)(this, SCE_LFE);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SCE_LFE.__proto__ || (0, _getPrototypeOf2.default)(SCE_LFE)).call(this));\n\n        _this.ics = new ICStream(_this.frame = frame);\n        return _this;\n    }\n\n    (0, _createClass3.default)(SCE_LFE, [{\n        key: 'decode',\n        value: function decode(bitStream) {\n            this.readInstanceTag(bitStream);\n            this.ics.decode(bitStream, false);\n        }\n    }, {\n        key: 'getICStream',\n        value: function getICStream() {\n            return this.ics;\n        }\n    }]);\n    return SCE_LFE;\n}(Element);\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function Decoders() {\n        (0, _classCallCheck3.default)(this, Decoders);\n    }\n\n    (0, _createClass3.default)(Decoders, null, [{\n        key: 'factory',\n        value: function factory(type) {\n            type = type.toLowerCase();\n            if ('.' === type[0]) // extension?\n                type = type.substring(1);\n\n            switch (type) {\n                case 'mp3':\n                    return new Decoders.MP3();\n                case 'aac':\n                    return new Decoders.AAC();\n                case 'wav':\n                    return new Decoders.WAV();\n            }\n\n            return null;\n        }\n    }, {\n        key: 'Buffer',\n        value: function (_Buffer) {\n            function Buffer() {\n                return _Buffer.apply(this, arguments);\n            }\n\n            Buffer.toString = function () {\n                return _Buffer.toString();\n            };\n\n            return Buffer;\n        }(function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return new (Function.prototype.bind.apply(Buffer, [null].concat(args)))();\n        })\n    }, {\n        key: 'WAV',\n        get: function get() {\n            return __webpack_require__(77);\n        }\n    }, {\n        key: 'MP3',\n        get: function get() {\n            return __webpack_require__(125);\n        }\n    }, {\n        key: 'AAC',\n        get: function get() {\n            return __webpack_require__(133);\n        }\n    }]);\n    return Decoders;\n}();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(74), __esModule: true };\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(75);\nvar $Object = __webpack_require__(3).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(8);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperty: __webpack_require__(9).f });\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar stream = __webpack_require__(12);\nvar debug = __webpack_require__(25)('wav');\n\n// todo: may contain (id3) metadata, should limit the size of data section being piped\n\nvar Header = __webpack_require__(120);\n\nvar Demuxer = function (_stream$Transform) {\n    (0, _inherits3.default)(Demuxer, _stream$Transform);\n\n    function Demuxer() {\n        (0, _classCallCheck3.default)(this, Demuxer);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Demuxer.__proto__ || (0, _getPrototypeOf2.default)(Demuxer)).call(this));\n\n        _this.bytes = new Buffer(0);\n        _this.pendingBytes = 0;\n        _this.pendingCb = null;\n        _this.header = new Header();\n\n        debug('initialized');\n\n        _this._bytes(4, _this._processChunkId);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Demuxer, [{\n        key: '_transform',\n        value: function _transform(data, enc, callback) {\n            this.bytes = Buffer.concat([this.bytes, data]);\n\n            debug('_transform: received %d bytes', data.length);\n\n            while (this.pendingBytes) {\n                if (this.bytes.length < this.pendingBytes) {\n                    return callback();\n                }\n\n                var _bytes2 = new Buffer(this.pendingBytes);\n                var _remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n                this.bytes.copy(_bytes2, 0, 0, _bytes2.length);\n                this.bytes.copy(_remnd, 0, this.pendingBytes);\n                this.bytes = _remnd;\n\n                var pendingCb = this.pendingCb;\n                var pendingBt = this.pendingBytes;\n                this.pendingCb = null;\n                this.pendingBytes = null;\n\n                pendingCb.call(this, pendingBt, _bytes2);\n            }\n\n            debug('_transform: piping %d bytes of pcm data', this.bytes.length);\n\n            // push bytes aligned to header's blockAlign\n\n            var size = this.bytes.length - this.bytes.length % this.header.blockAlign;\n            var bytes = new Buffer(size);\n            var remnd = new Buffer(this.bytes.length - size);\n\n            this.bytes.copy(bytes, 0, 0, bytes.length);\n            this.bytes.copy(remnd, 0, size);\n\n            this.push(bytes);callback();\n            this.bytes = remnd;\n        }\n    }, {\n        key: '_bytes',\n        value: function _bytes(bytes, callback) {\n            if (bytes <= 0 || !callback) {\n                throw \"Invalid arguments\";\n            }\n\n            if (this.pendingCb) {\n                throw \"There is already pending callback\";\n            }\n\n            this.pendingBytes = bytes;\n            this.pendingCb = callback;\n        }\n    }, {\n        key: '_processChunkId',\n        value: function _processChunkId(size, data) {\n            var chunkId = this.header.chunkId = data.toString('ascii');\n\n            if ('RIFF' !== chunkId) throw 'Expected chunkId to be \"RIFF\"';\n\n            this._bytes(4, this._processChunkSize);\n        }\n    }, {\n        key: '_processChunkSize',\n        value: function _processChunkSize(size, data) {\n            this.header.chunkSize = data['readUInt32' + this.header.order](0);\n            this._bytes(4, this._processFormat);\n        }\n    }, {\n        key: '_processFormat',\n        value: function _processFormat(size, data) {\n            var format = this.header.format = data.toString('ascii');\n\n            if ('WAVE' !== format) throw 'Expected format to be \"WAVE\"';\n\n            this._bytes(8, this._processSubchunkHeader);\n        }\n    }, {\n        key: '_processSubchunkHeader',\n        value: function _processSubchunkHeader(size, data) {\n            var subchunkId = data.slice(0, 4).toString('ascii');\n            var subchunkSz = data.slice(4, 8)['readUInt32' + this.header.order](0);\n\n            switch (subchunkId) {\n                case \"fmt \":\n                    this.header.subchunk1Id = subchunkId;\n                    this.header.subchunk1Size = subchunkSz;\n                    this._bytes(subchunkSz, this._processFmtChunk);\n                    break;\n                case \"data\":\n                    this.header.subchunk2Id = subchunkId;\n                    this.header.subchunk2Size = subchunkSz;\n                    this.emit('header', this.header);\n                    break;\n                default:\n                    throw \"Unsupported subchunk - \" + subchunkId;\n            }\n        }\n    }, {\n        key: '_processFmtChunk',\n        value: function _processFmtChunk(size, data) {\n            var audioFormat = this.header.audioFormat = data['readUInt16' + this.header.order](0);\n            data = data.slice(2);\n\n            if (1 !== audioFormat) throw 'Expected audioFormat to be 1 (PCM)';\n\n            this.header.channels = data['readUInt16' + this.header.order](0);\n            data = data.slice(2);\n\n            this.header.sampleRate = data['readUInt32' + this.header.order](0);\n            data = data.slice(4);\n\n            var byteRate = data['readUInt32' + this.header.order](0);\n            data = data.slice(4);\n\n            var blockAlign = data['readUInt16' + this.header.order](0);\n            data = data.slice(2);\n\n            this.header.bitsPerSample = data['readUInt16' + this.header.order](0);\n\n            console.assert(this.header.byteRate === byteRate);\n            console.assert(this.header.blockAlign === blockAlign);\n\n            this._bytes(8, this._processSubchunkHeader);\n        }\n    }]);\n    return Demuxer;\n}(stream.Transform);\n\nmodule.exports = Demuxer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(79);\nmodule.exports = __webpack_require__(3).Object.getPrototypeOf;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = __webpack_require__(52);\nvar $getPrototypeOf = __webpack_require__(53);\n\n__webpack_require__(80)('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(8);\nvar core = __webpack_require__(3);\nvar fails = __webpack_require__(19);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(82), __esModule: true };\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(83);\n__webpack_require__(92);\nmodule.exports = __webpack_require__(39).f('iterator');\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at = __webpack_require__(84)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(55)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(32);\nvar defined = __webpack_require__(29);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(35);\nvar descriptor = __webpack_require__(22);\nvar setToStringTag = __webpack_require__(38);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(13)(IteratorPrototype, __webpack_require__(16)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(9);\nvar anObject = __webpack_require__(18);\nvar getKeys = __webpack_require__(36);\n\nmodule.exports = __webpack_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(58);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(15);\nvar toLength = __webpack_require__(89);\nvar toAbsoluteIndex = __webpack_require__(90);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(7).document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(93);\nvar global = __webpack_require__(7);\nvar hide = __webpack_require__(13);\nvar Iterators = __webpack_require__(34);\nvar TO_STRING_TAG = __webpack_require__(16)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(94);\nvar step = __webpack_require__(95);\nvar Iterators = __webpack_require__(34);\nvar toIObject = __webpack_require__(15);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(55)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\nmodule.exports = function () { /* empty */ };\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(97), __esModule: true };\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(98);\n__webpack_require__(103);\n__webpack_require__(104);\n__webpack_require__(105);\nmodule.exports = __webpack_require__(3).Symbol;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(7);\nvar has = __webpack_require__(11);\nvar DESCRIPTORS = __webpack_require__(10);\nvar $export = __webpack_require__(8);\nvar redefine = __webpack_require__(56);\nvar META = __webpack_require__(99).KEY;\nvar $fails = __webpack_require__(19);\nvar shared = __webpack_require__(31);\nvar setToStringTag = __webpack_require__(38);\nvar uid = __webpack_require__(23);\nvar wks = __webpack_require__(16);\nvar wksExt = __webpack_require__(39);\nvar wksDefine = __webpack_require__(40);\nvar enumKeys = __webpack_require__(100);\nvar isArray = __webpack_require__(101);\nvar anObject = __webpack_require__(18);\nvar toIObject = __webpack_require__(15);\nvar toPrimitive = __webpack_require__(28);\nvar createDesc = __webpack_require__(22);\nvar _create = __webpack_require__(35);\nvar gOPNExt = __webpack_require__(102);\nvar $GOPD = __webpack_require__(61);\nvar $DP = __webpack_require__(9);\nvar $keys = __webpack_require__(36);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(60).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(41).f = $propertyIsEnumerable;\n  __webpack_require__(59).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(33)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(13)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar META = __webpack_require__(23)('meta');\nvar isObject = __webpack_require__(14);\nvar has = __webpack_require__(11);\nvar setDesc = __webpack_require__(9).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(19)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(36);\nvar gOPS = __webpack_require__(59);\nvar pIE = __webpack_require__(41);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(58);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(15);\nvar gOPN = __webpack_require__(60).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(40)('asyncIterator');\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(40)('observable');\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(107), __esModule: true };\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(108);\nmodule.exports = __webpack_require__(3).Object.setPrototypeOf;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(8);\n$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(109).set });\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(14);\nvar anObject = __webpack_require__(18);\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(49)(Function.call, __webpack_require__(61).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(111), __esModule: true };\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(112);\nvar $Object = __webpack_require__(3).Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(8);\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: __webpack_require__(35) });\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {var Stream = __webpack_require__(12); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = __webpack_require__(63);\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(42);\nexports.Duplex = __webpack_require__(24);\nexports.Transform = __webpack_require__(43);\nexports.PassThrough = __webpack_require__(65);\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = __webpack_require__(12);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(42)\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(24)\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(43)\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(65)\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(119);\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PCM = __webpack_require__(44);\n\nmodule.exports = function (_PCM) {\n    (0, _inherits3.default)(Header, _PCM);\n\n    function Header() {\n        (0, _classCallCheck3.default)(this, Header);\n\n        // 4 bytes, RIFF\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Header.__proto__ || (0, _getPrototypeOf2.default)(Header)).call(this));\n\n        _this.chunkId = null;\n\n        // 4 bytes, length of rest of file\n        _this.chunkSize = null;\n\n        // 4 bytes, WAVE\n        _this.format = null;\n\n        // 4 bytes, \"fmt \"\n        _this.subchunk1Id = null;\n\n        // 4 bytes, length of rest of fmt section\n        _this.subchunk1Size = null;\n\n        // 2 bytes, 1 = PCM\n        _this.audioFormat = null;\n\n        // 4 bytes, \"data\"\n        _this.subchunk2Id = null;\n\n        // 4 bytes, length of rest of data section\n        _this.subchunk2Size = null;\n        return _this;\n    }\n\n    (0, _createClass3.default)(Header, [{\n        key: 'isLE',\n        get: function get() {\n            return this.chunkId === 'RIFF';\n        }\n    }, {\n        key: 'isBE',\n        get: function get() {\n            return this.chunkId === 'RIFX';\n        }\n    }, {\n        key: 'order',\n        get: function get() {\n            if (this.isLE) return 'LE';\n            if (this.isBE) return 'BE';\n            throw 'Neither BE or LE';\n        }\n    }]);\n    return Header;\n}(PCM);\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(122), __esModule: true };\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(123);\nmodule.exports = __webpack_require__(3).Number.isInteger;\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 20.1.2.3 Number.isInteger(number)\nvar $export = __webpack_require__(8);\n\n$export($export.S, 'Number', { isInteger: __webpack_require__(124) });\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 20.1.2.3 Number.isInteger(number)\nvar isObject = __webpack_require__(14);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar stream = __webpack_require__(12);\nvar Util = __webpack_require__(126);\nvar Decoder = __webpack_require__(128);\n\nvar Demuxer = function (_stream$Transform) {\n    (0, _inherits3.default)(Demuxer, _stream$Transform);\n\n    function Demuxer() {\n        (0, _classCallCheck3.default)(this, Demuxer);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Demuxer.__proto__ || (0, _getPrototypeOf2.default)(Demuxer)).call(this));\n\n        _this.bytes = new Buffer(0);\n        _this.pendingBytes = 0;\n        _this.pendingCb = null;\n\n        _this.frstFrame = null;\n        _this.currFrame = null;\n\n        _this.decoder = new Decoder();\n\n        _this.syncword = 0xFFE00000;\n        _this.rawId3v2 = null;\n\n        _this._bytes(10, _this._read_id3_header);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Demuxer, [{\n        key: '_transform',\n        value: function _transform(data, enc, callback) {\n            this.bytes = Buffer.concat([this.bytes, data]);\n\n            while (this.pendingBytes) {\n                if (this.bytes.length < this.pendingBytes) {\n                    return callback();\n                }\n\n                var bytes = new Buffer(this.pendingBytes);\n                var remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n                this.bytes.copy(bytes, 0, 0, bytes.length);\n                this.bytes.copy(remnd, 0, this.pendingBytes);\n                this.bytes = remnd;\n\n                var pendingCb = this.pendingCb;\n                var pendingBt = this.pendingBytes;\n                this.pendingCb = null;\n                this.pendingBytes = null;\n\n                pendingCb.call(this, pendingBt, bytes);\n            }\n\n            throw 'decoding out of sync';\n        }\n    }, {\n        key: '_bytes',\n        value: function _bytes(bytes, callback) {\n            if (bytes <= 0 || !callback) {\n                throw \"Invalid arguments\";\n            }\n\n            if (this.pendingCb) {\n                throw \"There is already pending callback\";\n            }\n\n            this.pendingBytes = bytes;\n            this.pendingCb = callback;\n        }\n    }, {\n        key: '_read_id3_header',\n        value: function _read_id3_header(size, data) {\n            if ('ID3' === data.toString('ascii', 0, 3)) {\n                size = Util.getSizeFromID3v2Header(data);\n                if (size) this._bytes(size, this._read_id3v2_data);else this._bytes(4, this._read_frame_header);\n            } else {\n                this.bytes = Buffer.concat([data, this.bytes]);\n                this._bytes(4, this._read_frame_header);\n            }\n        }\n    }, {\n        key: '_read_id3v2_data',\n        value: function _read_id3v2_data(size, data) {\n            this.rawId3v2 = data;\n            this._bytes(4, this._read_frame_header);\n        }\n    }, {\n        key: '_read_frame_header',\n        value: function _read_frame_header(size, data) {\n            var syncword = data.readUInt32BE(0) & this.syncword;\n            if (syncword < 0) syncword = 0xFFFFFFFF + syncword + 1;\n\n            if (syncword !== this.syncword) throw 'lost sync';\n\n            var frame = Util.makeFrameHeader(data);\n\n            if (!this.frstFrame) {\n                this.syncword = syncword; // expect strict frame header now\n                this.frstFrame = frame;\n                this.emit('header', frame);\n            }\n\n            this.currFrame = frame;\n\n            this._bytes(this.currFrame.frameSize, this._read_frame_data);\n        }\n    }, {\n        key: '_read_frame_data',\n        value: function _read_frame_data(size, data) {\n            this.push(this.decoder.decodeFrame(this.currFrame, data));\n\n            if (this.currFrame.bProtect) {\n                this._bytes(2, this._read_frame_crc);\n            } else {\n                this._bytes(4, this._read_frame_header);\n            }\n        }\n    }, {\n        key: '_read_frame_crc',\n        value: function _read_frame_crc(size, data) {\n            // todo: validate crc16\n            this._bytes(4, this._read_frame_header);\n        }\n    }]);\n    return Demuxer;\n}(stream.Transform);\n\nmodule.exports = Demuxer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Bitstream = __webpack_require__(45);\nvar FrameHeader = __webpack_require__(127);\n\nmodule.exports = function () {\n    function Util() {\n        (0, _classCallCheck3.default)(this, Util);\n    }\n\n    (0, _createClass3.default)(Util, null, [{\n        key: 'getSizeFromID3v2Header',\n\n        /**\n         * @param {Buffer} data\n         */\n        value: function getSizeFromID3v2Header(data) {\n            if (10 !== data.length) throw 'Expected ID3v2 header buffer length to be 10';\n\n            var flags = data[5];\n            if (flags !== 0) throw 'Expected no ID3 header flags set';\n\n            return (data[6] << 21) + (data[7] << 14) + (data[8] << 7) + data[9];\n        }\n\n        /**\n         *\n         * @param {Buffer} data\n         */\n\n    }, {\n        key: 'makeFrameHeader',\n        value: function makeFrameHeader(data) {\n            var bitStream = new Bitstream(data);\n            var frame = new FrameHeader();\n\n            if (bitStream.readBits(11) !== 0x7FF) throw 'invalid syncword';\n\n            frame.version = bitStream.readBits(2);\n            frame.layer = bitStream.readBits(2);\n            frame.bProtect = 0 === bitStream.readBit();\n            frame.bitrate = bitStream.readBits(4);\n            frame.freq = bitStream.readBits(2);\n            frame.bPadding = 1 === bitStream.readBit();\n            frame.bPrivate = 1 === bitStream.readBit();\n            frame.mode = bitStream.readBits(2);\n            frame.extension = bitStream.readBits(2);\n            frame.bCopyright = 1 === bitStream.readBit();\n            frame.bOriginal = 1 === bitStream.readBit();\n            frame.emphasis = bitStream.readBits(2);\n\n            return frame;\n        }\n    }]);\n    return Util;\n}();\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PCMFrame = __webpack_require__(44);\n\nvar MPEG1 = 3;\nvar MPEG2 = 2;\nvar MPEG25 = 0;\nvar MPEG25_LSF = 0;\n\nvar LAYER3 = 1;\n\nvar SINGLE_CHANNEL = 3;\nvar STEREO = 0;\nvar JOINT_STEREO = 1;\nvar DUAL_MONO = 2;\n\nmodule.exports = function (_PCMFrame) {\n    (0, _inherits3.default)(MP3Frame, _PCMFrame);\n\n    function MP3Frame() {\n        (0, _classCallCheck3.default)(this, MP3Frame);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (MP3Frame.__proto__ || (0, _getPrototypeOf2.default)(MP3Frame)).call(this));\n\n        _this.version = null;\n        _this.layer = null;\n        _this.bitrate = null;\n        _this.freq = null;\n        _this.mode = null;\n\n        _this.extension = null;\n        _this.emphasis = null;\n\n        _this.bProtect = null;\n        _this.bPadding = null;\n        _this.bPrivate = null;\n        _this.bCopyright = null;\n        _this.bOriginal = null;\n        return _this;\n    }\n\n    (0, _createClass3.default)(MP3Frame, [{\n        key: 'slots',\n        value: function slots() {\n            var nSlots = this.frameSize - (this.mode === SINGLE_CHANNEL ? 17 : 32) // side info size\n            - (!this.bProtect ? 0 : 2); // crc size\n\n            return nSlots;\n        }\n    }, {\n        key: 'MPEG1',\n        get: function get() {\n            return MPEG1;\n        }\n    }, {\n        key: 'LAYER3',\n        get: function get() {\n            return LAYER3;\n        }\n    }, {\n        key: 'SINGLE_CHANNEL',\n        get: function get() {\n            return SINGLE_CHANNEL;\n        }\n    }, {\n        key: 'MPEG25_LSF',\n        get: function get() {\n            return MPEG25_LSF;\n        }\n    }, {\n        key: 'JOINT_STEREO',\n        get: function get() {\n            return JOINT_STEREO;\n        }\n    }, {\n        key: 'channels',\n        get: function get() {\n            switch (this.mode) {\n                case STEREO:\n                case JOINT_STEREO:\n                case DUAL_MONO:\n                    return 2;\n                case SINGLE_CHANNEL:\n                    return 1;\n                default:\n                    throw 'invalid channels mode';\n            }\n        }\n    }, {\n        key: 'sampleRate',\n        get: function get() {\n            switch (this.version) {\n                case MPEG1:\n                    // 1\n                    switch (this.freq) {\n                        case 0:\n                            return 44100;\n                        case 1:\n                            return 48000;\n                        case 2:\n                            return 32000;\n                        default:\n                            throw 'unsupported sample rate';\n                    }\n                default:\n                    throw 'unsupported mpeg version';\n            }\n        }\n    }, {\n        key: 'bitsPerSample',\n        get: function get() {\n            return 16;\n        }\n    }, {\n        key: 'bitRate',\n        get: function get() {\n            switch (this.version) {\n                case MPEG1:\n                    switch (this.layer) {\n                        case LAYER3:\n                            switch (this.bitrate) {\n                                case 7:\n                                    return 96;\n                                case 8:\n                                    return 112;\n                                case 9:\n                                    return 128;\n                                default:\n                                    throw 'unsupported bitrate';\n                            }\n                        default:\n                            throw 'unsupported layer';\n                    }\n                default:\n                    throw 'unsupported mpeg version';\n            }\n        }\n    }, {\n        key: 'frameSize',\n        get: function get() {\n            var bitrates = [0, 32000, 40000, 48000, 56000, 64000, 80000, 96000, 112000, 128000, 160000, 192000, 224000, 256000, 320000, 0];\n            var frequencies = [44100, 48000, 32000, 1];\n\n            var framesize = 144 * bitrates[this.bitrate] / frequencies[this.freq] ^ 0;\n\n            if (this.bPadding) framesize++;\n\n            framesize -= 4;\n\n            return framesize;\n        }\n    }]);\n    return MP3Frame;\n}(PCMFrame);\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Layer3 = __webpack_require__(129);\nvar FltOut = __webpack_require__(132);\n\nmodule.exports = function () {\n    function Decoder() {\n        (0, _classCallCheck3.default)(this, Decoder);\n\n        this.bInitialized = false;\n        this.layer3 = null;\n    }\n\n    (0, _createClass3.default)(Decoder, [{\n        key: 'decodeFrame',\n        value: function decodeFrame(header, data) {\n            if (!this.bInitialized) {\n                this.initialize(header);\n            }\n\n            this.output.clear();\n\n            this.retrieveDecoder(header).decodeFrame(header, data);\n\n            return this.output.asBuffer();\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(header) {\n            var scalefactor = 32700.0;\n            var channels = header.channels;\n\n            this.output = new FltOut.SampleBuffer(header.sampleRate, channels);\n            this.filter1 = new FltOut.SynthesisFilter(0, scalefactor);\n            this.filter2 = new FltOut.SynthesisFilter(1, scalefactor);\n\n            this.bInitialized = true;\n        }\n    }, {\n        key: 'retrieveDecoder',\n        value: function retrieveDecoder(header) {\n            var decoder = null;\n\n            switch (header.layer) {\n                case header.LAYER3:\n                    if (null === this.layer3) {\n                        this.layer3 = new Layer3(header, this.filter1, this.filter2, this.output);\n                    }\n\n                    decoder = this.layer3;\n                    break;\n            }\n\n            if (null === decoder) throw 'unsupported layer';\n\n            return decoder;\n        }\n    }]);\n    return Decoder;\n}();\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar huffcodetab = __webpack_require__(130);\nvar BitReserve = __webpack_require__(131);\nvar BitStream = __webpack_require__(45);\nvar debug = __webpack_require__(25)('mp3:layer3');\n\nmodule.exports = function () {\n    function Layer3(header0, filtera, filterb, buffer0) {\n        (0, _classCallCheck3.default)(this, Layer3);\n\n\n        this.CheckSumHuff = 0;\n        this.part2_start = null;\n\n        this.x = [0];\n        this.y = [0];\n        this.v = [0];\n        this.w = [0];\n\n        // int[] is_pos = new int[576];\n        this.is_pos = new Int32Array(576).fill(0);\n        // float[] is_ratio = new float[576];\n        this.is_ratio = new Float32Array(576).fill(0);\n\n        // private float[] samples1 = new float[32];\n        this.samples1 = new Float32Array(32).fill(0);\n        // private float[] samples2 = new float[32];\n        this.samples2 = new Float32Array(32).fill(0);\n\n        // float[] tsOutCopy = new float[18];\n        this.tsOutCopy = new Float32Array(18).fill(0);\n        // float[] rawout = new float[36];\n        this.rawout = new Float32Array(36).fill(0.0);\n\n        huffcodetab.inithuff();\n\n        // private int[] is_1d;\n        this.is_1d = new Int32Array(SBLIMIT * SSLIMIT + 4).fill(0);\n\n        // private float[][][] ro;\n        this.ro = new Array(2).fill().map(function () {\n            return new Array(SBLIMIT).fill().map(function () {\n                return new Float32Array(SSLIMIT).fill(0);\n            });\n        });\n\n        // private float[][][] lr;\n        this.lr = new Array(2).fill().map(function () {\n            return new Array(SBLIMIT).fill().map(function () {\n                return new Float32Array(SSLIMIT).fill(0);\n            });\n        });\n        // private float[] out_1d;\n        this.out_1d = new Float32Array(SBLIMIT * SSLIMIT).fill(0);\n        // private float[][] prevblck;\n        this.prevblck = new Array(2).fill().map(function () {\n            return new Float32Array(SBLIMIT * SSLIMIT).fill(0);\n        });\n        /*this.k = (new Array(2)).fill().map(() => {\n            return (new Array(SBLIMIT * SSLIMIT)).fill(0)\n        });*/\n        // private int[] nonzero;\n        this.nonzero = new Int32Array(2).fill(576);\n\n        this.scalefac = [new temporaire2(), new temporaire2()];\n\n        this.sfBandIndex = new Array(9);\n        // SZD: MPEG2.5 +3 indices\n        var l0 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        var s0 = [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192];\n        var l1 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 330, 394, 464, 540, 576];\n        var s1 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192];\n        var l2 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        var s2 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n\n        var l3 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576];\n        var s3 = [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192];\n        var l4 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576];\n        var s4 = [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192];\n        var l5 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576];\n        var s5 = [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192];\n        // SZD: MPEG2.5\n        var l6 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        var s6 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n        var l7 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        var s7 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n        var l8 = [0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570, 572, 574, 576];\n        var s8 = [0, 8, 16, 24, 36, 52, 72, 96, 124, 160, 162, 164, 166, 192];\n\n        this.sfBandIndex[0] = new SBI(l0, s0);\n        this.sfBandIndex[1] = new SBI(l1, s1);\n        this.sfBandIndex[2] = new SBI(l2, s2);\n\n        this.sfBandIndex[3] = new SBI(l3, s3);\n        this.sfBandIndex[4] = new SBI(l4, s4);\n        this.sfBandIndex[5] = new SBI(l5, s5);\n        //SZD: MPEG2.5\n        this.sfBandIndex[6] = new SBI(l6, s6);\n        this.sfBandIndex[7] = new SBI(l7, s7);\n        this.sfBandIndex[8] = new SBI(l8, s8);\n        // END OF L3TABLE INIT\n\n        // private static /*final*/ int reorder_table[][]\n        if (null === reorder_table) {\n            reorder_table = new Array(9);\n            for (var i = 0; i < 9; i++) {\n                reorder_table[i] = reorder(this.sfBandIndex[i].s);\n            }\n        }\n\n        this.filter1 = filtera;\n        this.filter2 = filterb;\n        this.buffer = buffer0;\n\n        this.frame_start = 0;\n        this.channels = header0.mode === header0.SINGLE_CHANNEL ? 1 : 2;\n        this.max_gr = header0.version === header0.MPEG1 ? 2 : 1;\n\n        this.sfreq = header0.freq + (header0.version === header0.MPEG1 ? 3 : header0.version === header0.MPEG25_LSF ? 6 : 0);\n\n        this.br = new BitReserve();\n        this.si = new III_side_info_t();\n    }\n\n    (0, _createClass3.default)(Layer3, [{\n        key: 'decodeFrame',\n        value: function decodeFrame(header, data) {\n            var nSlots = header.slots();\n            var flush_main = void 0;\n            var gr = void 0,\n                ch = void 0,\n                ss = void 0,\n                sb = void 0,\n                sb18 = void 0;\n            var main_data_end = void 0;\n            var bytes_to_discard = void 0;\n            var i = void 0;\n\n            var bitStream = new BitStream(data);\n\n            this.get_side_info(header, bitStream);\n\n            for (i = 0; i < nSlots; i++) {\n                this.br.hputbuf(bitStream.readBits(8));\n            }main_data_end = this.br.hsstell() >>> 3; // of previous frame // fixme\n\n            if ((flush_main = this.br.hsstell() & 7) !== 0) {\n                this.br.hgetbits(8 - flush_main);\n                main_data_end++;\n            }\n\n            bytes_to_discard = this.frame_start - main_data_end - this.si.main_data_begin;\n\n            this.frame_start += nSlots;\n\n            if (bytes_to_discard < 0) return;\n\n            if (main_data_end > 4096) {\n                this.frame_start -= 4096;\n                this.br.rewindNbytes(4096);\n            }\n\n            for (; bytes_to_discard > 0; bytes_to_discard--) {\n                this.br.hgetbits(8);\n            }for (gr = 0; gr < this.max_gr; gr++) {\n                for (ch = 0; ch < this.channels; ch++) {\n                    this.part2_start = this.br.hsstell();\n\n                    if (header.version === header.MPEG1) this.get_scale_factors(ch, gr);else {\n                        throw 'not implemented';\n                    }\n\n                    this.huffman_decode(ch, gr);\n\n                    this.dequantize_sample(this.ro[ch], ch, gr);\n                }\n\n                this.stereo(header, gr);\n\n                // shortcuts\n                var lr = this.lr;\n\n                for (ch = 0; ch < this.channels; ch++) {\n\n                    this.reorder(lr[ch], ch, gr);\n                    this.antialias(ch, gr);\n                    this.hybrid(ch, gr);\n\n                    for (sb18 = 18; sb18 < 576; sb18 += 36) {\n                        // Frequency inversion\n                        for (ss = 1; ss < SSLIMIT; ss += 2) {\n                            this.out_1d[sb18 + ss] = -this.out_1d[sb18 + ss];\n                        }\n                    }if (ch === 0) {\n                        for (ss = 0; ss < SSLIMIT; ss++) {\n                            // Polyphase synthesis\n                            sb = 0;\n                            for (sb18 = 0; sb18 < 576; sb18 += 18) {\n                                this.samples1[sb] = this.out_1d[sb18 + ss];\n                                sb++;\n                            }\n                            this.filter1.input_samples(this.samples1);\n                            this.filter1.calculate_pcm_samples(this.buffer);\n                        }\n                    } else {\n                        for (ss = 0; ss < SSLIMIT; ss++) {\n                            // Polyphase synthesis\n                            sb = 0;\n                            for (sb18 = 0; sb18 < 576; sb18 += 18) {\n                                this.samples2[sb] = this.out_1d[sb18 + ss];\n                                sb++;\n                            }\n                            this.filter2.input_samples(this.samples2);\n                            this.filter2.calculate_pcm_samples(this.buffer);\n                        }\n                    }\n                } // channels\n            }\n        }\n    }, {\n        key: 'get_side_info',\n        value: function get_side_info(header, bitStream) {\n            var ch = void 0,\n                gr = void 0;\n\n            if (header.version === header.MPEG1) {\n                this.si.main_data_begin = bitStream.readBits(9);\n\n                if (this.channels === 1) this.si.private_bits = bitStream.readBits(5);else this.si.private_bits = bitStream.readBits(3);\n\n                for (ch = 0; ch < this.channels; ch++) {\n                    this.si.ch[ch].scfsi[0] = bitStream.readBits(1);\n                    this.si.ch[ch].scfsi[1] = bitStream.readBits(1);\n                    this.si.ch[ch].scfsi[2] = bitStream.readBits(1);\n                    this.si.ch[ch].scfsi[3] = bitStream.readBits(1);\n                }\n\n                for (gr = 0; gr < 2; gr++) {\n                    for (ch = 0; ch < this.channels; ch++) {\n                        this.si.ch[ch].gr[gr].part2_3_length = bitStream.readBits(12);\n                        this.si.ch[ch].gr[gr].big_values = bitStream.readBits(9);\n                        this.si.ch[ch].gr[gr].global_gain = bitStream.readBits(8);\n                        this.si.ch[ch].gr[gr].scalefac_compress = bitStream.readBits(4);\n                        this.si.ch[ch].gr[gr].window_switching_flag = bitStream.readBits(1);\n\n                        if (this.si.ch[ch].gr[gr].window_switching_flag !== 0) {\n                            this.si.ch[ch].gr[gr].block_type = bitStream.readBits(2);\n                            this.si.ch[ch].gr[gr].mixed_block_flag = bitStream.readBits(1);\n\n                            this.si.ch[ch].gr[gr].table_select[0] = bitStream.readBits(5);\n                            this.si.ch[ch].gr[gr].table_select[1] = bitStream.readBits(5);\n\n                            this.si.ch[ch].gr[gr].subblock_gain[0] = bitStream.readBits(3);\n                            this.si.ch[ch].gr[gr].subblock_gain[1] = bitStream.readBits(3);\n                            this.si.ch[ch].gr[gr].subblock_gain[2] = bitStream.readBits(3);\n\n                            // Set region_count parameters since they are implicit inp this case.\n\n                            if (this.si.ch[ch].gr[gr].block_type === 0) {\n                                // Side info bad: block_type == 0 inp split block\n                                return false;\n                            } else if (this.si.ch[ch].gr[gr].block_type === 2 && this.si.ch[ch].gr[gr].mixed_block_flag === 0) {\n                                this.si.ch[ch].gr[gr].region0_count = 8;\n                            } else {\n                                this.si.ch[ch].gr[gr].region0_count = 7;\n                            }\n\n                            this.si.ch[ch].gr[gr].region1_count = 20 - this.si.ch[ch].gr[gr].region0_count;\n                        } else {\n                            this.si.ch[ch].gr[gr].table_select[0] = bitStream.readBits(5);\n                            this.si.ch[ch].gr[gr].table_select[1] = bitStream.readBits(5);\n                            this.si.ch[ch].gr[gr].table_select[2] = bitStream.readBits(5);\n                            this.si.ch[ch].gr[gr].region0_count = bitStream.readBits(4);\n                            this.si.ch[ch].gr[gr].region1_count = bitStream.readBits(3);\n                            this.si.ch[ch].gr[gr].block_type = 0;\n                        }\n\n                        this.si.ch[ch].gr[gr].preflag = bitStream.readBits(1);\n                        this.si.ch[ch].gr[gr].scalefac_scale = bitStream.readBits(1);\n                        this.si.ch[ch].gr[gr].count1table_select = bitStream.readBits(1);\n                    }\n                }\n            } else {\n                throw 'not implemented';\n            }\n\n            return true;\n        }\n    }, {\n        key: 'get_scale_factors',\n        value: function get_scale_factors(ch, gr) {\n            var gr_info = this.si.ch[ch].gr[gr];\n            var scale_comp = gr_info.scalefac_compress;\n            var length0 = slen[0][scale_comp];\n            var length1 = slen[1][scale_comp];\n\n            if (gr_info.window_switching_flag !== 0 && gr_info.block_type === 2) {\n                if (gr_info.mixed_block_flag !== 0) {\n                    // MIXED\n\n                    throw 'not implemented';\n                } else {\n                    // SHORT\n                    this.scalefac[ch].s[0][0] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][0] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][0] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][1] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][1] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][1] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][2] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][2] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][2] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][3] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][3] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][3] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][4] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][4] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][4] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][5] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[1][5] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[2][5] = this.br.hgetbits(length0);\n                    this.scalefac[ch].s[0][6] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][6] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][6] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][7] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][7] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][7] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][8] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][8] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][8] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][9] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][9] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][9] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][10] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][10] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][10] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][11] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[1][11] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[2][11] = this.br.hgetbits(length1);\n                    this.scalefac[ch].s[0][12] = 0;\n                    this.scalefac[ch].s[1][12] = 0;\n                    this.scalefac[ch].s[2][12] = 0;\n                } // SHORT\n            } else {\n                // LONG types 0,1,3\n                if (this.si.ch[ch].scfsi[0] === 0 || gr === 0) {\n                    this.scalefac[ch].l[0] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[1] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[2] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[3] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[4] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[5] = this.br.hgetbits(length0);\n                }\n                if (this.si.ch[ch].scfsi[1] === 0 || gr === 0) {\n                    this.scalefac[ch].l[6] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[7] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[8] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[9] = this.br.hgetbits(length0);\n                    this.scalefac[ch].l[10] = this.br.hgetbits(length0);\n                }\n                if (this.si.ch[ch].scfsi[2] === 0 || gr === 0) {\n                    this.scalefac[ch].l[11] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[12] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[13] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[14] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[15] = this.br.hgetbits(length1);\n                }\n                if (this.si.ch[ch].scfsi[3] === 0 || gr === 0) {\n                    this.scalefac[ch].l[16] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[17] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[18] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[19] = this.br.hgetbits(length1);\n                    this.scalefac[ch].l[20] = this.br.hgetbits(length1);\n                }\n\n                this.scalefac[ch].l[21] = 0;\n                this.scalefac[ch].l[22] = 0;\n            }\n        }\n    }, {\n        key: 'huffman_decode',\n        value: function huffman_decode(ch, gr) {\n            var x = this.x,\n                y = this.y,\n                v = this.v,\n                w = this.w,\n                si = this.si;\n\n            x[0] = 0;\n            y[0] = 0;\n            v[0] = 0;\n            w[0] = 0;\n\n            var part2_3_end = this.part2_start + si.ch[ch].gr[gr].part2_3_length;\n            var num_bits = void 0,\n                region1Start = void 0,\n                region2Start = void 0;\n            var index = void 0,\n                buf = void 0,\n                buf1 = void 0,\n                h = void 0;\n\n            // Find region boundary for short block case\n\n            if (si.ch[ch].gr[gr].window_switching_flag !== 0 && si.ch[ch].gr[gr].block_type === 2) {\n                // Region2.\n                // MS: Extrahandling for 8KHZ\n                region1Start = this.sfreq === 8 ? 72 : 36; // sfb[9/3]*3=36 or inp case 8KHZ = 72\n                region2Start = 576; // No Region2 for short block case\n            } else {\n                // Find region boundary for long block case\n                buf = si.ch[ch].gr[gr].region0_count + 1;\n                buf1 = buf + si.ch[ch].gr[gr].region1_count + 1;\n\n                if (buf1 > this.sfBandIndex[this.sfreq].l.length - 1) buf1 = this.sfBandIndex[this.sfreq].l.length - 1;\n\n                region1Start = this.sfBandIndex[this.sfreq].l[buf];\n                region2Start = this.sfBandIndex[this.sfreq].l[buf1];\n            }\n\n            index = 0;\n\n            // Read bigvalues area\n            for (var i = 0; i < si.ch[ch].gr[gr].big_values << 1; i += 2) {\n                if (i < region1Start) h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[0]];else if (i < region2Start) h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[1]];else h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[2]];\n\n                huffcodetab.huffman_decoder(h, x, y, v, w, this.br);\n\n                this.is_1d[index++] = x[0];\n                this.is_1d[index++] = y[0];\n\n                this.CheckSumHuff = this.CheckSumHuff + x[0] + y[0];\n            }\n\n            // Read count1 area\n            h = huffcodetab.ht[si.ch[ch].gr[gr].count1table_select + 32];\n            num_bits = this.br.hsstell();\n\n            while (num_bits < part2_3_end && index < 576) {\n                huffcodetab.huffman_decoder(h, x, y, v, w, this.br);\n\n                this.is_1d[index++] = v[0];\n                this.is_1d[index++] = w[0];\n                this.is_1d[index++] = x[0];\n                this.is_1d[index++] = y[0];\n\n                this.CheckSumHuff = this.CheckSumHuff + v[0] + w[0] + x[0] + y[0];\n                num_bits = this.br.hsstell();\n            }\n\n            if (num_bits > part2_3_end) {\n                this.br.rewindNbits(num_bits - part2_3_end);\n                index -= 4;\n            }\n\n            num_bits = this.br.hsstell();\n\n            // Dismiss stuffing bits\n            if (num_bits < part2_3_end) this.br.hgetbits(part2_3_end - num_bits);\n\n            // Zero out rest\n\n            if (index < 576) this.nonzero[ch] = index;else this.nonzero[ch] = 576;\n\n            if (index < 0) index = 0;\n\n            // may not be necessary\n            for (; index < 576; index++) {\n                this.is_1d[index] = 0;\n            }\n        }\n    }, {\n        key: 'dequantize_sample',\n        value: function dequantize_sample(xr, ch, gr) {\n            var xr_1d = xr;\n            var gr_info = this.si.ch[ch].gr[gr];\n\n            var cb = 0,\n                cb_begin = 0,\n                cb_width = 0,\n                next_cb_boundary = void 0;\n            var index = 0,\n                t_index = void 0,\n                j = void 0,\n                g_gain = void 0;\n\n            // choose correct scalefactor band per block type, initalize boundary\n            if (gr_info.window_switching_flag !== 0 && gr_info.block_type === 2) {\n                if (gr_info.mixed_block_flag !== 0) next_cb_boundary = this.sfBandIndex[this.sfreq].l[1]; // LONG blocks: 0,1,3\n                else {\n                        cb_width = this.sfBandIndex[this.sfreq].s[1];\n                        next_cb_boundary = (cb_width << 2) - cb_width;\n                        cb_begin = 0;\n                    }\n            } else {\n                next_cb_boundary = this.sfBandIndex[this.sfreq].l[1]; // LONG blocks: 0,1,3\n            }\n\n            // Compute overall (global) scaling.\n\n            g_gain = Math.pow(2.0, 0.25 * (gr_info.global_gain - 210.0));\n\n            for (j = 0; j < this.nonzero[ch]; j++) {\n                // Modif E.B 02/22/99\n                var reste = j % SSLIMIT;\n                var quotien = (j - reste) / SSLIMIT;\n\n                if (this.is_1d[j] === 0) xr_1d[quotien][reste] = 0.0;else {\n                    var abv = this.is_1d[j];\n                    if (abv < t_43.length) {\n                        if (this.is_1d[j] > 0) xr_1d[quotien][reste] = g_gain * t_43[abv];else {\n                            if (-abv < t_43.length) xr_1d[quotien][reste] = -g_gain * t_43[-abv];else xr_1d[quotien][reste] = -g_gain * Math.pow(-abv, d43);\n                        }\n                    } else {\n                        if (this.is_1d[j] > 0) xr_1d[quotien][reste] = g_gain * Math.pow(abv, d43);else xr_1d[quotien][reste] = -g_gain * Math.pow(-abv, d43);\n                    }\n                }\n            }\n\n            // apply formula per block type\n            for (j = 0; j < this.nonzero[ch]; j++) {\n                // Modif E.B 02/22/99\n                var _reste = j % SSLIMIT;\n                var _quotien = (j - _reste) / SSLIMIT;\n\n                if (index === next_cb_boundary) {\n                    /* Adjust critical band boundary */\n                    if (gr_info.window_switching_flag !== 0 && gr_info.block_type === 2) {\n                        if (gr_info.mixed_block_flag !== 0) {\n\n                            if (index === this.sfBandIndex[this.sfreq].l[8]) {\n                                next_cb_boundary = this.sfBandIndex[this.sfreq].s[4];\n                                next_cb_boundary = (next_cb_boundary << 2) - next_cb_boundary;\n                                cb = 3;\n                                cb_width = this.sfBandIndex[this.sfreq].s[4] - this.sfBandIndex[this.sfreq].s[3];\n\n                                cb_begin = this.sfBandIndex[this.sfreq].s[3];\n                                cb_begin = (cb_begin << 2) - cb_begin;\n                            } else if (index < this.sfBandIndex[this.sfreq].l[8]) {\n\n                                next_cb_boundary = this.sfBandIndex[this.sfreq].l[++cb + 1];\n                            } else {\n\n                                next_cb_boundary = this.sfBandIndex[this.sfreq].s[++cb + 1];\n                                next_cb_boundary = (next_cb_boundary << 2) - next_cb_boundary;\n\n                                cb_begin = this.sfBandIndex[this.sfreq].s[cb];\n                                cb_width = this.sfBandIndex[this.sfreq].s[cb + 1] - cb_begin;\n                                cb_begin = (cb_begin << 2) - cb_begin;\n                            }\n                        } else {\n\n                            next_cb_boundary = this.sfBandIndex[this.sfreq].s[++cb + 1];\n                            next_cb_boundary = (next_cb_boundary << 2) - next_cb_boundary;\n\n                            cb_begin = this.sfBandIndex[this.sfreq].s[cb];\n                            cb_width = this.sfBandIndex[this.sfreq].s[cb + 1] - cb_begin;\n                            cb_begin = (cb_begin << 2) - cb_begin;\n                        }\n                    } else {\n                        // long blocks\n                        next_cb_boundary = this.sfBandIndex[this.sfreq].l[++cb + 1];\n                    }\n                }\n\n                // Do long/short dependent scaling operations\n\n                if (gr_info.window_switching_flag !== 0 && (gr_info.block_type === 2 && gr_info.mixed_block_flag === 0 || gr_info.block_type === 2 && gr_info.mixed_block_flag !== 0 && j >= 36)) {\n\n                    t_index = (index - cb_begin) / cb_width ^ 0;\n\n                    var idx = this.scalefac[ch].s[t_index][cb] << gr_info.scalefac_scale;\n                    idx += gr_info.subblock_gain[t_index] << 2;\n\n                    xr_1d[_quotien][_reste] *= two_to_negative_half_pow[idx];\n                } else {\n                    // LONG block types 0,1,3 & 1st 2 subbands of switched blocks\n\n                    var _idx = this.scalefac[ch].l[cb];\n\n                    if (gr_info.preflag !== 0) _idx += pretab[cb];\n\n                    _idx = _idx << gr_info.scalefac_scale;\n                    xr_1d[_quotien][_reste] *= two_to_negative_half_pow[_idx];\n                }\n                index++;\n            }\n\n            for (j = this.nonzero[ch]; j < 576; j++) {\n                var _reste2 = j % SSLIMIT;\n                var _quotien2 = (j - _reste2) / SSLIMIT;\n\n                if (_reste2 < 0) _reste2 = 0;\n                if (_quotien2 < 0) _quotien2 = 0;\n\n                xr_1d[_quotien2][_reste2] = 0.0;\n            }\n        }\n    }, {\n        key: 'stereo',\n        value: function stereo(header, gr) {\n            var sb = void 0,\n                ss = void 0,\n                i = 0;\n\n            var lr = this.lr,\n                ro = this.ro,\n                si = this.si;\n            var is_pos = this.is_pos,\n                is_ratio = this.is_ratio;\n\n            if (this.channels === 1) throw 'not implemented';\n\n            var mode_ext = header.extension;\n\n            // MS Stereo\n            var ms_stereo = header.mode === header.JOINT_STEREO && (mode_ext & 0x2) !== 0;\n            // Intensity Stereo\n            var i_stereo = header.mode === header.JOINT_STEREO && (mode_ext & 0x1) !== 0;\n\n            if (i_stereo) throw 'not implemented';\n\n            // initialization\n            is_pos.fill(7);is_ratio.fill(0.0);\n\n            for (sb = 0; sb < SBLIMIT; sb++) {\n                for (ss = 0; ss < SSLIMIT; ss++) {\n                    if (is_pos[i] === 7) {\n                        if (ms_stereo) {\n                            lr[0][sb][ss] = (ro[0][sb][ss] + ro[1][sb][ss]) * 0.707106781;\n                            lr[1][sb][ss] = (ro[0][sb][ss] - ro[1][sb][ss]) * 0.707106781;\n                        } else {\n                            lr[0][sb][ss] = ro[0][sb][ss];\n                            lr[1][sb][ss] = ro[1][sb][ss];\n                        }\n                    }\n                    i++;\n                }\n            }\n        }\n    }, {\n        key: 'reorder',\n        value: function reorder(xr, ch, gr) {\n            var gr_info = this.si.ch[ch].gr[gr];\n            var freq = void 0,\n                freq3 = void 0;\n            var index = void 0;\n            var sfb = void 0,\n                sfb_start = void 0,\n                sfb_lines = void 0;\n            var src_line = void 0,\n                des_line = void 0;\n            var xr_1d = xr;\n\n            var sfBandIndex = this.sfBandIndex,\n                sfreq = this.sfreq;\n            var out_1d = this.out_1d;\n\n            if (gr_info.window_switching_flag !== 0 && gr_info.block_type === 2) {\n                for (index = 0; index < 576; index++) {\n                    out_1d[index] = 0.0;\n                }if (gr_info.mixed_block_flag !== 0) {\n                    // NO REORDER FOR LOW 2 SUBBANDS\n                    for (index = 0; index < 36; index++) {\n                        // Modif E.B 02/22/99\n                        var reste = index % SSLIMIT;\n                        var quotien = (index - reste) / SSLIMIT;\n                        out_1d[index] = xr_1d[quotien][reste];\n                    }\n\n                    // REORDERING FOR REST SWITCHED SHORT\n                    for (sfb = 3; sfb < 13; sfb++) {\n                        sfb_start = sfBandIndex[sfreq].s[sfb];\n                        sfb_lines = sfBandIndex[sfreq].s[sfb + 1] - sfb_start;\n\n                        var sfb_start3 = (sfb_start << 2) - sfb_start;\n\n                        for (freq = 0, freq3 = 0; freq < sfb_lines; freq++, freq3 += 3) {\n                            src_line = sfb_start3 + freq;\n                            des_line = sfb_start3 + freq3;\n                            // Modif E.B 02/22/99\n                            var _reste3 = src_line % SSLIMIT;\n                            var _quotien3 = (src_line - _reste3) / SSLIMIT;\n\n                            out_1d[des_line] = xr_1d[_quotien3][_reste3];\n                            src_line += sfb_lines;\n                            des_line++;\n\n                            _reste3 = src_line % SSLIMIT;\n                            _quotien3 = (src_line - _reste3) / SSLIMIT;\n\n                            out_1d[des_line] = xr_1d[_quotien3][_reste3];\n                            src_line += sfb_lines;\n                            des_line++;\n\n                            _reste3 = src_line % SSLIMIT;\n                            _quotien3 = (src_line - _reste3) / SSLIMIT;\n\n                            out_1d[des_line] = xr_1d[_quotien3][_reste3];\n                        }\n                    }\n                } else {\n                    // pure short\n                    for (index = 0; index < 576; index++) {\n                        var j = reorder_table[sfreq][index];\n                        var _reste4 = j % SSLIMIT;\n                        var _quotien4 = (j - _reste4) / SSLIMIT;\n                        out_1d[index] = xr_1d[_quotien4][_reste4];\n                    }\n                }\n            } else {\n                // long blocks\n                for (index = 0; index < 576; index++) {\n                    // Modif E.B 02/22/99\n                    var _reste5 = index % SSLIMIT;\n                    var _quotien5 = (index - _reste5) / SSLIMIT;\n                    out_1d[index] = xr_1d[_quotien5][_reste5];\n                }\n            }\n        }\n    }, {\n        key: 'antialias',\n        value: function antialias(ch, gr) {\n            var sb18 = void 0,\n                ss = void 0,\n                sb18lim = void 0;\n            var gr_info = this.si.ch[ch].gr[gr];\n\n            // 31 alias-reduction operations between each pair of sub-bands\n            // with 8 butterflies between each pair\n\n            if (gr_info.window_switching_flag !== 0 && gr_info.block_type === 2 && !(gr_info.mixed_block_flag !== 0)) return;\n\n            if (gr_info.window_switching_flag !== 0 && gr_info.mixed_block_flag !== 0 && gr_info.block_type === 2) {\n                sb18lim = 18;\n            } else {\n                sb18lim = 558;\n            }\n\n            var out_1d = this.out_1d;\n\n            for (sb18 = 0; sb18 < sb18lim; sb18 += 18) {\n                for (ss = 0; ss < 8; ss++) {\n                    var src_idx1 = sb18 + 17 - ss;\n                    var src_idx2 = sb18 + 18 + ss;\n                    var bu = out_1d[src_idx1];\n                    var bd = out_1d[src_idx2];\n                    out_1d[src_idx1] = bu * cs[ss] - bd * ca[ss];\n                    out_1d[src_idx2] = bd * cs[ss] + bu * ca[ss];\n                }\n            }\n        }\n    }, {\n        key: 'hybrid',\n        value: function hybrid(ch, gr) {\n            var bt = void 0;\n            var sb18 = void 0;\n            var gr_info = this.si.ch[ch].gr[gr];\n            var tsOut = void 0;\n\n            var out_1d = this.out_1d;\n            var tsOutCopy = this.tsOutCopy;\n\n            for (sb18 = 0; sb18 < 576; sb18 += 18) {\n                bt = gr_info.window_switching_flag !== 0 && gr_info.mixed_block_flag !== 0 && sb18 < 36 ? 0 : gr_info.block_type;\n\n                tsOut = out_1d;\n                // Modif E.B 02/22/99\n                for (var cc = 0; cc < 18; cc++) {\n                    tsOutCopy[cc] = tsOut[cc + sb18];\n                }this.inv_mdct(tsOutCopy, this.rawout, bt);\n\n                for (var _cc = 0; _cc < 18; _cc++) {\n                    tsOut[_cc + sb18] = tsOutCopy[_cc];\n                } // Fin Modif\n\n                // overlap addition\n                var prvblk = this.prevblck;\n                var rawout = this.rawout;\n\n                tsOut[sb18] = rawout[0] + prvblk[ch][sb18];\n                prvblk[ch][sb18] = rawout[18];\n                tsOut[1 + sb18] = rawout[1] + prvblk[ch][sb18 + 1];\n                prvblk[ch][sb18 + 1] = rawout[19];\n                tsOut[2 + sb18] = rawout[2] + prvblk[ch][sb18 + 2];\n                prvblk[ch][sb18 + 2] = rawout[20];\n                tsOut[3 + sb18] = rawout[3] + prvblk[ch][sb18 + 3];\n                prvblk[ch][sb18 + 3] = rawout[21];\n                tsOut[4 + sb18] = rawout[4] + prvblk[ch][sb18 + 4];\n                prvblk[ch][sb18 + 4] = rawout[22];\n                tsOut[5 + sb18] = rawout[5] + prvblk[ch][sb18 + 5];\n                prvblk[ch][sb18 + 5] = rawout[23];\n                tsOut[6 + sb18] = rawout[6] + prvblk[ch][sb18 + 6];\n                prvblk[ch][sb18 + 6] = rawout[24];\n                tsOut[7 + sb18] = rawout[7] + prvblk[ch][sb18 + 7];\n                prvblk[ch][sb18 + 7] = rawout[25];\n                tsOut[8 + sb18] = rawout[8] + prvblk[ch][sb18 + 8];\n                prvblk[ch][sb18 + 8] = rawout[26];\n                tsOut[9 + sb18] = rawout[9] + prvblk[ch][sb18 + 9];\n                prvblk[ch][sb18 + 9] = rawout[27];\n                tsOut[10 + sb18] = rawout[10] + prvblk[ch][sb18 + 10];\n                prvblk[ch][sb18 + 10] = rawout[28];\n                tsOut[11 + sb18] = rawout[11] + prvblk[ch][sb18 + 11];\n                prvblk[ch][sb18 + 11] = rawout[29];\n                tsOut[12 + sb18] = rawout[12] + prvblk[ch][sb18 + 12];\n                prvblk[ch][sb18 + 12] = rawout[30];\n                tsOut[13 + sb18] = rawout[13] + prvblk[ch][sb18 + 13];\n                prvblk[ch][sb18 + 13] = rawout[31];\n                tsOut[14 + sb18] = rawout[14] + prvblk[ch][sb18 + 14];\n                prvblk[ch][sb18 + 14] = rawout[32];\n                tsOut[15 + sb18] = rawout[15] + prvblk[ch][sb18 + 15];\n                prvblk[ch][sb18 + 15] = rawout[33];\n                tsOut[16 + sb18] = rawout[16] + prvblk[ch][sb18 + 16];\n                prvblk[ch][sb18 + 16] = rawout[34];\n                tsOut[17 + sb18] = rawout[17] + prvblk[ch][sb18 + 17];\n                prvblk[ch][sb18 + 17] = rawout[35];\n            }\n        }\n    }, {\n        key: 'inv_mdct',\n        value: function inv_mdct(inp, out, block_type) {\n            var win_bt = void 0;\n            var i = void 0;\n\n            var tmpf_0 = void 0,\n                tmpf_1 = void 0,\n                tmpf_2 = void 0,\n                tmpf_3 = void 0,\n                tmpf_4 = void 0,\n                tmpf_5 = void 0,\n                tmpf_6 = void 0,\n                tmpf_7 = void 0,\n                tmpf_8 = void 0,\n                tmpf_9 = void 0;\n            var tmpf_10 = void 0,\n                tmpf_11 = void 0,\n                tmpf_12 = void 0,\n                tmpf_13 = void 0,\n                tmpf_14 = void 0,\n                tmpf_15 = void 0,\n                tmpf_16 = void 0,\n                tmpf_17 = void 0;\n\n            tmpf_0 = tmpf_1 = tmpf_2 = tmpf_3 = tmpf_4 = tmpf_5 = tmpf_6 = tmpf_7 = tmpf_8 = tmpf_9 = tmpf_10 = tmpf_11 = tmpf_12 = tmpf_13 = tmpf_14 = tmpf_15 = tmpf_16 = tmpf_17 = 0.0;\n\n            if (block_type === 2) {\n\n                out[0] = 0.0;\n                out[1] = 0.0;\n                out[2] = 0.0;\n                out[3] = 0.0;\n                out[4] = 0.0;\n                out[5] = 0.0;\n                out[6] = 0.0;\n                out[7] = 0.0;\n                out[8] = 0.0;\n                out[9] = 0.0;\n                out[10] = 0.0;\n                out[11] = 0.0;\n                out[12] = 0.0;\n                out[13] = 0.0;\n                out[14] = 0.0;\n                out[15] = 0.0;\n                out[16] = 0.0;\n                out[17] = 0.0;\n                out[18] = 0.0;\n                out[19] = 0.0;\n                out[20] = 0.0;\n                out[21] = 0.0;\n                out[22] = 0.0;\n                out[23] = 0.0;\n                out[24] = 0.0;\n                out[25] = 0.0;\n                out[26] = 0.0;\n                out[27] = 0.0;\n                out[28] = 0.0;\n                out[29] = 0.0;\n                out[30] = 0.0;\n                out[31] = 0.0;\n                out[32] = 0.0;\n                out[33] = 0.0;\n                out[34] = 0.0;\n                out[35] = 0.0;\n\n                var six_i = 0;\n\n                for (i = 0; i < 3; i++) {\n                    // 12 point IMDCT\n                    // Begin 12 point IDCT\n                    // Input aliasing for 12 pt IDCT\n                    inp[15 + i] += inp[12 + i];\n                    inp[12 + i] += inp[9 + i];\n                    inp[9 + i] += inp[6 + i];\n                    inp[6 + i] += inp[3 + i];\n                    inp[3 + i] += inp[i];\n\n                    // Input aliasing on odd indices (for 6 point IDCT)\n                    inp[15 + i] += inp[9 + i];\n                    inp[9 + i] += inp[3 + i];\n\n                    // 3 point IDCT on even indices\n                    var pp1 = void 0,\n                        pp2 = void 0,\n                        sum = void 0;\n                    pp2 = inp[12 + i] * 0.500000000;\n                    pp1 = inp[6 + i] * 0.866025403;\n                    sum = inp[i] + pp2;\n                    tmpf_1 = inp[i] - inp[12 + i];\n                    tmpf_0 = sum + pp1;\n                    tmpf_2 = sum - pp1;\n\n                    // End 3 point IDCT on even indices\n                    // 3 point IDCT on odd indices (for 6 point IDCT)\n                    pp2 = inp[15 + i] * 0.500000000;\n                    pp1 = inp[9 + i] * 0.866025403;\n                    sum = inp[3 + i] + pp2;\n                    tmpf_4 = inp[3 + i] - inp[15 + i];\n                    tmpf_5 = sum + pp1;\n                    tmpf_3 = sum - pp1;\n                    // End 3 point IDCT on odd indices\n                    // Twiddle factors on odd indices (for 6 point IDCT)\n\n                    tmpf_3 *= 1.931851653;\n                    tmpf_4 *= 0.707106781;\n                    tmpf_5 *= 0.517638090;\n\n                    // Output butterflies on 2 3 point IDCT's (for 6 point IDCT)\n                    var save = tmpf_0;\n                    tmpf_0 += tmpf_5;\n                    tmpf_5 = save - tmpf_5;\n                    save = tmpf_1;\n                    tmpf_1 += tmpf_4;\n                    tmpf_4 = save - tmpf_4;\n                    save = tmpf_2;\n                    tmpf_2 += tmpf_3;\n                    tmpf_3 = save - tmpf_3;\n\n                    // End 6 point IDCT\n                    // Twiddle factors on indices (for 12 point IDCT)\n\n                    tmpf_0 *= 0.504314480;\n                    tmpf_1 *= 0.541196100;\n                    tmpf_2 *= 0.630236207;\n                    tmpf_3 *= 0.821339815;\n                    tmpf_4 *= 1.306562965;\n                    tmpf_5 *= 3.830648788;\n\n                    // End 12 point IDCT\n\n                    // Shift to 12 point modified IDCT, multiply by window type 2\n                    tmpf_8 = -tmpf_0 * 0.793353340;\n                    tmpf_9 = -tmpf_0 * 0.608761429;\n                    tmpf_7 = -tmpf_1 * 0.923879532;\n                    tmpf_10 = -tmpf_1 * 0.382683432;\n                    tmpf_6 = -tmpf_2 * 0.991444861;\n                    tmpf_11 = -tmpf_2 * 0.130526192;\n\n                    tmpf_0 = tmpf_3;\n                    tmpf_1 = tmpf_4 * 0.382683432;\n                    tmpf_2 = tmpf_5 * 0.608761429;\n\n                    tmpf_3 = -tmpf_5 * 0.793353340;\n                    tmpf_4 = -tmpf_4 * 0.923879532;\n                    tmpf_5 = -tmpf_0 * 0.991444861;\n\n                    tmpf_0 *= 0.130526192;\n\n                    out[six_i + 6] += tmpf_0;\n                    out[six_i + 7] += tmpf_1;\n                    out[six_i + 8] += tmpf_2;\n                    out[six_i + 9] += tmpf_3;\n                    out[six_i + 10] += tmpf_4;\n                    out[six_i + 11] += tmpf_5;\n                    out[six_i + 12] += tmpf_6;\n                    out[six_i + 13] += tmpf_7;\n                    out[six_i + 14] += tmpf_8;\n                    out[six_i + 15] += tmpf_9;\n                    out[six_i + 16] += tmpf_10;\n                    out[six_i + 17] += tmpf_11;\n\n                    six_i += 6;\n                }\n            } else {\n                // 36 point IDCT\n                // input aliasing for 36 point IDCT\n                inp[17] += inp[16];\n                inp[16] += inp[15];\n                inp[15] += inp[14];\n                inp[14] += inp[13];\n                inp[13] += inp[12];\n                inp[12] += inp[11];\n                inp[11] += inp[10];\n                inp[10] += inp[9];\n                inp[9] += inp[8];\n                inp[8] += inp[7];\n                inp[7] += inp[6];\n                inp[6] += inp[5];\n                inp[5] += inp[4];\n                inp[4] += inp[3];\n                inp[3] += inp[2];\n                inp[2] += inp[1];\n                inp[1] += inp[0];\n\n                // 18 point IDCT for odd indices\n                // input aliasing for 18 point IDCT\n                inp[17] += inp[15];\n                inp[15] += inp[13];\n                inp[13] += inp[11];\n                inp[11] += inp[9];\n                inp[9] += inp[7];\n                inp[7] += inp[5];\n                inp[5] += inp[3];\n                inp[3] += inp[1];\n\n                var tmp0 = void 0,\n                    tmp1 = void 0,\n                    tmp2 = void 0,\n                    tmp3 = void 0,\n                    tmp4 = void 0,\n                    tmp0_ = void 0,\n                    tmp1_ = void 0,\n                    tmp2_ = void 0,\n                    tmp3_ = void 0;\n                var tmp0o = void 0,\n                    tmp1o = void 0,\n                    tmp2o = void 0,\n                    tmp3o = void 0,\n                    tmp4o = void 0,\n                    tmp0_o = void 0,\n                    tmp1_o = void 0,\n                    tmp2_o = void 0,\n                    tmp3_o = void 0;\n\n                // Fast 9 Point Inverse Discrete Cosine Transform\n                //\n                // By  Francois-Raymond Boyer\n                //         mailto:boyerf@iro.umontreal.ca\n                //         http://www.iro.umontreal.ca/~boyerf\n                //\n                // The code has been optimized for Intel processors\n                //  (takes a lot of time to convert float to and from iternal FPU representation)\n                //\n                // It is a simple \"factorization\" of the IDCT matrix.\n\n                // 9 point IDCT on even indices\n\n                // 5 points on odd indices (not realy an IDCT)\n                var i00 = inp[0] + inp[0];\n                var iip12 = i00 + inp[12];\n\n                tmp0 = iip12 + inp[4] * 1.8793852415718 + inp[8] * 1.532088886238 + inp[16] * 0.34729635533386;\n                tmp1 = i00 + inp[4] - inp[8] - inp[12] - inp[12] - inp[16];\n                tmp2 = iip12 - inp[4] * 0.34729635533386 - inp[8] * 1.8793852415718 + inp[16] * 1.532088886238;\n                tmp3 = iip12 - inp[4] * 1.532088886238 + inp[8] * 0.34729635533386 - inp[16] * 1.8793852415718;\n                tmp4 = inp[0] - inp[4] + inp[8] - inp[12] + inp[16];\n\n                // 4 points on even indices\n                var i66_ = inp[6] * 1.732050808; // Sqrt[3]\n                tmp0_ = inp[2] * 1.9696155060244 + i66_ + inp[10] * 1.2855752193731 + inp[14] * 0.68404028665134;\n                tmp1_ = (inp[2] - inp[10] - inp[14]) * 1.732050808;\n                tmp2_ = inp[2] * 1.2855752193731 - i66_ - inp[10] * 0.68404028665134 + inp[14] * 1.9696155060244;\n                tmp3_ = inp[2] * 0.68404028665134 - i66_ + inp[10] * 1.9696155060244 - inp[14] * 1.2855752193731;\n\n                // 9 point IDCT on odd indices\n                // 5 points on odd indices (not realy an IDCT)\n                var i0 = inp[1] + inp[1];\n                var i0p12 = i0 + inp[12 + 1];\n\n                tmp0o = i0p12 + inp[4 + 1] * 1.8793852415718 + inp[9] * 1.532088886238 + inp[17] * 0.34729635533386;\n                tmp1o = i0 + inp[4 + 1] - inp[8 + 1] - inp[12 + 1] - inp[12 + 1] - inp[16 + 1];\n                tmp2o = i0p12 - inp[4 + 1] * 0.34729635533386 - inp[8 + 1] * 1.8793852415718 + inp[16 + 1] * 1.532088886238;\n                tmp3o = i0p12 - inp[4 + 1] * 1.532088886238 + inp[8 + 1] * 0.34729635533386 - inp[16 + 1] * 1.8793852415718;\n                tmp4o = (inp[0 + 1] - inp[4 + 1] + inp[8 + 1] - inp[12 + 1] + inp[16 + 1]) * 0.707106781; // Twiddled\n\n                // 4 points on even indices\n                var i6_ = inp[6 + 1] * 1.732050808; // Sqrt[3]\n\n                tmp0_o = inp[2 + 1] * 1.9696155060244 + i6_ + inp[10 + 1] * 1.2855752193731 + inp[14 + 1] * 0.68404028665134;\n                tmp1_o = (inp[2 + 1] - inp[10 + 1] - inp[14 + 1]) * 1.732050808;\n                tmp2_o = inp[2 + 1] * 1.2855752193731 - i6_ - inp[10 + 1] * 0.68404028665134 + inp[14 + 1] * 1.9696155060244;\n                tmp3_o = inp[2 + 1] * 0.68404028665134 - i6_ + inp[10 + 1] * 1.9696155060244 - inp[14 + 1] * 1.2855752193731;\n\n                // Twiddle factors on odd indices\n                // and\n                // Butterflies on 9 point IDCT's\n                // and\n                // twiddle factors for 36 point IDCT\n\n                var e = void 0,\n                    o = void 0;\n                e = tmp0 + tmp0_;\n                o = (tmp0o + tmp0_o) * 0.501909918;\n                tmpf_0 = e + o;\n                tmpf_17 = e - o;\n                e = tmp1 + tmp1_;\n                o = (tmp1o + tmp1_o) * 0.517638090;\n                tmpf_1 = e + o;\n                tmpf_16 = e - o;\n                e = tmp2 + tmp2_;\n                o = (tmp2o + tmp2_o) * 0.551688959;\n                tmpf_2 = e + o;\n                tmpf_15 = e - o;\n                e = tmp3 + tmp3_;\n                o = (tmp3o + tmp3_o) * 0.610387294;\n                tmpf_3 = e + o;\n                tmpf_14 = e - o;\n                tmpf_4 = tmp4 + tmp4o;\n                tmpf_13 = tmp4 - tmp4o;\n                e = tmp3 - tmp3_;\n                o = (tmp3o - tmp3_o) * 0.871723397;\n                tmpf_5 = e + o;\n                tmpf_12 = e - o;\n                e = tmp2 - tmp2_;\n                o = (tmp2o - tmp2_o) * 1.183100792;\n                tmpf_6 = e + o;\n                tmpf_11 = e - o;\n                e = tmp1 - tmp1_;\n                o = (tmp1o - tmp1_o) * 1.931851653;\n                tmpf_7 = e + o;\n                tmpf_10 = e - o;\n                e = tmp0 - tmp0_;\n                o = (tmp0o - tmp0_o) * 5.736856623;\n                tmpf_8 = e + o;\n                tmpf_9 = e - o;\n\n                // end 36 point IDCT */\n                // shift to modified IDCT\n                win_bt = win[block_type];\n\n                out[0] = -tmpf_9 * win_bt[0];\n                out[1] = -tmpf_10 * win_bt[1];\n                out[2] = -tmpf_11 * win_bt[2];\n                out[3] = -tmpf_12 * win_bt[3];\n                out[4] = -tmpf_13 * win_bt[4];\n                out[5] = -tmpf_14 * win_bt[5];\n                out[6] = -tmpf_15 * win_bt[6];\n                out[7] = -tmpf_16 * win_bt[7];\n                out[8] = -tmpf_17 * win_bt[8];\n                out[9] = tmpf_17 * win_bt[9];\n                out[10] = tmpf_16 * win_bt[10];\n                out[11] = tmpf_15 * win_bt[11];\n                out[12] = tmpf_14 * win_bt[12];\n                out[13] = tmpf_13 * win_bt[13];\n                out[14] = tmpf_12 * win_bt[14];\n                out[15] = tmpf_11 * win_bt[15];\n                out[16] = tmpf_10 * win_bt[16];\n                out[17] = tmpf_9 * win_bt[17];\n                out[18] = tmpf_8 * win_bt[18];\n                out[19] = tmpf_7 * win_bt[19];\n                out[20] = tmpf_6 * win_bt[20];\n                out[21] = tmpf_5 * win_bt[21];\n                out[22] = tmpf_4 * win_bt[22];\n                out[23] = tmpf_3 * win_bt[23];\n                out[24] = tmpf_2 * win_bt[24];\n                out[25] = tmpf_1 * win_bt[25];\n                out[26] = tmpf_0 * win_bt[26];\n                out[27] = tmpf_0 * win_bt[27];\n                out[28] = tmpf_1 * win_bt[28];\n                out[29] = tmpf_2 * win_bt[29];\n                out[30] = tmpf_3 * win_bt[30];\n                out[31] = tmpf_4 * win_bt[31];\n                out[32] = tmpf_5 * win_bt[32];\n                out[33] = tmpf_6 * win_bt[33];\n                out[34] = tmpf_7 * win_bt[34];\n                out[35] = tmpf_8 * win_bt[35];\n            }\n        }\n    }]);\n    return Layer3;\n}();\n\nfunction reorder(scalefac_band) {\n    var j = 0;\n    var ix = new Int32Array(576); //int[576];\n    for (var sfb = 0; sfb < 13; sfb++) {\n        var start = scalefac_band[sfb];\n        var end = scalefac_band[sfb + 1];\n        for (var window = 0; window < 3; window++) {\n            for (var i = start; i < end; i++) {\n                ix[3 * i + window] = j++;\n            }\n        }\n    }\n    return ix;\n}\n\nvar gr_info_s = function gr_info_s() {\n    (0, _classCallCheck3.default)(this, gr_info_s);\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.window_switching_flag = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n    // public int[] table_select;\n    this.table_select = new Int32Array(3).fill(0);\n    // public int[] subblock_gain;\n    this.subblock_gain = new Int32Array(3).fill(0);\n};\n\nvar temporaire = function temporaire() {\n    (0, _classCallCheck3.default)(this, temporaire);\n\n    // public int[] scfsi;\n    this.scfsi = new Int32Array(4).fill(0);\n    this.gr = [new gr_info_s(), new gr_info_s()];\n};\n\nvar III_side_info_t = function III_side_info_t() {\n    (0, _classCallCheck3.default)(this, III_side_info_t);\n\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.ch = [new temporaire(), new temporaire()];\n};\n\nvar temporaire2 = function temporaire2() {\n    (0, _classCallCheck3.default)(this, temporaire2);\n\n    // public int[] l;\n    this.l = new Int32Array(23).fill(0);\n    // public int[][] s;\n    this.s = new Array(3).fill().map(function () {\n        return new Int32Array(13).fill(0);\n    });\n};\n\nvar SBI = function SBI() {\n    var thel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var thes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, _classCallCheck3.default)(this, SBI);\n\n    // public int[] l;\n    this.l = thel || new Int32Array(23).fill(0);\n    // public int[] s;\n    this.s = thes || new Int32Array(14).fill(0);\n};\n\nvar d43 = 4 / 3;\nvar SSLIMIT = 18;\nvar SBLIMIT = 32;\n\n// private static /*final*/ int reorder_table[][]\nvar reorder_table = null;\n\nvar slen = [[0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4], [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3]];\n\nvar t_43 = function () {\n    // float[] t43 = new float[8192];\n    var t43 = new Float32Array(8192).fill(0.0);\n    var d43 = 4.0 / 3.0;\n\n    for (var i = 0; i < 8192; i++) {\n        t43[i] = Math.pow(i, d43);\n    }\n    return t43;\n}();\n\nvar two_to_negative_half_pow = [1.0000000000E+00, 7.0710678119E-01, 5.0000000000E-01, 3.5355339059E-01, 2.5000000000E-01, 1.7677669530E-01, 1.2500000000E-01, 8.8388347648E-02, 6.2500000000E-02, 4.4194173824E-02, 3.1250000000E-02, 2.2097086912E-02, 1.5625000000E-02, 1.1048543456E-02, 7.8125000000E-03, 5.5242717280E-03, 3.9062500000E-03, 2.7621358640E-03, 1.9531250000E-03, 1.3810679320E-03, 9.7656250000E-04, 6.9053396600E-04, 4.8828125000E-04, 3.4526698300E-04, 2.4414062500E-04, 1.7263349150E-04, 1.2207031250E-04, 8.6316745750E-05, 6.1035156250E-05, 4.3158372875E-05, 3.0517578125E-05, 2.1579186438E-05, 1.5258789062E-05, 1.0789593219E-05, 7.6293945312E-06, 5.3947966094E-06, 3.8146972656E-06, 2.6973983047E-06, 1.9073486328E-06, 1.3486991523E-06, 9.5367431641E-07, 6.7434957617E-07, 4.7683715820E-07, 3.3717478809E-07, 2.3841857910E-07, 1.6858739404E-07, 1.1920928955E-07, 8.4293697022E-08, 5.9604644775E-08, 4.2146848511E-08, 2.9802322388E-08, 2.1073424255E-08, 1.4901161194E-08, 1.0536712128E-08, 7.4505805969E-09, 5.2683560639E-09, 3.7252902985E-09, 2.6341780319E-09, 1.8626451492E-09, 1.3170890160E-09, 9.3132257462E-10, 6.5854450798E-10, 4.6566128731E-10, 3.2927225399E-10];\n\nvar pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0];\n\nvar cs = [0.857492925712, 0.881741997318, 0.949628649103, 0.983314592492, 0.995517816065, 0.999160558175, 0.999899195243, 0.999993155067];\n\nvar ca = [-0.5144957554270, -0.4717319685650, -0.3133774542040, -0.1819131996110, -0.0945741925262, -0.0409655828852, -0.0141985685725, -0.00369997467375];\n\nvar win = [[-1.6141214951E-02, -5.3603178919E-02, -1.0070713296E-01, -1.6280817573E-01, -4.9999999679E-01, -3.8388735032E-01, -6.2061144372E-01, -1.1659756083E+00, -3.8720752656E+00, -4.2256286556E+00, -1.5195289984E+00, -9.7416483388E-01, -7.3744074053E-01, -1.2071067773E+00, -5.1636156596E-01, -4.5426052317E-01, -4.0715656898E-01, -3.6969460527E-01, -3.3876269197E-01, -3.1242222492E-01, -2.8939587111E-01, -2.6880081906E-01, -5.0000000266E-01, -2.3251417468E-01, -2.1596714708E-01, -2.0004979098E-01, -1.8449493497E-01, -1.6905846094E-01, -1.5350360518E-01, -1.3758624925E-01, -1.2103922149E-01, -2.0710679058E-01, -8.4752577594E-02, -6.4157525656E-02, -4.1131172614E-02, -1.4790705759E-02], [-1.6141214951E-02, -5.3603178919E-02, -1.0070713296E-01, -1.6280817573E-01, -4.9999999679E-01, -3.8388735032E-01, -6.2061144372E-01, -1.1659756083E+00, -3.8720752656E+00, -4.2256286556E+00, -1.5195289984E+00, -9.7416483388E-01, -7.3744074053E-01, -1.2071067773E+00, -5.1636156596E-01, -4.5426052317E-01, -4.0715656898E-01, -3.6969460527E-01, -3.3908542600E-01, -3.1511810350E-01, -2.9642226150E-01, -2.8184548650E-01, -5.4119610000E-01, -2.6213228100E-01, -2.5387916537E-01, -2.3296291359E-01, -1.9852728987E-01, -1.5233534808E-01, -9.6496400054E-02, -3.3423828516E-02, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00], [-4.8300800645E-02, -1.5715656932E-01, -2.8325045177E-01, -4.2953747763E-01, -1.2071067795E+00, -8.2426483178E-01, -1.1451749106E+00, -1.7695290101E+00, -4.5470225061E+00, -3.4890531002E+00, -7.3296292804E-01, -1.5076514758E-01, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00], [0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, -1.5076513660E-01, -7.3296291107E-01, -3.4890530566E+00, -4.5470224727E+00, -1.7695290031E+00, -1.1451749092E+00, -8.3137738100E-01, -1.3065629650E+00, -5.4142014250E-01, -4.6528974900E-01, -4.1066990750E-01, -3.7004680800E-01, -3.3876269197E-01, -3.1242222492E-01, -2.8939587111E-01, -2.6880081906E-01, -5.0000000266E-01, -2.3251417468E-01, -2.1596714708E-01, -2.0004979098E-01, -1.8449493497E-01, -1.6905846094E-01, -1.5350360518E-01, -1.3758624925E-01, -1.2103922149E-01, -2.0710679058E-01, -8.4752577594E-02, -6.4157525656E-02, -4.1131172614E-02, -1.4790705759E-02]];\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MXOFF = 250;\nvar HTN = 34;\n\nvar ht = null;\n\nvar Huffman = function () {\n    (0, _createClass3.default)(Huffman, null, [{\n        key: 'ht',\n        get: function get() {\n            return Huffman.inithuff();\n        }\n    }]);\n\n    function Huffman() {\n        (0, _classCallCheck3.default)(this, Huffman);\n\n        this.tablename0 = ' ';\n        this.tablename1 = ' ';\n        this.tablename2 = ' ';\n\n        this.xlen = null;\n        this.ylen = null;\n        this.linbits = null;\n        this.linmax = null;\n        this.ref = null;\n        this.table = null;\n        this.hlen = null;\n        this.val = null;\n        this.treelen = null;\n    }\n\n    (0, _createClass3.default)(Huffman, null, [{\n        key: 'inithuff',\n        value: function inithuff() {\n            if (ht != null) return ht;\n\n            // public static huffcodetab[]  ht = null;\n            ht = new Array(HTN);\n\n            ht[0] = huffcodetab(\"0  \", 0, 0, 0, 0, -1, null, null, ValTab0, 0);\n            ht[1] = huffcodetab(\"1  \", 2, 2, 0, 0, -1, null, null, ValTab1, 7);\n            ht[2] = huffcodetab(\"2  \", 3, 3, 0, 0, -1, null, null, ValTab2, 17);\n            ht[3] = huffcodetab(\"3  \", 3, 3, 0, 0, -1, null, null, ValTab3, 17);\n            ht[4] = huffcodetab(\"4  \", 0, 0, 0, 0, -1, null, null, ValTab4, 0);\n            ht[5] = huffcodetab(\"5  \", 4, 4, 0, 0, -1, null, null, ValTab5, 31);\n            ht[6] = huffcodetab(\"6  \", 4, 4, 0, 0, -1, null, null, ValTab6, 31);\n            ht[7] = huffcodetab(\"7  \", 6, 6, 0, 0, -1, null, null, ValTab7, 71);\n            ht[8] = huffcodetab(\"8  \", 6, 6, 0, 0, -1, null, null, ValTab8, 71);\n            ht[9] = huffcodetab(\"9  \", 6, 6, 0, 0, -1, null, null, ValTab9, 71);\n            ht[10] = huffcodetab(\"10 \", 8, 8, 0, 0, -1, null, null, ValTab10, 127);\n            ht[11] = huffcodetab(\"11 \", 8, 8, 0, 0, -1, null, null, ValTab11, 127);\n            ht[12] = huffcodetab(\"12 \", 8, 8, 0, 0, -1, null, null, ValTab12, 127);\n            ht[13] = huffcodetab(\"13 \", 16, 16, 0, 0, -1, null, null, ValTab13, 511);\n            ht[14] = huffcodetab(\"14 \", 0, 0, 0, 0, -1, null, null, ValTab14, 0);\n            ht[15] = huffcodetab(\"15 \", 16, 16, 0, 0, -1, null, null, ValTab15, 511);\n            ht[16] = huffcodetab(\"16 \", 16, 16, 1, 1, -1, null, null, ValTab16, 511);\n            ht[17] = huffcodetab(\"17 \", 16, 16, 2, 3, 16, null, null, ValTab16, 511);\n            ht[18] = huffcodetab(\"18 \", 16, 16, 3, 7, 16, null, null, ValTab16, 511);\n            ht[19] = huffcodetab(\"19 \", 16, 16, 4, 15, 16, null, null, ValTab16, 511);\n            ht[20] = huffcodetab(\"20 \", 16, 16, 6, 63, 16, null, null, ValTab16, 511);\n            ht[21] = huffcodetab(\"21 \", 16, 16, 8, 255, 16, null, null, ValTab16, 511);\n            ht[22] = huffcodetab(\"22 \", 16, 16, 10, 1023, 16, null, null, ValTab16, 511);\n            ht[23] = huffcodetab(\"23 \", 16, 16, 13, 8191, 16, null, null, ValTab16, 511);\n            ht[24] = huffcodetab(\"24 \", 16, 16, 4, 15, -1, null, null, ValTab24, 512);\n            ht[25] = huffcodetab(\"25 \", 16, 16, 5, 31, 24, null, null, ValTab24, 512);\n            ht[26] = huffcodetab(\"26 \", 16, 16, 6, 63, 24, null, null, ValTab24, 512);\n            ht[27] = huffcodetab(\"27 \", 16, 16, 7, 127, 24, null, null, ValTab24, 512);\n            ht[28] = huffcodetab(\"28 \", 16, 16, 8, 255, 24, null, null, ValTab24, 512);\n            ht[29] = huffcodetab(\"29 \", 16, 16, 9, 511, 24, null, null, ValTab24, 512);\n            ht[30] = huffcodetab(\"30 \", 16, 16, 11, 2047, 24, null, null, ValTab24, 512);\n            ht[31] = huffcodetab(\"31 \", 16, 16, 13, 8191, 24, null, null, ValTab24, 512);\n            ht[32] = huffcodetab(\"32 \", 1, 16, 0, 0, -1, null, null, ValTab32, 31);\n            ht[33] = huffcodetab(\"33 \", 1, 16, 0, 0, -1, null, null, ValTab33, 31);\n\n            return ht;\n        }\n    }, {\n        key: 'huffman_decoder',\n        value: function huffman_decoder(h, x, y, v, w, br) {\n            var dmask = 1 << 4 * 8 - 1;\n            var hs = 4 * 8;\n\n            var level = dmask,\n                point = 0,\n                error = 1;\n\n            if (h.val == null) return 2;\n\n            /* table 0 needs no bits */\n            if (h.treelen === 0) {\n                x[0] = y[0] = 0;\n                return 0;\n            }\n\n            // Lookup in Huffman table.\n\n            do {\n                if (h.val[point][0] === 0) {\n                    // end of tree\n                    x[0] = h.val[point][1] >>> 4;\n                    y[0] = h.val[point][1] & 0xf;\n                    error = 0;\n                    break;\n                }\n\n                if (br.hget1bit() !== 0) {\n                    while (h.val[point][1] >= MXOFF) {\n                        point += h.val[point][1];\n                    }point += h.val[point][1];\n                } else {\n                    while (h.val[point][0] >= MXOFF) {\n                        point += h.val[point][0];\n                    }point += h.val[point][0];\n                }\n\n                level >>>= 1; // fixme\n            } while (level !== 0 || point < 0 /*ht[0].treelen*/);\n\n            // Process sign encodings for quadruples tables.\n\n            if (h.tablename0 === '3' && (h.tablename1 === '2' || h.tablename1 === '3')) {\n                v[0] = y[0] >> 3 & 1;\n                w[0] = y[0] >> 2 & 1;\n                x[0] = y[0] >> 1 & 1;\n                y[0] = y[0] & 1;\n\n                if (v[0] !== 0) if (br.hget1bit() !== 0) v[0] = -v[0];\n                if (w[0] !== 0) if (br.hget1bit() !== 0) w[0] = -w[0];\n                if (x[0] !== 0) if (br.hget1bit() !== 0) x[0] = -x[0];\n                if (y[0] !== 0) if (br.hget1bit() !== 0) y[0] = -y[0];\n            } else {\n                if (h.linbits !== 0) if (h.xlen - 1 === x[0]) x[0] += br.hgetbits(h.linbits);\n                if (x[0] !== 0) if (br.hget1bit() !== 0) x[0] = -x[0];\n                if (h.linbits !== 0) if (h.ylen - 1 === y[0]) y[0] += br.hgetbits(h.linbits);\n                if (y[0] !== 0) if (br.hget1bit() !== 0) y[0] = -y[0];\n            }\n\n            return error;\n        }\n    }]);\n    return Huffman;\n}();\n\nfunction huffcodetab(S, XLEN, YLEN, LINBITS, LINMAX, REF, TABLE, HLEN, VAL, TREELEN) {\n    var inst = new Huffman();\n\n    inst.tablename0 = S[0];\n    inst.tablename1 = S[1];\n    inst.tablename2 = S[2];\n    inst.xlen = XLEN;\n    inst.ylen = YLEN;\n    inst.linbits = LINBITS;\n    inst.linmax = LINMAX;\n    inst.ref = REF;\n    inst.table = TABLE;\n    inst.hlen = HLEN;\n    inst.val = VAL;\n    inst.treelen = TREELEN;\n\n    return inst;\n}\n\nvar ValTab0 = [[0, 0]]; // dummy\n\nvar ValTab1 = [[2, 1], [0, 0], [2, 1], [0, 16], [2, 1], [0, 1], [0, 17]];\n\nvar ValTab2 = [[2, 1], [0, 0], [4, 1], [2, 1], [0, 16], [0, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 32], [0, 33], [2, 1], [0, 18], [2, 1], [0, 2], [0, 34]];\n\nvar ValTab3 = [[4, 1], [2, 1], [0, 0], [0, 1], [2, 1], [0, 17], [2, 1], [0, 16], [4, 1], [2, 1], [0, 32], [0, 33], [2, 1], [0, 18], [2, 1], [0, 2], [0, 34]];\n\nvar ValTab4 = [[0, 0]]; // dummy\n\nvar ValTab5 = [[2, 1], [0, 0], [4, 1], [2, 1], [0, 16], [0, 1], [2, 1], [0, 17], [8, 1], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 33], [0, 18], [8, 1], [4, 1], [2, 1], [0, 34], [0, 48], [2, 1], [0, 3], [0, 19], [2, 1], [0, 49], [2, 1], [0, 50], [2, 1], [0, 35], [0, 51]];\n\nvar ValTab6 = [[6, 1], [4, 1], [2, 1], [0, 0], [0, 16], [0, 17], [6, 1], [2, 1], [0, 1], [2, 1], [0, 32], [0, 33], [6, 1], [2, 1], [0, 18], [2, 1], [0, 2], [0, 34], [4, 1], [2, 1], [0, 49], [0, 19], [4, 1], [2, 1], [0, 48], [0, 50], [2, 1], [0, 35], [2, 1], [0, 3], [0, 51]];\n\nvar ValTab7 = [[2, 1], [0, 0], [4, 1], [2, 1], [0, 16], [0, 1], [8, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 32], [0, 2], [0, 33], [18, 1], [6, 1], [2, 1], [0, 18], [2, 1], [0, 34], [0, 48], [4, 1], [2, 1], [0, 49], [0, 19], [4, 1], [2, 1], [0, 3], [0, 50], [2, 1], [0, 35], [0, 4], [10, 1], [4, 1], [2, 1], [0, 64], [0, 65], [2, 1], [0, 20], [2, 1], [0, 66], [0, 36], [12, 1], [6, 1], [4, 1], [2, 1], [0, 51], [0, 67], [0, 80], [4, 1], [2, 1], [0, 52], [0, 5], [0, 81], [6, 1], [2, 1], [0, 21], [2, 1], [0, 82], [0, 37], [4, 1], [2, 1], [0, 68], [0, 53], [4, 1], [2, 1], [0, 83], [0, 84], [2, 1], [0, 69], [0, 85]];\n\nvar ValTab8 = [[6, 1], [2, 1], [0, 0], [2, 1], [0, 16], [0, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 33], [0, 18], [14, 1], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 34], [4, 1], [2, 1], [0, 48], [0, 3], [2, 1], [0, 49], [0, 19], [14, 1], [8, 1], [4, 1], [2, 1], [0, 50], [0, 35], [2, 1], [0, 64], [0, 4], [2, 1], [0, 65], [2, 1], [0, 20], [0, 66], [12, 1], [6, 1], [2, 1], [0, 36], [2, 1], [0, 51], [0, 80], [4, 1], [2, 1], [0, 67], [0, 52], [0, 81], [6, 1], [2, 1], [0, 21], [2, 1], [0, 5], [0, 82], [6, 1], [2, 1], [0, 37], [2, 1], [0, 68], [0, 53], [2, 1], [0, 83], [2, 1], [0, 69], [2, 1], [0, 84], [0, 85]];\n\nvar ValTab9 = [[8, 1], [4, 1], [2, 1], [0, 0], [0, 16], [2, 1], [0, 1], [0, 17], [10, 1], [4, 1], [2, 1], [0, 32], [0, 33], [2, 1], [0, 18], [2, 1], [0, 2], [0, 34], [12, 1], [6, 1], [4, 1], [2, 1], [0, 48], [0, 3], [0, 49], [2, 1], [0, 19], [2, 1], [0, 50], [0, 35], [12, 1], [4, 1], [2, 1], [0, 65], [0, 20], [4, 1], [2, 1], [0, 64], [0, 51], [2, 1], [0, 66], [0, 36], [10, 1], [6, 1], [4, 1], [2, 1], [0, 4], [0, 80], [0, 67], [2, 1], [0, 52], [0, 81], [8, 1], [4, 1], [2, 1], [0, 21], [0, 82], [2, 1], [0, 37], [0, 68], [6, 1], [4, 1], [2, 1], [0, 5], [0, 84], [0, 83], [2, 1], [0, 53], [2, 1], [0, 69], [0, 85]];\n\nvar ValTab10 = [[2, 1], [0, 0], [4, 1], [2, 1], [0, 16], [0, 1], [10, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 33], [0, 18], [28, 1], [8, 1], [4, 1], [2, 1], [0, 34], [0, 48], [2, 1], [0, 49], [0, 19], [8, 1], [4, 1], [2, 1], [0, 3], [0, 50], [2, 1], [0, 35], [0, 64], [4, 1], [2, 1], [0, 65], [0, 20], [4, 1], [2, 1], [0, 4], [0, 51], [2, 1], [0, 66], [0, 36], [28, 1], [10, 1], [6, 1], [4, 1], [2, 1], [0, 80], [0, 5], [0, 96], [2, 1], [0, 97], [0, 22], [12, 1], [6, 1], [4, 1], [2, 1], [0, 67], [0, 52], [0, 81], [2, 1], [0, 21], [2, 1], [0, 82], [0, 37], [4, 1], [2, 1], [0, 38], [0, 54], [0, 113], [20, 1], [8, 1], [2, 1], [0, 23], [4, 1], [2, 1], [0, 68], [0, 83], [0, 6], [6, 1], [4, 1], [2, 1], [0, 53], [0, 69], [0, 98], [2, 1], [0, 112], [2, 1], [0, 7], [0, 100], [14, 1], [4, 1], [2, 1], [0, 114], [0, 39], [6, 1], [2, 1], [0, 99], [2, 1], [0, 84], [0, 85], [2, 1], [0, 70], [0, 115], [8, 1], [4, 1], [2, 1], [0, 55], [0, 101], [2, 1], [0, 86], [0, 116], [6, 1], [2, 1], [0, 71], [2, 1], [0, 102], [0, 117], [4, 1], [2, 1], [0, 87], [0, 118], [2, 1], [0, 103], [0, 119]];\n\nvar ValTab11 = [[6, 1], [2, 1], [0, 0], [2, 1], [0, 16], [0, 1], [8, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 32], [0, 2], [0, 18], [24, 1], [8, 1], [2, 1], [0, 33], [2, 1], [0, 34], [2, 1], [0, 48], [0, 3], [4, 1], [2, 1], [0, 49], [0, 19], [4, 1], [2, 1], [0, 50], [0, 35], [4, 1], [2, 1], [0, 64], [0, 4], [2, 1], [0, 65], [0, 20], [30, 1], [16, 1], [10, 1], [4, 1], [2, 1], [0, 66], [0, 36], [4, 1], [2, 1], [0, 51], [0, 67], [0, 80], [4, 1], [2, 1], [0, 52], [0, 81], [0, 97], [6, 1], [2, 1], [0, 22], [2, 1], [0, 6], [0, 38], [2, 1], [0, 98], [2, 1], [0, 21], [2, 1], [0, 5], [0, 82], [16, 1], [10, 1], [6, 1], [4, 1], [2, 1], [0, 37], [0, 68], [0, 96], [2, 1], [0, 99], [0, 54], [4, 1], [2, 1], [0, 112], [0, 23], [0, 113], [16, 1], [6, 1], [4, 1], [2, 1], [0, 7], [0, 100], [0, 114], [2, 1], [0, 39], [4, 1], [2, 1], [0, 83], [0, 53], [2, 1], [0, 84], [0, 69], [10, 1], [4, 1], [2, 1], [0, 70], [0, 115], [2, 1], [0, 55], [2, 1], [0, 101], [0, 86], [10, 1], [6, 1], [4, 1], [2, 1], [0, 85], [0, 87], [0, 116], [2, 1], [0, 71], [0, 102], [4, 1], [2, 1], [0, 117], [0, 118], [2, 1], [0, 103], [0, 119]];\n\nvar ValTab12 = [[12, 1], [4, 1], [2, 1], [0, 16], [0, 1], [2, 1], [0, 17], [2, 1], [0, 0], [2, 1], [0, 32], [0, 2], [16, 1], [4, 1], [2, 1], [0, 33], [0, 18], [4, 1], [2, 1], [0, 34], [0, 49], [2, 1], [0, 19], [2, 1], [0, 48], [2, 1], [0, 3], [0, 64], [26, 1], [8, 1], [4, 1], [2, 1], [0, 50], [0, 35], [2, 1], [0, 65], [0, 51], [10, 1], [4, 1], [2, 1], [0, 20], [0, 66], [2, 1], [0, 36], [2, 1], [0, 4], [0, 80], [4, 1], [2, 1], [0, 67], [0, 52], [2, 1], [0, 81], [0, 21], [28, 1], [14, 1], [8, 1], [4, 1], [2, 1], [0, 82], [0, 37], [2, 1], [0, 83], [0, 53], [4, 1], [2, 1], [0, 96], [0, 22], [0, 97], [4, 1], [2, 1], [0, 98], [0, 38], [6, 1], [4, 1], [2, 1], [0, 5], [0, 6], [0, 68], [2, 1], [0, 84], [0, 69], [18, 1], [10, 1], [4, 1], [2, 1], [0, 99], [0, 54], [4, 1], [2, 1], [0, 112], [0, 7], [0, 113], [4, 1], [2, 1], [0, 23], [0, 100], [2, 1], [0, 70], [0, 114], [10, 1], [6, 1], [2, 1], [0, 39], [2, 1], [0, 85], [0, 115], [2, 1], [0, 55], [0, 86], [8, 1], [4, 1], [2, 1], [0, 101], [0, 116], [2, 1], [0, 71], [0, 102], [4, 1], [2, 1], [0, 117], [0, 87], [2, 1], [0, 118], [2, 1], [0, 103], [0, 119]];\n\nvar ValTab13 = [[2, 1], [0, 0], [6, 1], [2, 1], [0, 16], [2, 1], [0, 1], [0, 17], [28, 1], [8, 1], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 33], [0, 18], [8, 1], [4, 1], [2, 1], [0, 34], [0, 48], [2, 1], [0, 3], [0, 49], [6, 1], [2, 1], [0, 19], [2, 1], [0, 50], [0, 35], [4, 1], [2, 1], [0, 64], [0, 4], [0, 65], [70, 1], [28, 1], [14, 1], [6, 1], [2, 1], [0, 20], [2, 1], [0, 51], [0, 66], [4, 1], [2, 1], [0, 36], [0, 80], [2, 1], [0, 67], [0, 52], [4, 1], [2, 1], [0, 81], [0, 21], [4, 1], [2, 1], [0, 5], [0, 82], [2, 1], [0, 37], [2, 1], [0, 68], [0, 83], [14, 1], [8, 1], [4, 1], [2, 1], [0, 96], [0, 6], [2, 1], [0, 97], [0, 22], [4, 1], [2, 1], [0, 128], [0, 8], [0, 129], [16, 1], [8, 1], [4, 1], [2, 1], [0, 53], [0, 98], [2, 1], [0, 38], [0, 84], [4, 1], [2, 1], [0, 69], [0, 99], [2, 1], [0, 54], [0, 112], [6, 1], [4, 1], [2, 1], [0, 7], [0, 85], [0, 113], [2, 1], [0, 23], [2, 1], [0, 39], [0, 55], [72, 1], [24, 1], [12, 1], [4, 1], [2, 1], [0, 24], [0, 130], [2, 1], [0, 40], [4, 1], [2, 1], [0, 100], [0, 70], [0, 114], [8, 1], [4, 1], [2, 1], [0, 132], [0, 72], [2, 1], [0, 144], [0, 9], [2, 1], [0, 145], [0, 25], [24, 1], [14, 1], [8, 1], [4, 1], [2, 1], [0, 115], [0, 101], [2, 1], [0, 86], [0, 116], [4, 1], [2, 1], [0, 71], [0, 102], [0, 131], [6, 1], [2, 1], [0, 56], [2, 1], [0, 117], [0, 87], [2, 1], [0, 146], [0, 41], [14, 1], [8, 1], [4, 1], [2, 1], [0, 103], [0, 133], [2, 1], [0, 88], [0, 57], [2, 1], [0, 147], [2, 1], [0, 73], [0, 134], [6, 1], [2, 1], [0, 160], [2, 1], [0, 104], [0, 10], [2, 1], [0, 161], [0, 26], [68, 1], [24, 1], [12, 1], [4, 1], [2, 1], [0, 162], [0, 42], [4, 1], [2, 1], [0, 149], [0, 89], [2, 1], [0, 163], [0, 58], [8, 1], [4, 1], [2, 1], [0, 74], [0, 150], [2, 1], [0, 176], [0, 11], [2, 1], [0, 177], [0, 27], [20, 1], [8, 1], [2, 1], [0, 178], [4, 1], [2, 1], [0, 118], [0, 119], [0, 148], [6, 1], [4, 1], [2, 1], [0, 135], [0, 120], [0, 164], [4, 1], [2, 1], [0, 105], [0, 165], [0, 43], [12, 1], [6, 1], [4, 1], [2, 1], [0, 90], [0, 136], [0, 179], [2, 1], [0, 59], [2, 1], [0, 121], [0, 166], [6, 1], [4, 1], [2, 1], [0, 106], [0, 180], [0, 192], [4, 1], [2, 1], [0, 12], [0, 152], [0, 193], [60, 1], [22, 1], [10, 1], [6, 1], [2, 1], [0, 28], [2, 1], [0, 137], [0, 181], [2, 1], [0, 91], [0, 194], [4, 1], [2, 1], [0, 44], [0, 60], [4, 1], [2, 1], [0, 182], [0, 107], [2, 1], [0, 196], [0, 76], [16, 1], [8, 1], [4, 1], [2, 1], [0, 168], [0, 138], [2, 1], [0, 208], [0, 13], [2, 1], [0, 209], [2, 1], [0, 75], [2, 1], [0, 151], [0, 167], [12, 1], [6, 1], [2, 1], [0, 195], [2, 1], [0, 122], [0, 153], [4, 1], [2, 1], [0, 197], [0, 92], [0, 183], [4, 1], [2, 1], [0, 29], [0, 210], [2, 1], [0, 45], [2, 1], [0, 123], [0, 211], [52, 1], [28, 1], [12, 1], [4, 1], [2, 1], [0, 61], [0, 198], [4, 1], [2, 1], [0, 108], [0, 169], [2, 1], [0, 154], [0, 212], [8, 1], [4, 1], [2, 1], [0, 184], [0, 139], [2, 1], [0, 77], [0, 199], [4, 1], [2, 1], [0, 124], [0, 213], [2, 1], [0, 93], [0, 224], [10, 1], [4, 1], [2, 1], [0, 225], [0, 30], [4, 1], [2, 1], [0, 14], [0, 46], [0, 226], [8, 1], [4, 1], [2, 1], [0, 227], [0, 109], [2, 1], [0, 140], [0, 228], [4, 1], [2, 1], [0, 229], [0, 186], [0, 240], [38, 1], [16, 1], [4, 1], [2, 1], [0, 241], [0, 31], [6, 1], [4, 1], [2, 1], [0, 170], [0, 155], [0, 185], [2, 1], [0, 62], [2, 1], [0, 214], [0, 200], [12, 1], [6, 1], [2, 1], [0, 78], [2, 1], [0, 215], [0, 125], [2, 1], [0, 171], [2, 1], [0, 94], [0, 201], [6, 1], [2, 1], [0, 15], [2, 1], [0, 156], [0, 110], [2, 1], [0, 242], [0, 47], [32, 1], [16, 1], [6, 1], [4, 1], [2, 1], [0, 216], [0, 141], [0, 63], [6, 1], [2, 1], [0, 243], [2, 1], [0, 230], [0, 202], [2, 1], [0, 244], [0, 79], [8, 1], [4, 1], [2, 1], [0, 187], [0, 172], [2, 1], [0, 231], [0, 245], [4, 1], [2, 1], [0, 217], [0, 157], [2, 1], [0, 95], [0, 232], [30, 1], [12, 1], [6, 1], [2, 1], [0, 111], [2, 1], [0, 246], [0, 203], [4, 1], [2, 1], [0, 188], [0, 173], [0, 218], [8, 1], [2, 1], [0, 247], [4, 1], [2, 1], [0, 126], [0, 127], [0, 142], [6, 1], [4, 1], [2, 1], [0, 158], [0, 174], [0, 204], [2, 1], [0, 248], [0, 143], [18, 1], [8, 1], [4, 1], [2, 1], [0, 219], [0, 189], [2, 1], [0, 234], [0, 249], [4, 1], [2, 1], [0, 159], [0, 235], [2, 1], [0, 190], [2, 1], [0, 205], [0, 250], [14, 1], [4, 1], [2, 1], [0, 221], [0, 236], [6, 1], [4, 1], [2, 1], [0, 233], [0, 175], [0, 220], [2, 1], [0, 206], [0, 251], [8, 1], [4, 1], [2, 1], [0, 191], [0, 222], [2, 1], [0, 207], [0, 238], [4, 1], [2, 1], [0, 223], [0, 239], [2, 1], [0, 255], [2, 1], [0, 237], [2, 1], [0, 253], [2, 1], [0, 252], [0, 254]];\n\nvar ValTab14 = [[0, 0]]; // dummy\n\nvar ValTab15 = [[16, 1], [6, 1], [2, 1], [0, 0], [2, 1], [0, 16], [0, 1], [2, 1], [0, 17], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 33], [0, 18], [50, 1], [16, 1], [6, 1], [2, 1], [0, 34], [2, 1], [0, 48], [0, 49], [6, 1], [2, 1], [0, 19], [2, 1], [0, 3], [0, 64], [2, 1], [0, 50], [0, 35], [14, 1], [6, 1], [4, 1], [2, 1], [0, 4], [0, 20], [0, 65], [4, 1], [2, 1], [0, 51], [0, 66], [2, 1], [0, 36], [0, 67], [10, 1], [6, 1], [2, 1], [0, 52], [2, 1], [0, 80], [0, 5], [2, 1], [0, 81], [0, 21], [4, 1], [2, 1], [0, 82], [0, 37], [4, 1], [2, 1], [0, 68], [0, 83], [0, 97], [90, 1], [36, 1], [18, 1], [10, 1], [6, 1], [2, 1], [0, 53], [2, 1], [0, 96], [0, 6], [2, 1], [0, 22], [0, 98], [4, 1], [2, 1], [0, 38], [0, 84], [2, 1], [0, 69], [0, 99], [10, 1], [6, 1], [2, 1], [0, 54], [2, 1], [0, 112], [0, 7], [2, 1], [0, 113], [0, 85], [4, 1], [2, 1], [0, 23], [0, 100], [2, 1], [0, 114], [0, 39], [24, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 70], [0, 115], [2, 1], [0, 55], [0, 101], [4, 1], [2, 1], [0, 86], [0, 128], [2, 1], [0, 8], [0, 116], [4, 1], [2, 1], [0, 129], [0, 24], [2, 1], [0, 130], [0, 40], [16, 1], [8, 1], [4, 1], [2, 1], [0, 71], [0, 102], [2, 1], [0, 131], [0, 56], [4, 1], [2, 1], [0, 117], [0, 87], [2, 1], [0, 132], [0, 72], [6, 1], [4, 1], [2, 1], [0, 144], [0, 25], [0, 145], [4, 1], [2, 1], [0, 146], [0, 118], [2, 1], [0, 103], [0, 41], [92, 1], [36, 1], [18, 1], [10, 1], [4, 1], [2, 1], [0, 133], [0, 88], [4, 1], [2, 1], [0, 9], [0, 119], [0, 147], [4, 1], [2, 1], [0, 57], [0, 148], [2, 1], [0, 73], [0, 134], [10, 1], [6, 1], [2, 1], [0, 104], [2, 1], [0, 160], [0, 10], [2, 1], [0, 161], [0, 26], [4, 1], [2, 1], [0, 162], [0, 42], [2, 1], [0, 149], [0, 89], [26, 1], [14, 1], [6, 1], [2, 1], [0, 163], [2, 1], [0, 58], [0, 135], [4, 1], [2, 1], [0, 120], [0, 164], [2, 1], [0, 74], [0, 150], [6, 1], [4, 1], [2, 1], [0, 105], [0, 176], [0, 177], [4, 1], [2, 1], [0, 27], [0, 165], [0, 178], [14, 1], [8, 1], [4, 1], [2, 1], [0, 90], [0, 43], [2, 1], [0, 136], [0, 151], [2, 1], [0, 179], [2, 1], [0, 121], [0, 59], [8, 1], [4, 1], [2, 1], [0, 106], [0, 180], [2, 1], [0, 75], [0, 193], [4, 1], [2, 1], [0, 152], [0, 137], [2, 1], [0, 28], [0, 181], [80, 1], [34, 1], [16, 1], [6, 1], [4, 1], [2, 1], [0, 91], [0, 44], [0, 194], [6, 1], [4, 1], [2, 1], [0, 11], [0, 192], [0, 166], [2, 1], [0, 167], [0, 122], [10, 1], [4, 1], [2, 1], [0, 195], [0, 60], [4, 1], [2, 1], [0, 12], [0, 153], [0, 182], [4, 1], [2, 1], [0, 107], [0, 196], [2, 1], [0, 76], [0, 168], [20, 1], [10, 1], [4, 1], [2, 1], [0, 138], [0, 197], [4, 1], [2, 1], [0, 208], [0, 92], [0, 209], [4, 1], [2, 1], [0, 183], [0, 123], [2, 1], [0, 29], [2, 1], [0, 13], [0, 45], [12, 1], [4, 1], [2, 1], [0, 210], [0, 211], [4, 1], [2, 1], [0, 61], [0, 198], [2, 1], [0, 108], [0, 169], [6, 1], [4, 1], [2, 1], [0, 154], [0, 184], [0, 212], [4, 1], [2, 1], [0, 139], [0, 77], [2, 1], [0, 199], [0, 124], [68, 1], [34, 1], [18, 1], [10, 1], [4, 1], [2, 1], [0, 213], [0, 93], [4, 1], [2, 1], [0, 224], [0, 14], [0, 225], [4, 1], [2, 1], [0, 30], [0, 226], [2, 1], [0, 170], [0, 46], [8, 1], [4, 1], [2, 1], [0, 185], [0, 155], [2, 1], [0, 227], [0, 214], [4, 1], [2, 1], [0, 109], [0, 62], [2, 1], [0, 200], [0, 140], [16, 1], [8, 1], [4, 1], [2, 1], [0, 228], [0, 78], [2, 1], [0, 215], [0, 125], [4, 1], [2, 1], [0, 229], [0, 186], [2, 1], [0, 171], [0, 94], [8, 1], [4, 1], [2, 1], [0, 201], [0, 156], [2, 1], [0, 241], [0, 31], [6, 1], [4, 1], [2, 1], [0, 240], [0, 110], [0, 242], [2, 1], [0, 47], [0, 230], [38, 1], [18, 1], [8, 1], [4, 1], [2, 1], [0, 216], [0, 243], [2, 1], [0, 63], [0, 244], [6, 1], [2, 1], [0, 79], [2, 1], [0, 141], [0, 217], [2, 1], [0, 187], [0, 202], [8, 1], [4, 1], [2, 1], [0, 172], [0, 231], [2, 1], [0, 126], [0, 245], [8, 1], [4, 1], [2, 1], [0, 157], [0, 95], [2, 1], [0, 232], [0, 142], [2, 1], [0, 246], [0, 203], [34, 1], [18, 1], [10, 1], [6, 1], [4, 1], [2, 1], [0, 15], [0, 174], [0, 111], [2, 1], [0, 188], [0, 218], [4, 1], [2, 1], [0, 173], [0, 247], [2, 1], [0, 127], [0, 233], [8, 1], [4, 1], [2, 1], [0, 158], [0, 204], [2, 1], [0, 248], [0, 143], [4, 1], [2, 1], [0, 219], [0, 189], [2, 1], [0, 234], [0, 249], [16, 1], [8, 1], [4, 1], [2, 1], [0, 159], [0, 220], [2, 1], [0, 205], [0, 235], [4, 1], [2, 1], [0, 190], [0, 250], [2, 1], [0, 175], [0, 221], [14, 1], [6, 1], [4, 1], [2, 1], [0, 236], [0, 206], [0, 251], [4, 1], [2, 1], [0, 191], [0, 237], [2, 1], [0, 222], [0, 252], [6, 1], [4, 1], [2, 1], [0, 207], [0, 253], [0, 238], [4, 1], [2, 1], [0, 223], [0, 254], [2, 1], [0, 239], [0, 255]];\n\nvar ValTab16 = [[2, 1], [0, 0], [6, 1], [2, 1], [0, 16], [2, 1], [0, 1], [0, 17], [42, 1], [8, 1], [4, 1], [2, 1], [0, 32], [0, 2], [2, 1], [0, 33], [0, 18], [10, 1], [6, 1], [2, 1], [0, 34], [2, 1], [0, 48], [0, 3], [2, 1], [0, 49], [0, 19], [10, 1], [4, 1], [2, 1], [0, 50], [0, 35], [4, 1], [2, 1], [0, 64], [0, 4], [0, 65], [6, 1], [2, 1], [0, 20], [2, 1], [0, 51], [0, 66], [4, 1], [2, 1], [0, 36], [0, 80], [2, 1], [0, 67], [0, 52], [138, 1], [40, 1], [16, 1], [6, 1], [4, 1], [2, 1], [0, 5], [0, 21], [0, 81], [4, 1], [2, 1], [0, 82], [0, 37], [4, 1], [2, 1], [0, 68], [0, 53], [0, 83], [10, 1], [6, 1], [4, 1], [2, 1], [0, 96], [0, 6], [0, 97], [2, 1], [0, 22], [0, 98], [8, 1], [4, 1], [2, 1], [0, 38], [0, 84], [2, 1], [0, 69], [0, 99], [4, 1], [2, 1], [0, 54], [0, 112], [0, 113], [40, 1], [18, 1], [8, 1], [2, 1], [0, 23], [2, 1], [0, 7], [2, 1], [0, 85], [0, 100], [4, 1], [2, 1], [0, 114], [0, 39], [4, 1], [2, 1], [0, 70], [0, 101], [0, 115], [10, 1], [6, 1], [2, 1], [0, 55], [2, 1], [0, 86], [0, 8], [2, 1], [0, 128], [0, 129], [6, 1], [2, 1], [0, 24], [2, 1], [0, 116], [0, 71], [2, 1], [0, 130], [2, 1], [0, 40], [0, 102], [24, 1], [14, 1], [8, 1], [4, 1], [2, 1], [0, 131], [0, 56], [2, 1], [0, 117], [0, 132], [4, 1], [2, 1], [0, 72], [0, 144], [0, 145], [6, 1], [2, 1], [0, 25], [2, 1], [0, 9], [0, 118], [2, 1], [0, 146], [0, 41], [14, 1], [8, 1], [4, 1], [2, 1], [0, 133], [0, 88], [2, 1], [0, 147], [0, 57], [4, 1], [2, 1], [0, 160], [0, 10], [0, 26], [8, 1], [2, 1], [0, 162], [2, 1], [0, 103], [2, 1], [0, 87], [0, 73], [6, 1], [2, 1], [0, 148], [2, 1], [0, 119], [0, 134], [2, 1], [0, 161], [2, 1], [0, 104], [0, 149], [220, 1], [126, 1], [50, 1], [26, 1], [12, 1], [6, 1], [2, 1], [0, 42], [2, 1], [0, 89], [0, 58], [2, 1], [0, 163], [2, 1], [0, 135], [0, 120], [8, 1], [4, 1], [2, 1], [0, 164], [0, 74], [2, 1], [0, 150], [0, 105], [4, 1], [2, 1], [0, 176], [0, 11], [0, 177], [10, 1], [4, 1], [2, 1], [0, 27], [0, 178], [2, 1], [0, 43], [2, 1], [0, 165], [0, 90], [6, 1], [2, 1], [0, 179], [2, 1], [0, 166], [0, 106], [4, 1], [2, 1], [0, 180], [0, 75], [2, 1], [0, 12], [0, 193], [30, 1], [14, 1], [6, 1], [4, 1], [2, 1], [0, 181], [0, 194], [0, 44], [4, 1], [2, 1], [0, 167], [0, 195], [2, 1], [0, 107], [0, 196], [8, 1], [2, 1], [0, 29], [4, 1], [2, 1], [0, 136], [0, 151], [0, 59], [4, 1], [2, 1], [0, 209], [0, 210], [2, 1], [0, 45], [0, 211], [18, 1], [6, 1], [4, 1], [2, 1], [0, 30], [0, 46], [0, 226], [6, 1], [4, 1], [2, 1], [0, 121], [0, 152], [0, 192], [2, 1], [0, 28], [2, 1], [0, 137], [0, 91], [14, 1], [6, 1], [2, 1], [0, 60], [2, 1], [0, 122], [0, 182], [4, 1], [2, 1], [0, 76], [0, 153], [2, 1], [0, 168], [0, 138], [6, 1], [2, 1], [0, 13], [2, 1], [0, 197], [0, 92], [4, 1], [2, 1], [0, 61], [0, 198], [2, 1], [0, 108], [0, 154], [88, 1], [86, 1], [36, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 139], [0, 77], [2, 1], [0, 199], [0, 124], [4, 1], [2, 1], [0, 213], [0, 93], [2, 1], [0, 224], [0, 14], [8, 1], [2, 1], [0, 227], [4, 1], [2, 1], [0, 208], [0, 183], [0, 123], [6, 1], [4, 1], [2, 1], [0, 169], [0, 184], [0, 212], [2, 1], [0, 225], [2, 1], [0, 170], [0, 185], [24, 1], [10, 1], [6, 1], [4, 1], [2, 1], [0, 155], [0, 214], [0, 109], [2, 1], [0, 62], [0, 200], [6, 1], [4, 1], [2, 1], [0, 140], [0, 228], [0, 78], [4, 1], [2, 1], [0, 215], [0, 229], [2, 1], [0, 186], [0, 171], [12, 1], [4, 1], [2, 1], [0, 156], [0, 230], [4, 1], [2, 1], [0, 110], [0, 216], [2, 1], [0, 141], [0, 187], [8, 1], [4, 1], [2, 1], [0, 231], [0, 157], [2, 1], [0, 232], [0, 142], [4, 1], [2, 1], [0, 203], [0, 188], [0, 158], [0, 241], [2, 1], [0, 31], [2, 1], [0, 15], [0, 47], [66, 1], [56, 1], [2, 1], [0, 242], [52, 1], [50, 1], [20, 1], [8, 1], [2, 1], [0, 189], [2, 1], [0, 94], [2, 1], [0, 125], [0, 201], [6, 1], [2, 1], [0, 202], [2, 1], [0, 172], [0, 126], [4, 1], [2, 1], [0, 218], [0, 173], [0, 204], [10, 1], [6, 1], [2, 1], [0, 174], [2, 1], [0, 219], [0, 220], [2, 1], [0, 205], [0, 190], [6, 1], [4, 1], [2, 1], [0, 235], [0, 237], [0, 238], [6, 1], [4, 1], [2, 1], [0, 217], [0, 234], [0, 233], [2, 1], [0, 222], [4, 1], [2, 1], [0, 221], [0, 236], [0, 206], [0, 63], [0, 240], [4, 1], [2, 1], [0, 243], [0, 244], [2, 1], [0, 79], [2, 1], [0, 245], [0, 95], [10, 1], [2, 1], [0, 255], [4, 1], [2, 1], [0, 246], [0, 111], [2, 1], [0, 247], [0, 127], [12, 1], [6, 1], [2, 1], [0, 143], [2, 1], [0, 248], [0, 249], [4, 1], [2, 1], [0, 159], [0, 250], [0, 175], [8, 1], [4, 1], [2, 1], [0, 251], [0, 191], [2, 1], [0, 252], [0, 207], [4, 1], [2, 1], [0, 253], [0, 223], [2, 1], [0, 254], [0, 239]];\n\nvar ValTab24 = [[60, 1], [8, 1], [4, 1], [2, 1], [0, 0], [0, 16], [2, 1], [0, 1], [0, 17], [14, 1], [6, 1], [4, 1], [2, 1], [0, 32], [0, 2], [0, 33], [2, 1], [0, 18], [2, 1], [0, 34], [2, 1], [0, 48], [0, 3], [14, 1], [4, 1], [2, 1], [0, 49], [0, 19], [4, 1], [2, 1], [0, 50], [0, 35], [4, 1], [2, 1], [0, 64], [0, 4], [0, 65], [8, 1], [4, 1], [2, 1], [0, 20], [0, 51], [2, 1], [0, 66], [0, 36], [6, 1], [4, 1], [2, 1], [0, 67], [0, 52], [0, 81], [6, 1], [4, 1], [2, 1], [0, 80], [0, 5], [0, 21], [2, 1], [0, 82], [0, 37], [250, 1], [98, 1], [34, 1], [18, 1], [10, 1], [4, 1], [2, 1], [0, 68], [0, 83], [2, 1], [0, 53], [2, 1], [0, 96], [0, 6], [4, 1], [2, 1], [0, 97], [0, 22], [2, 1], [0, 98], [0, 38], [8, 1], [4, 1], [2, 1], [0, 84], [0, 69], [2, 1], [0, 99], [0, 54], [4, 1], [2, 1], [0, 113], [0, 85], [2, 1], [0, 100], [0, 70], [32, 1], [14, 1], [6, 1], [2, 1], [0, 114], [2, 1], [0, 39], [0, 55], [2, 1], [0, 115], [4, 1], [2, 1], [0, 112], [0, 7], [0, 23], [10, 1], [4, 1], [2, 1], [0, 101], [0, 86], [4, 1], [2, 1], [0, 128], [0, 8], [0, 129], [4, 1], [2, 1], [0, 116], [0, 71], [2, 1], [0, 24], [0, 130], [16, 1], [8, 1], [4, 1], [2, 1], [0, 40], [0, 102], [2, 1], [0, 131], [0, 56], [4, 1], [2, 1], [0, 117], [0, 87], [2, 1], [0, 132], [0, 72], [8, 1], [4, 1], [2, 1], [0, 145], [0, 25], [2, 1], [0, 146], [0, 118], [4, 1], [2, 1], [0, 103], [0, 41], [2, 1], [0, 133], [0, 88], [92, 1], [34, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 147], [0, 57], [2, 1], [0, 148], [0, 73], [4, 1], [2, 1], [0, 119], [0, 134], [2, 1], [0, 104], [0, 161], [8, 1], [4, 1], [2, 1], [0, 162], [0, 42], [2, 1], [0, 149], [0, 89], [4, 1], [2, 1], [0, 163], [0, 58], [2, 1], [0, 135], [2, 1], [0, 120], [0, 74], [22, 1], [12, 1], [4, 1], [2, 1], [0, 164], [0, 150], [4, 1], [2, 1], [0, 105], [0, 177], [2, 1], [0, 27], [0, 165], [6, 1], [2, 1], [0, 178], [2, 1], [0, 90], [0, 43], [2, 1], [0, 136], [0, 179], [16, 1], [10, 1], [6, 1], [2, 1], [0, 144], [2, 1], [0, 9], [0, 160], [2, 1], [0, 151], [0, 121], [4, 1], [2, 1], [0, 166], [0, 106], [0, 180], [12, 1], [6, 1], [2, 1], [0, 26], [2, 1], [0, 10], [0, 176], [2, 1], [0, 59], [2, 1], [0, 11], [0, 192], [4, 1], [2, 1], [0, 75], [0, 193], [2, 1], [0, 152], [0, 137], [67, 1], [34, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 28], [0, 181], [2, 1], [0, 91], [0, 194], [4, 1], [2, 1], [0, 44], [0, 167], [2, 1], [0, 122], [0, 195], [10, 1], [6, 1], [2, 1], [0, 60], [2, 1], [0, 12], [0, 208], [2, 1], [0, 182], [0, 107], [4, 1], [2, 1], [0, 196], [0, 76], [2, 1], [0, 153], [0, 168], [16, 1], [8, 1], [4, 1], [2, 1], [0, 138], [0, 197], [2, 1], [0, 92], [0, 209], [4, 1], [2, 1], [0, 183], [0, 123], [2, 1], [0, 29], [0, 210], [9, 1], [4, 1], [2, 1], [0, 45], [0, 211], [2, 1], [0, 61], [0, 198], [85, 250], [4, 1], [2, 1], [0, 108], [0, 169], [2, 1], [0, 154], [0, 212], [32, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 184], [0, 139], [2, 1], [0, 77], [0, 199], [4, 1], [2, 1], [0, 124], [0, 213], [2, 1], [0, 93], [0, 225], [8, 1], [4, 1], [2, 1], [0, 30], [0, 226], [2, 1], [0, 170], [0, 185], [4, 1], [2, 1], [0, 155], [0, 227], [2, 1], [0, 214], [0, 109], [20, 1], [10, 1], [6, 1], [2, 1], [0, 62], [2, 1], [0, 46], [0, 78], [2, 1], [0, 200], [0, 140], [4, 1], [2, 1], [0, 228], [0, 215], [4, 1], [2, 1], [0, 125], [0, 171], [0, 229], [10, 1], [4, 1], [2, 1], [0, 186], [0, 94], [2, 1], [0, 201], [2, 1], [0, 156], [0, 110], [8, 1], [2, 1], [0, 230], [2, 1], [0, 13], [2, 1], [0, 224], [0, 14], [4, 1], [2, 1], [0, 216], [0, 141], [2, 1], [0, 187], [0, 202], [74, 1], [2, 1], [0, 255], [64, 1], [58, 1], [32, 1], [16, 1], [8, 1], [4, 1], [2, 1], [0, 172], [0, 231], [2, 1], [0, 126], [0, 217], [4, 1], [2, 1], [0, 157], [0, 232], [2, 1], [0, 142], [0, 203], [8, 1], [4, 1], [2, 1], [0, 188], [0, 218], [2, 1], [0, 173], [0, 233], [4, 1], [2, 1], [0, 158], [0, 204], [2, 1], [0, 219], [0, 189], [16, 1], [8, 1], [4, 1], [2, 1], [0, 234], [0, 174], [2, 1], [0, 220], [0, 205], [4, 1], [2, 1], [0, 235], [0, 190], [2, 1], [0, 221], [0, 236], [8, 1], [4, 1], [2, 1], [0, 206], [0, 237], [2, 1], [0, 222], [0, 238], [0, 15], [4, 1], [2, 1], [0, 240], [0, 31], [0, 241], [4, 1], [2, 1], [0, 242], [0, 47], [2, 1], [0, 243], [0, 63], [18, 1], [8, 1], [4, 1], [2, 1], [0, 244], [0, 79], [2, 1], [0, 245], [0, 95], [4, 1], [2, 1], [0, 246], [0, 111], [2, 1], [0, 247], [2, 1], [0, 127], [0, 143], [10, 1], [4, 1], [2, 1], [0, 248], [0, 249], [4, 1], [2, 1], [0, 159], [0, 175], [0, 250], [8, 1], [4, 1], [2, 1], [0, 251], [0, 191], [2, 1], [0, 252], [0, 207], [4, 1], [2, 1], [0, 253], [0, 223], [2, 1], [0, 254], [0, 239]];\n\nvar ValTab32 = [[2, 1], [0, 0], [8, 1], [4, 1], [2, 1], [0, 8], [0, 4], [2, 1], [0, 1], [0, 2], [8, 1], [4, 1], [2, 1], [0, 12], [0, 10], [2, 1], [0, 3], [0, 6], [6, 1], [2, 1], [0, 9], [2, 1], [0, 5], [0, 7], [4, 1], [2, 1], [0, 14], [0, 13], [2, 1], [0, 15], [0, 11]];\n\nvar ValTab33 = [[16, 1], [8, 1], [4, 1], [2, 1], [0, 0], [0, 1], [2, 1], [0, 2], [0, 3], [4, 1], [2, 1], [0, 4], [0, 5], [2, 1], [0, 6], [0, 7], [8, 1], [4, 1], [2, 1], [0, 8], [0, 9], [2, 1], [0, 10], [0, 11], [4, 1], [2, 1], [0, 12], [0, 13], [2, 1], [0, 14], [0, 15]];\n\nmodule.exports = Huffman;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Size of the internal buffer to store the reserved bits.\n * Must be a power of 2. And x8, as each bit is stored as a single\n * entry.\n */\nvar BUFSIZE = 4096 * 8;\n\n/**\n * Mask that can be used to quickly implement the\n * modulus operation on BUFSIZE.\n */\nvar BUFSIZE_MASK = BUFSIZE - 1;\n\nmodule.exports = function () {\n    function BitReserve() {\n        (0, _classCallCheck3.default)(this, BitReserve);\n\n        this.offset = this.totbit = this.buf_byte_idx = 0;\n        // private final int[] \t\t\tbuf = new int[BUFSIZE];\n        this.buf = new Int32Array(BUFSIZE).fill(0);\n    }\n\n    (0, _createClass3.default)(BitReserve, [{\n        key: \"hputbuf\",\n        value: function hputbuf(val) {\n            var ofs = this.offset;\n\n            this.buf[ofs++] = val & 0x80;\n            this.buf[ofs++] = val & 0x40;\n            this.buf[ofs++] = val & 0x20;\n            this.buf[ofs++] = val & 0x10;\n            this.buf[ofs++] = val & 0x08;\n            this.buf[ofs++] = val & 0x04;\n            this.buf[ofs++] = val & 0x02;\n            this.buf[ofs++] = val & 0x01;\n\n            if (ofs === BUFSIZE) this.offset = 0;else this.offset = ofs;\n        }\n    }, {\n        key: \"hsstell\",\n        value: function hsstell() {\n            return this.totbit;\n        }\n    }, {\n        key: \"hgetbits\",\n        value: function hgetbits(N) {\n            this.totbit += N;\n\n            var val = 0;\n            var pos = this.buf_byte_idx;\n\n            if (pos + N < BUFSIZE) {\n                while (N-- > 0) {\n                    val <<= 1;\n                    val |= this.buf[pos++] !== 0 ? 1 : 0;\n                }\n            } else {\n                while (N-- > 0) {\n                    val <<= 1;\n                    val |= this.buf[pos] !== 0 ? 1 : 0;\n                    pos = pos + 1 & BUFSIZE_MASK;\n                }\n            }\n\n            this.buf_byte_idx = pos;\n            return val;\n        }\n    }, {\n        key: \"rewindNbytes\",\n        value: function rewindNbytes(N) {\n            var bits = N << 3;\n\n            this.totbit -= bits;\n            this.buf_byte_idx -= bits;\n\n            if (this.buf_byte_idx < 0) this.buf_byte_idx += BUFSIZE;\n        }\n    }, {\n        key: \"hget1bit\",\n        value: function hget1bit() {\n            this.totbit++;\n            var val = this.buf[this.buf_byte_idx];\n            this.buf_byte_idx = this.buf_byte_idx + 1 & BUFSIZE_MASK;\n            return val;\n        }\n    }, {\n        key: \"rewindNbits\",\n        value: function rewindNbits(N) {\n            this.totbit -= N;\n            this.buf_byte_idx -= N;\n            if (this.buf_byte_idx < 0) this.buf_byte_idx += BUFSIZE;\n        }\n    }]);\n    return BitReserve;\n}();\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Short = {\n    MAX_VALUE: Math.pow(2, 15) - 1,\n    MIN_VALUE: -Math.pow(2, 15)\n};\n\nvar SampleBuffer = function () {\n    function SampleBuffer(frequency, channels) {\n        (0, _classCallCheck3.default)(this, SampleBuffer);\n\n        this.buffer = [];\n        this.bufferp = [];\n\n        this.channels = channels;\n        this.frequency = frequency;\n\n        for (var i = 0; i < channels; ++i) {\n            this.bufferp[i] = i;\n        }\n    }\n\n    (0, _createClass3.default)(SampleBuffer, [{\n        key: \"appendSamples\",\n        value: function appendSamples(channel, f) {\n            var pos = this.bufferp[channel],\n                fs = void 0;\n\n            for (var i = 0; i < 32;) {\n                fs = f[i++];\n                fs = fs > Short.MAX_VALUE ? Short.MAX_VALUE : fs < Short.MIN_VALUE ? Short.MIN_VALUE : fs;\n                this.buffer[pos] = fs ^ 0;\n                pos += this.channels;\n            }\n\n            this.bufferp[channel] = pos;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            for (var i = 0; i < this.channels; ++i) {\n                this.bufferp[i] = i;\n            }\n        }\n    }, {\n        key: \"asBuffer\",\n        value: function asBuffer() {\n            var outBuf = new Buffer(this.buffer.length * 2);\n\n            var outPos = 0;\n            for (var i = 0; i < this.buffer.length; i++) {\n                var s = Math.max(Math.min(Math.round(this.buffer[i]), Short.MAX_VALUE), Short.MIN_VALUE);\n                outBuf.writeInt16LE(s, outPos);\n                outPos += 2;\n            }\n\n            return outBuf;\n        }\n    }]);\n    return SampleBuffer;\n}();\n\nvar SynthesisFilter = function () {\n    function SynthesisFilter(channelnumber, factor) {\n        var eq0 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        (0, _classCallCheck3.default)(this, SynthesisFilter);\n\n        // private float[] _tmpOut = new float[32];\n        this._tmpOut = new Float32Array(32);\n\n        this.actual_v = null;\n        this.actual_write_pos = 0;\n\n        // private float[] v1 = new float[512];\n        this.v1 = new Float32Array(512).fill(0);\n        // private float[] v2 = new float[512];\n        this.v2 = new Float32Array(512).fill(0);\n\n        // private float[] samples = new float[32]\n        this.samples = new Float32Array(32).fill(0);\n\n        this.channel = channelnumber;\n        this.scalefactor = factor;\n\n        this.setEQ(eq0);\n        this.reset();\n    }\n\n    (0, _createClass3.default)(SynthesisFilter, [{\n        key: \"setEQ\",\n        value: function setEQ(eq) {\n            this.eq = eq || new Float32Array(32).fill(1);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.v1.fill(0);\n            this.v2.fill(0);\n            this.samples.fill(0);\n\n            this.actual_v = this.v1;\n            this.actual_write_pos = 15;\n        }\n    }, {\n        key: \"input_samples\",\n        value: function input_samples(s) {\n            for (var i = 31; i >= 0; i--) {\n                this.samples[i] = s[i] * this.eq[i];\n            }\n        }\n    }, {\n        key: \"calculate_pcm_samples\",\n        value: function calculate_pcm_samples(buffer) {\n            this.compute_new_v();\n            this.compute_pcm_samples(buffer);\n\n            this.actual_write_pos = this.actual_write_pos + 1 & 0xf;\n            this.actual_v = this.actual_v === this.v1 ? this.v2 : this.v1;\n\n            for (var p = 0; p < 32; p++) {\n                this.samples[p] = 0.0;\n            }\n        }\n    }, {\n        key: \"compute_new_v\",\n        value: function compute_new_v() {\n            var new_v0 = void 0,\n                new_v1 = void 0,\n                new_v2 = void 0,\n                new_v3 = void 0,\n                new_v4 = void 0,\n                new_v5 = void 0,\n                new_v6 = void 0,\n                new_v7 = void 0,\n                new_v8 = void 0,\n                new_v9 = void 0;\n            var new_v10 = void 0,\n                new_v11 = void 0,\n                new_v12 = void 0,\n                new_v13 = void 0,\n                new_v14 = void 0,\n                new_v15 = void 0,\n                new_v16 = void 0,\n                new_v17 = void 0,\n                new_v18 = void 0,\n                new_v19 = void 0;\n            var new_v20 = void 0,\n                new_v21 = void 0,\n                new_v22 = void 0,\n                new_v23 = void 0,\n                new_v24 = void 0,\n                new_v25 = void 0,\n                new_v26 = void 0,\n                new_v27 = void 0,\n                new_v28 = void 0,\n                new_v29 = void 0;\n            var new_v30 = void 0,\n                new_v31 = void 0;\n\n            new_v0 = new_v1 = new_v2 = new_v3 = new_v4 = new_v5 = new_v6 = new_v7 = new_v8 = new_v9 = new_v10 = new_v11 = new_v12 = new_v13 = new_v14 = new_v15 = new_v16 = new_v17 = new_v18 = new_v19 = new_v20 = new_v21 = new_v22 = new_v23 = new_v24 = new_v25 = new_v26 = new_v27 = new_v28 = new_v29 = new_v30 = new_v31 = 0.0;\n\n            var s = this.samples;\n\n            var s0 = s[0];\n            var s1 = s[1];\n            var s2 = s[2];\n            var s3 = s[3];\n            var s4 = s[4];\n            var s5 = s[5];\n            var s6 = s[6];\n            var s7 = s[7];\n            var s8 = s[8];\n            var s9 = s[9];\n            var s10 = s[10];\n            var s11 = s[11];\n            var s12 = s[12];\n            var s13 = s[13];\n            var s14 = s[14];\n            var s15 = s[15];\n            var s16 = s[16];\n            var s17 = s[17];\n            var s18 = s[18];\n            var s19 = s[19];\n            var s20 = s[20];\n            var s21 = s[21];\n            var s22 = s[22];\n            var s23 = s[23];\n            var s24 = s[24];\n            var s25 = s[25];\n            var s26 = s[26];\n            var s27 = s[27];\n            var s28 = s[28];\n            var s29 = s[29];\n            var s30 = s[30];\n            var s31 = s[31];\n\n            var p0 = s0 + s31;\n            var p1 = s1 + s30;\n            var p2 = s2 + s29;\n            var p3 = s3 + s28;\n            var p4 = s4 + s27;\n            var p5 = s5 + s26;\n            var p6 = s6 + s25;\n            var p7 = s7 + s24;\n            var p8 = s8 + s23;\n            var p9 = s9 + s22;\n            var p10 = s10 + s21;\n            var p11 = s11 + s20;\n            var p12 = s12 + s19;\n            var p13 = s13 + s18;\n            var p14 = s14 + s17;\n            var p15 = s15 + s16;\n\n            var pp0 = p0 + p15;\n            var pp1 = p1 + p14;\n            var pp2 = p2 + p13;\n            var pp3 = p3 + p12;\n            var pp4 = p4 + p11;\n            var pp5 = p5 + p10;\n            var pp6 = p6 + p9;\n            var pp7 = p7 + p8;\n            var pp8 = (p0 - p15) * cos1_32;\n            var pp9 = (p1 - p14) * cos3_32;\n            var pp10 = (p2 - p13) * cos5_32;\n            var pp11 = (p3 - p12) * cos7_32;\n            var pp12 = (p4 - p11) * cos9_32;\n            var pp13 = (p5 - p10) * cos11_32;\n            var pp14 = (p6 - p9) * cos13_32;\n            var pp15 = (p7 - p8) * cos15_32;\n\n            p0 = pp0 + pp7;\n            p1 = pp1 + pp6;\n            p2 = pp2 + pp5;\n            p3 = pp3 + pp4;\n            p4 = (pp0 - pp7) * cos1_16;\n            p5 = (pp1 - pp6) * cos3_16;\n            p6 = (pp2 - pp5) * cos5_16;\n            p7 = (pp3 - pp4) * cos7_16;\n            p8 = pp8 + pp15;\n            p9 = pp9 + pp14;\n            p10 = pp10 + pp13;\n            p11 = pp11 + pp12;\n            p12 = (pp8 - pp15) * cos1_16;\n            p13 = (pp9 - pp14) * cos3_16;\n            p14 = (pp10 - pp13) * cos5_16;\n            p15 = (pp11 - pp12) * cos7_16;\n\n            pp0 = p0 + p3;\n            pp1 = p1 + p2;\n            pp2 = (p0 - p3) * cos1_8;\n            pp3 = (p1 - p2) * cos3_8;\n            pp4 = p4 + p7;\n            pp5 = p5 + p6;\n            pp6 = (p4 - p7) * cos1_8;\n            pp7 = (p5 - p6) * cos3_8;\n            pp8 = p8 + p11;\n            pp9 = p9 + p10;\n            pp10 = (p8 - p11) * cos1_8;\n            pp11 = (p9 - p10) * cos3_8;\n            pp12 = p12 + p15;\n            pp13 = p13 + p14;\n            pp14 = (p12 - p15) * cos1_8;\n            pp15 = (p13 - p14) * cos3_8;\n\n            p0 = pp0 + pp1;\n            p1 = (pp0 - pp1) * cos1_4;\n            p2 = pp2 + pp3;\n            p3 = (pp2 - pp3) * cos1_4;\n            p4 = pp4 + pp5;\n            p5 = (pp4 - pp5) * cos1_4;\n            p6 = pp6 + pp7;\n            p7 = (pp6 - pp7) * cos1_4;\n            p8 = pp8 + pp9;\n            p9 = (pp8 - pp9) * cos1_4;\n            p10 = pp10 + pp11;\n            p11 = (pp10 - pp11) * cos1_4;\n            p12 = pp12 + pp13;\n            p13 = (pp12 - pp13) * cos1_4;\n            p14 = pp14 + pp15;\n            p15 = (pp14 - pp15) * cos1_4;\n\n            // this is pretty insane coding\n            var tmp1 = void 0;\n            new_v19 /*36-17*/ = -(new_v4 = (new_v12 = p7) + p5) - p6;\n            new_v27 /*44-17*/ = -p6 - p7 - p4;\n            new_v6 = (new_v10 = (new_v14 = p15) + p11) + p13;\n            new_v17 /*34-17*/ = -(new_v2 = p15 + p13 + p9) - p14;\n            new_v21 /*38-17*/ = (tmp1 = -p14 - p15 - p10 - p11) - p13;\n            new_v29 /*46-17*/ = -p14 - p15 - p12 - p8;\n            new_v25 /*42-17*/ = tmp1 - p12;\n            new_v31 /*48-17*/ = -p0;\n            new_v0 = p1;\n            new_v23 /*40-17*/ = -(new_v8 = p3) - p2;\n\n            p0 = (s0 - s31) * cos1_64;\n            p1 = (s1 - s30) * cos3_64;\n            p2 = (s2 - s29) * cos5_64;\n            p3 = (s3 - s28) * cos7_64;\n            p4 = (s4 - s27) * cos9_64;\n            p5 = (s5 - s26) * cos11_64;\n            p6 = (s6 - s25) * cos13_64;\n            p7 = (s7 - s24) * cos15_64;\n            p8 = (s8 - s23) * cos17_64;\n            p9 = (s9 - s22) * cos19_64;\n            p10 = (s10 - s21) * cos21_64;\n            p11 = (s11 - s20) * cos23_64;\n            p12 = (s12 - s19) * cos25_64;\n            p13 = (s13 - s18) * cos27_64;\n            p14 = (s14 - s17) * cos29_64;\n            p15 = (s15 - s16) * cos31_64;\n\n            pp0 = p0 + p15;\n            pp1 = p1 + p14;\n            pp2 = p2 + p13;\n            pp3 = p3 + p12;\n            pp4 = p4 + p11;\n            pp5 = p5 + p10;\n            pp6 = p6 + p9;\n            pp7 = p7 + p8;\n            pp8 = (p0 - p15) * cos1_32;\n            pp9 = (p1 - p14) * cos3_32;\n            pp10 = (p2 - p13) * cos5_32;\n            pp11 = (p3 - p12) * cos7_32;\n            pp12 = (p4 - p11) * cos9_32;\n            pp13 = (p5 - p10) * cos11_32;\n            pp14 = (p6 - p9) * cos13_32;\n            pp15 = (p7 - p8) * cos15_32;\n\n            p0 = pp0 + pp7;\n            p1 = pp1 + pp6;\n            p2 = pp2 + pp5;\n            p3 = pp3 + pp4;\n            p4 = (pp0 - pp7) * cos1_16;\n            p5 = (pp1 - pp6) * cos3_16;\n            p6 = (pp2 - pp5) * cos5_16;\n            p7 = (pp3 - pp4) * cos7_16;\n            p8 = pp8 + pp15;\n            p9 = pp9 + pp14;\n            p10 = pp10 + pp13;\n            p11 = pp11 + pp12;\n            p12 = (pp8 - pp15) * cos1_16;\n            p13 = (pp9 - pp14) * cos3_16;\n            p14 = (pp10 - pp13) * cos5_16;\n            p15 = (pp11 - pp12) * cos7_16;\n\n            pp0 = p0 + p3;\n            pp1 = p1 + p2;\n            pp2 = (p0 - p3) * cos1_8;\n            pp3 = (p1 - p2) * cos3_8;\n            pp4 = p4 + p7;\n            pp5 = p5 + p6;\n            pp6 = (p4 - p7) * cos1_8;\n            pp7 = (p5 - p6) * cos3_8;\n            pp8 = p8 + p11;\n            pp9 = p9 + p10;\n            pp10 = (p8 - p11) * cos1_8;\n            pp11 = (p9 - p10) * cos3_8;\n            pp12 = p12 + p15;\n            pp13 = p13 + p14;\n            pp14 = (p12 - p15) * cos1_8;\n            pp15 = (p13 - p14) * cos3_8;\n\n            p0 = pp0 + pp1;\n            p1 = (pp0 - pp1) * cos1_4;\n            p2 = pp2 + pp3;\n            p3 = (pp2 - pp3) * cos1_4;\n            p4 = pp4 + pp5;\n            p5 = (pp4 - pp5) * cos1_4;\n            p6 = pp6 + pp7;\n            p7 = (pp6 - pp7) * cos1_4;\n            p8 = pp8 + pp9;\n            p9 = (pp8 - pp9) * cos1_4;\n            p10 = pp10 + pp11;\n            p11 = (pp10 - pp11) * cos1_4;\n            p12 = pp12 + pp13;\n            p13 = (pp12 - pp13) * cos1_4;\n            p14 = pp14 + pp15;\n            p15 = (pp14 - pp15) * cos1_4;\n\n            // manually doing something that a compiler should handle sucks\n            // coding like this is hard to read\n            var tmp2 = void 0;\n            new_v5 = (new_v11 = (new_v13 = (new_v15 = p15) + p7) + p11) + p5 + p13;\n            new_v7 = (new_v9 = p15 + p11 + p3) + p13;\n            new_v16 /*33-17*/ = -(new_v1 = (tmp1 = p13 + p15 + p9) + p1) - p14;\n            new_v18 /*35-17*/ = -(new_v3 = tmp1 + p5 + p7) - p6 - p14;\n\n            new_v22 /*39-17*/ = (tmp1 = -p10 - p11 - p14 - p15) - p13 - p2 - p3;\n            new_v20 /*37-17*/ = tmp1 - p13 - p5 - p6 - p7;\n            new_v24 /*41-17*/ = tmp1 - p12 - p2 - p3;\n            new_v26 /*43-17*/ = tmp1 - p12 - (tmp2 = p4 + p6 + p7);\n            new_v30 /*47-17*/ = (tmp1 = -p8 - p12 - p14 - p15) - p0;\n            new_v28 /*45-17*/ = tmp1 - tmp2;\n\n            // insert V[0-15] (== new_v[0-15]) into actual v:\n            // float[] x2 = actual_v + actual_write_pos;\n            var dest = this.actual_v;\n            var pos = this.actual_write_pos;\n\n            dest[0 + pos] = new_v0;\n            dest[16 + pos] = new_v1;\n            dest[32 + pos] = new_v2;\n            dest[48 + pos] = new_v3;\n            dest[64 + pos] = new_v4;\n            dest[80 + pos] = new_v5;\n            dest[96 + pos] = new_v6;\n            dest[112 + pos] = new_v7;\n            dest[128 + pos] = new_v8;\n            dest[144 + pos] = new_v9;\n            dest[160 + pos] = new_v10;\n            dest[176 + pos] = new_v11;\n            dest[192 + pos] = new_v12;\n            dest[208 + pos] = new_v13;\n            dest[224 + pos] = new_v14;\n            dest[240 + pos] = new_v15;\n\n            // V[16] is always 0.0:\n            dest[256 + pos] = 0.0;\n\n            // insert V[17-31] (== -new_v[15-1]) into actual v:\n            dest[272 + pos] = -new_v15;\n            dest[288 + pos] = -new_v14;\n            dest[304 + pos] = -new_v13;\n            dest[320 + pos] = -new_v12;\n            dest[336 + pos] = -new_v11;\n            dest[352 + pos] = -new_v10;\n            dest[368 + pos] = -new_v9;\n            dest[384 + pos] = -new_v8;\n            dest[400 + pos] = -new_v7;\n            dest[416 + pos] = -new_v6;\n            dest[432 + pos] = -new_v5;\n            dest[448 + pos] = -new_v4;\n            dest[464 + pos] = -new_v3;\n            dest[480 + pos] = -new_v2;\n            dest[496 + pos] = -new_v1;\n\n            // insert V[32] (== -new_v[0]) into other v:\n            dest = this.actual_v === this.v1 ? this.v2 : this.v1;\n\n            dest[0 + pos] = -new_v0;\n            // insert V[33-48] (== new_v[16-31]) into other v:\n            dest[16 + pos] = new_v16;\n            dest[32 + pos] = new_v17;\n            dest[48 + pos] = new_v18;\n            dest[64 + pos] = new_v19;\n            dest[80 + pos] = new_v20;\n            dest[96 + pos] = new_v21;\n            dest[112 + pos] = new_v22;\n            dest[128 + pos] = new_v23;\n            dest[144 + pos] = new_v24;\n            dest[160 + pos] = new_v25;\n            dest[176 + pos] = new_v26;\n            dest[192 + pos] = new_v27;\n            dest[208 + pos] = new_v28;\n            dest[224 + pos] = new_v29;\n            dest[240 + pos] = new_v30;\n            dest[256 + pos] = new_v31;\n\n            // insert V[49-63] (== new_v[30-16]) into other v:\n            dest[272 + pos] = new_v30;\n            dest[288 + pos] = new_v29;\n            dest[304 + pos] = new_v28;\n            dest[320 + pos] = new_v27;\n            dest[336 + pos] = new_v26;\n            dest[352 + pos] = new_v25;\n            dest[368 + pos] = new_v24;\n            dest[384 + pos] = new_v23;\n            dest[400 + pos] = new_v22;\n            dest[416 + pos] = new_v21;\n            dest[432 + pos] = new_v20;\n            dest[448 + pos] = new_v19;\n            dest[464 + pos] = new_v18;\n            dest[480 + pos] = new_v17;\n            dest[496 + pos] = new_v16;\n        }\n    }, {\n        key: \"compute_pcm_samples0\",\n        value: function compute_pcm_samples0(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var pcm_sample = void 0;\n                var dp = d16[i];\n                pcm_sample = (vp[dvp] * dp[0] + vp[15 + dvp] * dp[1] + vp[14 + dvp] * dp[2] + vp[13 + dvp] * dp[3] + vp[12 + dvp] * dp[4] + vp[11 + dvp] * dp[5] + vp[10 + dvp] * dp[6] + vp[9 + dvp] * dp[7] + vp[8 + dvp] * dp[8] + vp[7 + dvp] * dp[9] + vp[6 + dvp] * dp[10] + vp[5 + dvp] * dp[11] + vp[4 + dvp] * dp[12] + vp[3 + dvp] * dp[13] + vp[2 + dvp] * dp[14] + vp[1 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples1\",\n        value: function compute_pcm_samples1(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[1 + dvp] * dp[0] + vp[0 + dvp] * dp[1] + vp[15 + dvp] * dp[2] + vp[14 + dvp] * dp[3] + vp[13 + dvp] * dp[4] + vp[12 + dvp] * dp[5] + vp[11 + dvp] * dp[6] + vp[10 + dvp] * dp[7] + vp[9 + dvp] * dp[8] + vp[8 + dvp] * dp[9] + vp[7 + dvp] * dp[10] + vp[6 + dvp] * dp[11] + vp[5 + dvp] * dp[12] + vp[4 + dvp] * dp[13] + vp[3 + dvp] * dp[14] + vp[2 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples2\",\n        value: function compute_pcm_samples2(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[2 + dvp] * dp[0] + vp[1 + dvp] * dp[1] + vp[0 + dvp] * dp[2] + vp[15 + dvp] * dp[3] + vp[14 + dvp] * dp[4] + vp[13 + dvp] * dp[5] + vp[12 + dvp] * dp[6] + vp[11 + dvp] * dp[7] + vp[10 + dvp] * dp[8] + vp[9 + dvp] * dp[9] + vp[8 + dvp] * dp[10] + vp[7 + dvp] * dp[11] + vp[6 + dvp] * dp[12] + vp[5 + dvp] * dp[13] + vp[4 + dvp] * dp[14] + vp[3 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples3\",\n        value: function compute_pcm_samples3(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[3 + dvp] * dp[0] + vp[2 + dvp] * dp[1] + vp[1 + dvp] * dp[2] + vp[0 + dvp] * dp[3] + vp[15 + dvp] * dp[4] + vp[14 + dvp] * dp[5] + vp[13 + dvp] * dp[6] + vp[12 + dvp] * dp[7] + vp[11 + dvp] * dp[8] + vp[10 + dvp] * dp[9] + vp[9 + dvp] * dp[10] + vp[8 + dvp] * dp[11] + vp[7 + dvp] * dp[12] + vp[6 + dvp] * dp[13] + vp[5 + dvp] * dp[14] + vp[4 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples4\",\n        value: function compute_pcm_samples4(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[4 + dvp] * dp[0] + vp[3 + dvp] * dp[1] + vp[2 + dvp] * dp[2] + vp[1 + dvp] * dp[3] + vp[0 + dvp] * dp[4] + vp[15 + dvp] * dp[5] + vp[14 + dvp] * dp[6] + vp[13 + dvp] * dp[7] + vp[12 + dvp] * dp[8] + vp[11 + dvp] * dp[9] + vp[10 + dvp] * dp[10] + vp[9 + dvp] * dp[11] + vp[8 + dvp] * dp[12] + vp[7 + dvp] * dp[13] + vp[6 + dvp] * dp[14] + vp[5 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples5\",\n        value: function compute_pcm_samples5(buffer) {\n            var vp = this.actual_v;\n\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[5 + dvp] * dp[0] + vp[4 + dvp] * dp[1] + vp[3 + dvp] * dp[2] + vp[2 + dvp] * dp[3] + vp[1 + dvp] * dp[4] + vp[0 + dvp] * dp[5] + vp[15 + dvp] * dp[6] + vp[14 + dvp] * dp[7] + vp[13 + dvp] * dp[8] + vp[12 + dvp] * dp[9] + vp[11 + dvp] * dp[10] + vp[10 + dvp] * dp[11] + vp[9 + dvp] * dp[12] + vp[8 + dvp] * dp[13] + vp[7 + dvp] * dp[14] + vp[6 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples6\",\n        value: function compute_pcm_samples6(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[6 + dvp] * dp[0] + vp[5 + dvp] * dp[1] + vp[4 + dvp] * dp[2] + vp[3 + dvp] * dp[3] + vp[2 + dvp] * dp[4] + vp[1 + dvp] * dp[5] + vp[0 + dvp] * dp[6] + vp[15 + dvp] * dp[7] + vp[14 + dvp] * dp[8] + vp[13 + dvp] * dp[9] + vp[12 + dvp] * dp[10] + vp[11 + dvp] * dp[11] + vp[10 + dvp] * dp[12] + vp[9 + dvp] * dp[13] + vp[8 + dvp] * dp[14] + vp[7 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples7\",\n        value: function compute_pcm_samples7(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[7 + dvp] * dp[0] + vp[6 + dvp] * dp[1] + vp[5 + dvp] * dp[2] + vp[4 + dvp] * dp[3] + vp[3 + dvp] * dp[4] + vp[2 + dvp] * dp[5] + vp[1 + dvp] * dp[6] + vp[0 + dvp] * dp[7] + vp[15 + dvp] * dp[8] + vp[14 + dvp] * dp[9] + vp[13 + dvp] * dp[10] + vp[12 + dvp] * dp[11] + vp[11 + dvp] * dp[12] + vp[10 + dvp] * dp[13] + vp[9 + dvp] * dp[14] + vp[8 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples8\",\n        value: function compute_pcm_samples8(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[8 + dvp] * dp[0] + vp[7 + dvp] * dp[1] + vp[6 + dvp] * dp[2] + vp[5 + dvp] * dp[3] + vp[4 + dvp] * dp[4] + vp[3 + dvp] * dp[5] + vp[2 + dvp] * dp[6] + vp[1 + dvp] * dp[7] + vp[0 + dvp] * dp[8] + vp[15 + dvp] * dp[9] + vp[14 + dvp] * dp[10] + vp[13 + dvp] * dp[11] + vp[12 + dvp] * dp[12] + vp[11 + dvp] * dp[13] + vp[10 + dvp] * dp[14] + vp[9 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples9\",\n        value: function compute_pcm_samples9(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[9 + dvp] * dp[0] + vp[8 + dvp] * dp[1] + vp[7 + dvp] * dp[2] + vp[6 + dvp] * dp[3] + vp[5 + dvp] * dp[4] + vp[4 + dvp] * dp[5] + vp[3 + dvp] * dp[6] + vp[2 + dvp] * dp[7] + vp[1 + dvp] * dp[8] + vp[0 + dvp] * dp[9] + vp[15 + dvp] * dp[10] + vp[14 + dvp] * dp[11] + vp[13 + dvp] * dp[12] + vp[12 + dvp] * dp[13] + vp[11 + dvp] * dp[14] + vp[10 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples10\",\n        value: function compute_pcm_samples10(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[10 + dvp] * dp[0] + vp[9 + dvp] * dp[1] + vp[8 + dvp] * dp[2] + vp[7 + dvp] * dp[3] + vp[6 + dvp] * dp[4] + vp[5 + dvp] * dp[5] + vp[4 + dvp] * dp[6] + vp[3 + dvp] * dp[7] + vp[2 + dvp] * dp[8] + vp[1 + dvp] * dp[9] + vp[0 + dvp] * dp[10] + vp[15 + dvp] * dp[11] + vp[14 + dvp] * dp[12] + vp[13 + dvp] * dp[13] + vp[12 + dvp] * dp[14] + vp[11 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples11\",\n        value: function compute_pcm_samples11(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[11 + dvp] * dp[0] + vp[10 + dvp] * dp[1] + vp[9 + dvp] * dp[2] + vp[8 + dvp] * dp[3] + vp[7 + dvp] * dp[4] + vp[6 + dvp] * dp[5] + vp[5 + dvp] * dp[6] + vp[4 + dvp] * dp[7] + vp[3 + dvp] * dp[8] + vp[2 + dvp] * dp[9] + vp[1 + dvp] * dp[10] + vp[0 + dvp] * dp[11] + vp[15 + dvp] * dp[12] + vp[14 + dvp] * dp[13] + vp[13 + dvp] * dp[14] + vp[12 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples12\",\n        value: function compute_pcm_samples12(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[12 + dvp] * dp[0] + vp[11 + dvp] * dp[1] + vp[10 + dvp] * dp[2] + vp[9 + dvp] * dp[3] + vp[8 + dvp] * dp[4] + vp[7 + dvp] * dp[5] + vp[6 + dvp] * dp[6] + vp[5 + dvp] * dp[7] + vp[4 + dvp] * dp[8] + vp[3 + dvp] * dp[9] + vp[2 + dvp] * dp[10] + vp[1 + dvp] * dp[11] + vp[0 + dvp] * dp[12] + vp[15 + dvp] * dp[13] + vp[14 + dvp] * dp[14] + vp[13 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples13\",\n        value: function compute_pcm_samples13(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[13 + dvp] * dp[0] + vp[12 + dvp] * dp[1] + vp[11 + dvp] * dp[2] + vp[10 + dvp] * dp[3] + vp[9 + dvp] * dp[4] + vp[8 + dvp] * dp[5] + vp[7 + dvp] * dp[6] + vp[6 + dvp] * dp[7] + vp[5 + dvp] * dp[8] + vp[4 + dvp] * dp[9] + vp[3 + dvp] * dp[10] + vp[2 + dvp] * dp[11] + vp[1 + dvp] * dp[12] + vp[0 + dvp] * dp[13] + vp[15 + dvp] * dp[14] + vp[14 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples14\",\n        value: function compute_pcm_samples14(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[14 + dvp] * dp[0] + vp[13 + dvp] * dp[1] + vp[12 + dvp] * dp[2] + vp[11 + dvp] * dp[3] + vp[10 + dvp] * dp[4] + vp[9 + dvp] * dp[5] + vp[8 + dvp] * dp[6] + vp[7 + dvp] * dp[7] + vp[6 + dvp] * dp[8] + vp[5 + dvp] * dp[9] + vp[4 + dvp] * dp[10] + vp[3 + dvp] * dp[11] + vp[2 + dvp] * dp[12] + vp[1 + dvp] * dp[13] + vp[0 + dvp] * dp[14] + vp[15 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples15\",\n        value: function compute_pcm_samples15(buffer) {\n            var vp = this.actual_v;\n            var tmpOut = this._tmpOut;\n            var dvp = 0;\n\n            // fat chance of having this loop unroll\n            for (var i = 0; i < 32; i++) {\n                var dp = d16[i];\n                var pcm_sample = void 0;\n\n                pcm_sample = (vp[15 + dvp] * dp[0] + vp[14 + dvp] * dp[1] + vp[13 + dvp] * dp[2] + vp[12 + dvp] * dp[3] + vp[11 + dvp] * dp[4] + vp[10 + dvp] * dp[5] + vp[9 + dvp] * dp[6] + vp[8 + dvp] * dp[7] + vp[7 + dvp] * dp[8] + vp[6 + dvp] * dp[9] + vp[5 + dvp] * dp[10] + vp[4 + dvp] * dp[11] + vp[3 + dvp] * dp[12] + vp[2 + dvp] * dp[13] + vp[1 + dvp] * dp[14] + vp[0 + dvp] * dp[15]) * this.scalefactor;\n\n                tmpOut[i] = pcm_sample;\n\n                dvp += 16;\n            } // for\n        }\n    }, {\n        key: \"compute_pcm_samples\",\n        value: function compute_pcm_samples(buffer) {\n            switch (this.actual_write_pos) {\n                case 0:\n                    this.compute_pcm_samples0(buffer);\n                    break;\n                case 1:\n                    this.compute_pcm_samples1(buffer);\n                    break;\n                case 2:\n                    this.compute_pcm_samples2(buffer);\n                    break;\n                case 3:\n                    this.compute_pcm_samples3(buffer);\n                    break;\n                case 4:\n                    this.compute_pcm_samples4(buffer);\n                    break;\n                case 5:\n                    this.compute_pcm_samples5(buffer);\n                    break;\n                case 6:\n                    this.compute_pcm_samples6(buffer);\n                    break;\n                case 7:\n                    this.compute_pcm_samples7(buffer);\n                    break;\n                case 8:\n                    this.compute_pcm_samples8(buffer);\n                    break;\n                case 9:\n                    this.compute_pcm_samples9(buffer);\n                    break;\n                case 10:\n                    this.compute_pcm_samples10(buffer);\n                    break;\n                case 11:\n                    this.compute_pcm_samples11(buffer);\n                    break;\n                case 12:\n                    this.compute_pcm_samples12(buffer);\n                    break;\n                case 13:\n                    this.compute_pcm_samples13(buffer);\n                    break;\n                case 14:\n                    this.compute_pcm_samples14(buffer);\n                    break;\n                case 15:\n                    this.compute_pcm_samples15(buffer);\n                    break;\n            }\n\n            if (buffer != null) {\n                buffer.appendSamples(this.channel, this._tmpOut);\n            }\n        }\n    }]);\n    return SynthesisFilter;\n}();\n\nvar d = [0.0, -4.42505E-4, 0.003250122, -0.007003784, 0.031082153, -0.07862854, 0.10031128, -0.57203674, 1.144989, 0.57203674, 0.10031128, 0.07862854, 0.031082153, 0.007003784, 0.003250122, 4.42505E-4, -1.5259E-5, -4.73022E-4, 0.003326416, -0.007919312, 0.030517578, -0.08418274, 0.090927124, -0.6002197, 1.1442871, 0.54382324, 0.1088562, 0.07305908, 0.03147888, 0.006118774, 0.003173828, 3.96729E-4, -1.5259E-5, -5.34058E-4, 0.003387451, -0.008865356, 0.029785156, -0.08970642, 0.08068848, -0.6282959, 1.1422119, 0.51560974, 0.11657715, 0.06752014, 0.03173828, 0.0052948, 0.003082275, 3.66211E-4, -1.5259E-5, -5.79834E-4, 0.003433228, -0.009841919, 0.028884888, -0.09516907, 0.06959534, -0.6562195, 1.1387634, 0.48747253, 0.12347412, 0.06199646, 0.031845093, 0.004486084, 0.002990723, 3.20435E-4, -1.5259E-5, -6.2561E-4, 0.003463745, -0.010848999, 0.027801514, -0.10054016, 0.057617188, -0.6839142, 1.1339264, 0.45947266, 0.12957764, 0.056533813, 0.031814575, 0.003723145, 0.00289917, 2.89917E-4, -1.5259E-5, -6.86646E-4, 0.003479004, -0.011886597, 0.026535034, -0.1058197, 0.044784546, -0.71131897, 1.1277466, 0.43165588, 0.1348877, 0.051132202, 0.031661987, 0.003005981, 0.002792358, 2.59399E-4, -1.5259E-5, -7.47681E-4, 0.003479004, -0.012939453, 0.02508545, -0.110946655, 0.031082153, -0.7383728, 1.120224, 0.40408325, 0.13945007, 0.045837402, 0.03138733, 0.002334595, 0.002685547, 2.44141E-4, -3.0518E-5, -8.08716E-4, 0.003463745, -0.014022827, 0.023422241, -0.11592102, 0.01651001, -0.7650299, 1.1113739, 0.37680054, 0.14326477, 0.040634155, 0.03100586, 0.001693726, 0.002578735, 2.13623E-4, -3.0518E-5, -8.8501E-4, 0.003417969, -0.01512146, 0.021575928, -0.12069702, 0.001068115, -0.791214, 1.1012115, 0.34986877, 0.1463623, 0.03555298, 0.030532837, 0.001098633, 0.002456665, 1.98364E-4, -3.0518E-5, -9.61304E-4, 0.003372192, -0.016235352, 0.01953125, -0.1252594, -0.015228271, -0.816864, 1.0897827, 0.32331848, 0.1487732, 0.03060913, 0.029937744, 5.49316E-4, 0.002349854, 1.67847E-4, -3.0518E-5, -0.001037598, 0.00328064, -0.017349243, 0.01725769, -0.12956238, -0.03237915, -0.84194946, 1.0771179, 0.2972107, 0.15049744, 0.025817871, 0.029281616, 3.0518E-5, 0.002243042, 1.52588E-4, -4.5776E-5, -0.001113892, 0.003173828, -0.018463135, 0.014801025, -0.1335907, -0.050354004, -0.8663635, 1.0632172, 0.2715912, 0.15159607, 0.0211792, 0.028533936, -4.42505E-4, 0.002120972, 1.37329E-4, -4.5776E-5, -0.001205444, 0.003051758, -0.019577026, 0.012115479, -0.13729858, -0.06916809, -0.89009094, 1.0481567, 0.24650574, 0.15206909, 0.016708374, 0.02772522, -8.69751E-4, 0.00201416, 1.2207E-4, -6.1035E-5, -0.001296997, 0.002883911, -0.020690918, 0.009231567, -0.14067078, -0.088775635, -0.9130554, 1.0319366, 0.22198486, 0.15196228, 0.012420654, 0.02684021, -0.001266479, 0.001907349, 1.06812E-4, -6.1035E-5, -0.00138855, 0.002700806, -0.02178955, 0.006134033, -0.14367676, -0.10916138, -0.9351959, 1.0146179, 0.19805908, 0.15130615, 0.00831604, 0.025909424, -0.001617432, 0.001785278, 1.06812E-4, -7.6294E-5, -0.001480103, 0.002487183, -0.022857666, 0.002822876, -0.1462555, -0.13031006, -0.95648193, 0.99624634, 0.17478943, 0.15011597, 0.004394531, 0.024932861, -0.001937866, 0.001693726, 9.1553E-5, -7.6294E-5, -0.001586914, 0.002227783, -0.023910522, -6.86646E-4, -0.14842224, -0.15220642, -0.9768524, 0.9768524, 0.15220642, 0.14842224, 6.86646E-4, 0.023910522, -0.002227783, 0.001586914, 7.6294E-5, -9.1553E-5, -0.001693726, 0.001937866, -0.024932861, -0.004394531, -0.15011597, -0.17478943, -0.99624634, 0.95648193, 0.13031006, 0.1462555, -0.002822876, 0.022857666, -0.002487183, 0.001480103, 7.6294E-5, -1.06812E-4, -0.001785278, 0.001617432, -0.025909424, -0.00831604, -0.15130615, -0.19805908, -1.0146179, 0.9351959, 0.10916138, 0.14367676, -0.006134033, 0.02178955, -0.002700806, 0.00138855, 6.1035E-5, -1.06812E-4, -0.001907349, 0.001266479, -0.02684021, -0.012420654, -0.15196228, -0.22198486, -1.0319366, 0.9130554, 0.088775635, 0.14067078, -0.009231567, 0.020690918, -0.002883911, 0.001296997, 6.1035E-5, -1.2207E-4, -0.00201416, 8.69751E-4, -0.02772522, -0.016708374, -0.15206909, -0.24650574, -1.0481567, 0.89009094, 0.06916809, 0.13729858, -0.012115479, 0.019577026, -0.003051758, 0.001205444, 4.5776E-5, -1.37329E-4, -0.002120972, 4.42505E-4, -0.028533936, -0.0211792, -0.15159607, -0.2715912, -1.0632172, 0.8663635, 0.050354004, 0.1335907, -0.014801025, 0.018463135, -0.003173828, 0.001113892, 4.5776E-5, -1.52588E-4, -0.002243042, -3.0518E-5, -0.029281616, -0.025817871, -0.15049744, -0.2972107, -1.0771179, 0.84194946, 0.03237915, 0.12956238, -0.01725769, 0.017349243, -0.00328064, 0.001037598, 3.0518E-5, -1.67847E-4, -0.002349854, -5.49316E-4, -0.029937744, -0.03060913, -0.1487732, -0.32331848, -1.0897827, 0.816864, 0.015228271, 0.1252594, -0.01953125, 0.016235352, -0.003372192, 9.61304E-4, 3.0518E-5, -1.98364E-4, -0.002456665, -0.001098633, -0.030532837, -0.03555298, -0.1463623, -0.34986877, -1.1012115, 0.791214, -0.001068115, 0.12069702, -0.021575928, 0.01512146, -0.003417969, 8.8501E-4, 3.0518E-5, -2.13623E-4, -0.002578735, -0.001693726, -0.03100586, -0.040634155, -0.14326477, -0.37680054, -1.1113739, 0.7650299, -0.01651001, 0.11592102, -0.023422241, 0.014022827, -0.003463745, 8.08716E-4, 3.0518E-5, -2.44141E-4, -0.002685547, -0.002334595, -0.03138733, -0.045837402, -0.13945007, -0.40408325, -1.120224, 0.7383728, -0.031082153, 0.110946655, -0.02508545, 0.012939453, -0.003479004, 7.47681E-4, 1.5259E-5, -2.59399E-4, -0.002792358, -0.003005981, -0.031661987, -0.051132202, -0.1348877, -0.43165588, -1.1277466, 0.71131897, -0.044784546, 0.1058197, -0.026535034, 0.011886597, -0.003479004, 6.86646E-4, 1.5259E-5, -2.89917E-4, -0.00289917, -0.003723145, -0.031814575, -0.056533813, -0.12957764, -0.45947266, -1.1339264, 0.6839142, -0.057617188, 0.10054016, -0.027801514, 0.010848999, -0.003463745, 6.2561E-4, 1.5259E-5, -3.20435E-4, -0.002990723, -0.004486084, -0.031845093, -0.06199646, -0.12347412, -0.48747253, -1.1387634, 0.6562195, -0.06959534, 0.09516907, -0.028884888, 0.009841919, -0.003433228, 5.79834E-4, 1.5259E-5, -3.66211E-4, -0.003082275, -0.0052948, -0.03173828, -0.06752014, -0.11657715, -0.51560974, -1.1422119, 0.6282959, -0.08068848, 0.08970642, -0.029785156, 0.008865356, -0.003387451, 5.34058E-4, 1.5259E-5, -3.96729E-4, -0.003173828, -0.006118774, -0.03147888, -0.07305908, -0.1088562, -0.54382324, -1.1442871, 0.6002197, -0.090927124, 0.08418274, -0.030517578, 0.007919312, -0.003326416, 4.73022E-4, 1.5259E-5];\nvar d16 = function (ar, bs, out) {\n    var off = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    while (off < ar.length) {\n        out.push(ar.slice(off, off + bs)) && (off += bs);\n    }return out;\n}(d, 16, []);\n\nvar MY_PI = 3.14159265358979323846;\nvar cos1_64 = 1.0 / (2.0 * Math.cos(MY_PI / 64.0));\nvar cos3_64 = 1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 64.0));\nvar cos5_64 = 1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 64.0));\nvar cos7_64 = 1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 64.0));\nvar cos9_64 = 1.0 / (2.0 * Math.cos(MY_PI * 9.0 / 64.0));\nvar cos11_64 = 1.0 / (2.0 * Math.cos(MY_PI * 11.0 / 64.0));\nvar cos13_64 = 1.0 / (2.0 * Math.cos(MY_PI * 13.0 / 64.0));\nvar cos15_64 = 1.0 / (2.0 * Math.cos(MY_PI * 15.0 / 64.0));\nvar cos17_64 = 1.0 / (2.0 * Math.cos(MY_PI * 17.0 / 64.0));\nvar cos19_64 = 1.0 / (2.0 * Math.cos(MY_PI * 19.0 / 64.0));\nvar cos21_64 = 1.0 / (2.0 * Math.cos(MY_PI * 21.0 / 64.0));\nvar cos23_64 = 1.0 / (2.0 * Math.cos(MY_PI * 23.0 / 64.0));\nvar cos25_64 = 1.0 / (2.0 * Math.cos(MY_PI * 25.0 / 64.0));\nvar cos27_64 = 1.0 / (2.0 * Math.cos(MY_PI * 27.0 / 64.0));\nvar cos29_64 = 1.0 / (2.0 * Math.cos(MY_PI * 29.0 / 64.0));\nvar cos31_64 = 1.0 / (2.0 * Math.cos(MY_PI * 31.0 / 64.0));\nvar cos1_32 = 1.0 / (2.0 * Math.cos(MY_PI / 32.0));\nvar cos3_32 = 1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 32.0));\nvar cos5_32 = 1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 32.0));\nvar cos7_32 = 1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 32.0));\nvar cos9_32 = 1.0 / (2.0 * Math.cos(MY_PI * 9.0 / 32.0));\nvar cos11_32 = 1.0 / (2.0 * Math.cos(MY_PI * 11.0 / 32.0));\nvar cos13_32 = 1.0 / (2.0 * Math.cos(MY_PI * 13.0 / 32.0));\nvar cos15_32 = 1.0 / (2.0 * Math.cos(MY_PI * 15.0 / 32.0));\nvar cos1_16 = 1.0 / (2.0 * Math.cos(MY_PI / 16.0));\nvar cos3_16 = 1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 16.0));\nvar cos5_16 = 1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 16.0));\nvar cos7_16 = 1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 16.0));\nvar cos1_8 = 1.0 / (2.0 * Math.cos(MY_PI / 8.0));\nvar cos3_8 = 1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 8.0));\nvar cos1_4 = 1.0 / (2.0 * Math.cos(MY_PI / 4.0));\n\nmodule.exports = {\n    SampleBuffer: SampleBuffer,\n    SynthesisFilter: SynthesisFilter\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar stream = __webpack_require__(12);\nvar debug = __webpack_require__(25)('aac');\nvar AACDecoder = __webpack_require__(134);\nvar AACFrame = __webpack_require__(27);\n\n// support ADTS containers only\n\nvar Decoder = function (_stream$Transform) {\n    (0, _inherits3.default)(Decoder, _stream$Transform);\n\n    function Decoder() {\n        (0, _classCallCheck3.default)(this, Decoder);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Decoder.__proto__ || (0, _getPrototypeOf2.default)(Decoder)).call(this));\n\n        _this.bytes = new Buffer(0);\n        _this.pendingBytes = 0;\n        _this.pendingCb = null;\n\n        _this.frstFrame = null;\n        _this.currFrame = null;\n        _this.decoder = null;\n\n        // read 72 bits containing header\n        _this._bytes(7, _this._read_frame_header);\n        return _this;\n    }\n\n    (0, _createClass3.default)(Decoder, [{\n        key: '_transform',\n        value: function _transform(data, enc, callback) {\n            this.bytes = Buffer.concat([this.bytes, data]);\n\n            while (this.pendingBytes) {\n                if (this.bytes.length < this.pendingBytes) {\n                    return callback();\n                }\n\n                var bytes = new Buffer(this.pendingBytes);\n                var remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n                this.bytes.copy(bytes, 0, 0, bytes.length);\n                this.bytes.copy(remnd, 0, this.pendingBytes);\n                this.bytes = remnd;\n\n                var pendingCb = this.pendingCb;\n                var pendingBt = this.pendingBytes;\n                this.pendingCb = null;\n                this.pendingBytes = null;\n\n                pendingCb.call(this, pendingBt, bytes);\n            }\n\n            console.assert(false, 'decoding out of sync');\n\n            callback(null, this.bytes);\n            this.bytes = new Buffer(0);\n        }\n    }, {\n        key: '_bytes',\n        value: function _bytes(bytes, callback) {\n            if (bytes <= 0 || !callback) {\n                throw \"Invalid arguments\";\n            }\n\n            if (this.pendingCb) {\n                throw \"There is already pending callback\";\n            }\n\n            this.pendingBytes = bytes;\n            this.pendingCb = callback;\n        }\n    }, {\n        key: '_read_frame_header',\n        value: function _read_frame_header(size, data) {\n            console.assert(7 === size && 7 === data.length);\n\n            debug('decoding frame header', size);\n\n            // assert syncword exists\n            console.assert(data[0] === 0xff && (data[1] & 0xf0) === 0xf0);\n\n            // 0 for MPEG-4, 1 for MPEG-2\n            var mpeg_version = (data[1] & 0x08) >> 3;\n            console.assert(mpeg_version >= 0 && mpeg_version <= 1);\n\n            // always 0\n            var mpeg_layer = (data[1] & 0x06) >> 1;\n            console.assert(mpeg_layer === 0);\n\n            // set to 1 if there is no CRC and 0 if there is CRC\n            var no_crc = data[1] & 0x01;\n\n            // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Audio_Object_Types\n            var profile = ((data[2] & 0xc0) >> 6) + 1;\n            console.assert(profile === 2);\n\n            // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Sampling_Frequencies\n            var samplingIndex = (data[2] & 0x3c) >> 2;\n            console.assert(samplingIndex >= 0 && samplingIndex <= 12);\n\n            // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Channel_Configurations\n            // MPEG-4 Channel Configuration\n            // (in the case of 0, is sent via an inband PCE)\n            var channelConfig = (data[2] & 0x01) << 2 | (data[3] & 0xC0) >> 6;\n\n            var frameLength = (data[3] & 0x03) << 11 | data[4] << 3 | (data[5] & 0xe0) >> 5;\n\n            var num_frames = (data[6] & 0x03) + 1;\n            console.assert(1 === num_frames);\n\n            var frame = this.currFrame = new AACFrame();\n            frame.profile = profile;\n            frame.samplingIndex = samplingIndex;\n            frame.channelConfig = channelConfig;\n            frame.hasCrc = !no_crc;\n            frame.length = frameLength;\n\n            if (frame.hasCrc) {\n                this._bytes(2, this._read_frame_crc);\n            } else {\n                this._bytes(frame.dataLength, this._read_frame_data);\n            }\n        }\n    }, {\n        key: '_read_frame_crc',\n        value: function _read_frame_crc(size, data) {\n            console.assert(2 === size && 2 === data.length);\n            debug('validating frame crc');\n            this._bytes(this.currFrame.dataLength, this._read_frame_data);\n        }\n    }, {\n        key: '_read_frame_data',\n        value: function _read_frame_data(size, data) {\n            if (null === this.frstFrame) {\n                this.frstFrame = this.currFrame;\n                this.decoder = new AACDecoder(this.currFrame);\n                this.emit('header', this.currFrame);\n            }\n\n            this.push(this.decoder.decode(data));\n\n            this._bytes(7, this._read_frame_header);\n        }\n    }]);\n    return Decoder;\n}(stream.Transform);\n\nmodule.exports = Decoder;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Elements = __webpack_require__(135);\nvar FilterBank = __webpack_require__(146);\nvar BitStream = __webpack_require__(45);\n\n// partial port of jaad-0.8.4\n// supports:\n// profiles: AAC-LC\n// channels: stereo\n// frequencies: 11025, 22050, 44100, 48000\n// frameSize: 1024\n\nmodule.exports = function () {\n    function Decoder(frame) {\n        (0, _classCallCheck3.default)(this, Decoder);\n\n        this.elements = new Elements(this.frame = frame);\n        this.filterBank = new FilterBank(false, // fixme: config.isSmallFrameUsed()\n        this.frame.channels // fixme: config.getChannelConfiguration().getChannelCount()\n        );\n    }\n\n    (0, _createClass3.default)(Decoder, [{\n        key: 'decode',\n        value: function decode(data) {\n            return this.elements.reset().decode(new BitStream(data)).process(this.filterBank).output();\n        }\n    }]);\n    return Decoder;\n}();\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Constants = __webpack_require__(26);\nvar CPE = __webpack_require__(66);\nvar SCE_LFE = __webpack_require__(68);\nvar FIL = __webpack_require__(143);\nvar IS = __webpack_require__(144);\nvar MS = __webpack_require__(145);\nvar debug = __webpack_require__(25)('elements');\n\nvar Short = {\n    MAX_VALUE: Math.pow(2, 15) - 1,\n    MIN_VALUE: -Math.pow(2, 15)\n};\n\nmodule.exports = function () {\n    function Elements(frame) {\n        (0, _classCallCheck3.default)(this, Elements);\n\n        this.frame = frame;\n\n        this.elements = [];\n        this.fils = [];\n        this.data = null;\n\n        this.reset();\n    }\n\n    (0, _createClass3.default)(Elements, [{\n        key: 'reset',\n        value: function reset() {\n            this.elements.length = 0;\n            this.fils.length = 0;\n            this.sbrPresent = false;\n            this.psPresent = false;\n            return this;\n        }\n    }, {\n        key: 'decode',\n        value: function decode(bitStream) {\n\n            var elementType = void 0,\n                prev = null;\n\n            while ((elementType = bitStream.readBits(3)) !== Constants.elements.END) {\n\n                switch (elementType) {\n                    case Constants.elements.CCE:\n                        // 2\n                        throw 'CCE not implemented';\n\n                    case Constants.elements.DSE:\n                        // 4\n                        throw 'DSE not implemented';\n\n                    case Constants.elements.PCE:\n                        // 5\n                        throw 'PCE not implemented';\n\n                    case Constants.elements.SCE: // 0\n                    case Constants.elements.LFE:\n                        // 3\n                        debug('decodeSCE_LFE');\n                        prev = this.decodeSCE_LFE(bitStream);\n                        break;\n\n                    case Constants.elements.CPE:\n                        // 1\n                        debug('decodeCPE');\n                        prev = this.decodeCPE(bitStream);\n                        break;\n\n                    case Constants.elements.FIL:\n                        // 6\n                        debug('decodeFIL');\n                        this.decodeFIL(bitStream, prev);\n                        prev = null;\n                        break;\n\n                    default:\n                        throw 'Unexpected elementType ' + elementType;\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'process',\n        value: function process(filterBank) {\n            var _this = this;\n\n            var chs = this.frame.channels;\n\n            // fixme: if(chs==1&&psPresent) chs++;\n            if (chs === 1) {\n                throw 'unsupported channels';\n            }\n\n            // fixme: final int mult = sbrPresent ? 2 : 1;\n            var mult = 1;\n\n            // //only reallocate if needed\n            if (!this.data || chs !== this.data.length || this.data[0].length !== mult * this.frame.frameLength) this.data = new Array(chs).fill().map(function () {\n                return new Array(mult * _this.frame.frameLength).fill(0);\n            });\n\n            var channel = 0;\n\n            for (var i = 0; i < this.elements.length && channel < chs; i++) {\n                var e = this.elements[i];\n\n                if (e instanceof CPE) {\n                    this.processPair(e, filterBank, channel);\n                    channel += 2;\n                } else {\n                    throw 'not implemented';\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'processPair',\n        value: function processPair(cpe, filterBank, channel) {\n\n            var ics1 = cpe.getLeftChannel();\n            var ics2 = cpe.getRightChannel();\n\n            var info1 = ics1.getInfo();\n            var info2 = ics2.getInfo();\n\n            var elementID = cpe.getInstanceTag();\n\n            var iqData1 = ics1.getInvQuantData();\n            var iqData2 = ics2.getInvQuantData();\n\n            //MS\n            if (cpe.isCommonWindow() && cpe.isMSMaskPresent()) {\n                MS.process(cpe, iqData1, iqData2);\n            }\n\n            // fixme: main prediction\n\n            //IS\n            IS.process(cpe, iqData1, iqData2);\n\n            // fixme: LTP\n\n            // fixme: dependent coupling\n\n            //TNS\n            if (ics1.isTNSDataPresent()) ics1.getTNS().process(ics1, iqData1, sf, false);\n            if (ics2.isTNSDataPresent()) ics2.getTNS().process(ics2, iqData2, sf, false);\n\n            // fixme: dependent coupling again\n\n            //filterbank\n            filterBank.process(info1.getWindowSequence(), info1.getCurrentWindowShape(), info1.getPreviousWindowShape(), iqData1, this.data[channel + 0], channel + 0);\n            filterBank.process(info2.getWindowSequence(), info2.getCurrentWindowShape(), info2.getPreviousWindowShape(), iqData2, this.data[channel + 1], channel + 1);\n\n            // fixme: LTP\n            // fixme: independent coupling\n            // fixme: gain control\n            // fixme: SBR\n        }\n    }, {\n        key: 'decodeSCE_LFE',\n        value: function decodeSCE_LFE(bitStream) {\n            var element = new SCE_LFE(this.frame);\n            this.elements.push(element);\n            return element.decode(bitStream);\n        }\n    }, {\n        key: 'decodeCPE',\n        value: function decodeCPE(bitStream) {\n            var element = new CPE(this.frame);\n            this.elements.push(element);\n            return element.decode(bitStream);\n        }\n    }, {\n        key: 'decodeFIL',\n        value: function decodeFIL(bitStream, prev) {\n\n            if (Constants.MAX_ELEMENTS === this.fils.length) throw \"too much FIL elements\";\n\n            var element = new FIL(false // fixme: config.isSBRDownSampled()\n            );\n\n            element.decode(bitStream, prev, this.frame.sampleRate, // fixme: config.getSampleFrequency(),\n            false, // fixme: config.isSBREnabled(),\n            false // fixme: config.isSmallFrameUsed()\n            );\n\n            this.fils.push(element);\n\n            if (prev != null && prev.isSBRPresent()) {\n                this.sbrPresent = true;\n                if (!this.psPresent && prev.getSBR().isPSUsed()) this.psPresent = true;\n            }\n        }\n    }, {\n        key: 'output',\n        value: function output() {\n            var chs = this.data.length;\n\n            var mult = 1; // fixme: SBR\n            var length = mult * this.frame.frameLength;\n            var b = new Buffer(chs * length * 2);\n\n            var idx = 0;\n            // for each value in frame\n            for (var j = 0; j < length; j++) {\n                // interleave channels\n                for (var i = 0; i < chs; i++) {\n                    // write uint16 pcm sample\n                    var s = Math.max(Math.min(Math.round(this.data[i][j]), Short.MAX_VALUE), Short.MIN_VALUE);\n                    b.writeInt16LE(s, idx);\n                    idx += 2;\n                }\n            }\n\n            return b;\n        }\n    }]);\n    return Elements;\n}();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ONLY_LONG_SEQUENCE = 0;\nvar LONG_START_SEQUENCE = 1;\nvar EIGHT_SHORT_SEQUENCE = 2;\nvar LONG_STOP_SEQUENCE = 3;\n\nvar PREVIOUS = 0;\nvar CURRENT = 1;\n\nvar WINDOW_SHAPE_SINE = 0;\nvar WINDOW_SHAPE_KAISER = 1;\n\nvar MAX_WINDOW_COUNT = 8;\nvar MAX_WINDOW_GROUP_COUNT = MAX_WINDOW_COUNT;\n\nvar AACFrame = __webpack_require__(27);\nvar SFB = __webpack_require__(137);\n\nmodule.exports = function () {\n    function ICSInfo(frame) {\n        (0, _classCallCheck3.default)(this, ICSInfo);\n\n        console.assert(frame instanceof AACFrame);\n        this.frame = frame;\n\n        this.windowShape = [0, 0];\n\n        this._windowSequence = ONLY_LONG_SEQUENCE;\n\n        // private int[] windowGroupLength;\n        this.windowGroupLength = new Int32Array(MAX_WINDOW_GROUP_COUNT).fill(0);\n\n        this.maxSFB = 0;\n        this.predictionDataPresent = false;\n        this.windowCount = 0;\n        this.windowGroupCount = 0;\n\n        this.swbCount = this.swbOffsets = null;\n    }\n\n    (0, _createClass3.default)(ICSInfo, [{\n        key: 'decode',\n        value: function decode(bitStream, commonWindow) {\n            bitStream.skipBit();\n\n            this.windowSequence = bitStream.readBits(2);\n\n            this.windowShape[PREVIOUS] = this.windowShape[CURRENT];\n            this.windowShape[CURRENT] = bitStream.readBit();\n\n            this.windowGroupCount = 1;\n            this.windowGroupLength[0] = 1;\n\n            if (EIGHT_SHORT_SEQUENCE === this.windowSequence) {\n                this.maxSFB = bitStream.readBits(4);\n\n                for (var i = 0; i < 7; i++) {\n                    if (bitStream.readBit()) {\n                        this.windowGroupLength[this.windowGroupCount - 1]++;\n                    } else {\n                        this.windowGroupCount++;\n                        this.windowGroupLength[this.windowGroupCount - 1] = 1;\n                    }\n                }\n\n                this.windowCount = 8;\n\n                this.swbOffsets = SFB.SWB_OFFSET_SHORT_WINDOW[this.frame.samplingIndex];\n                this.swbCount = SFB.SWB_SHORT_WINDOW_COUNT[this.frame.samplingIndex];\n\n                this.predictionDataPresent = false;\n            } else {\n                this.maxSFB = bitStream.readBits(6);\n                this.windowCount = 1;\n\n                this.swbOffsets = SFB.SWB_OFFSET_LONG_WINDOW[this.frame.samplingIndex];\n                this.swbCount = SFB.SWB_LONG_WINDOW_COUNT[this.frame.samplingIndex];\n\n                this.predictionDataPresent = !!bitStream.readBit();\n\n                if (this.predictionDataPresent) {\n                    throw 'not implemented';\n                }\n            }\n        }\n    }, {\n        key: 'setData',\n        value: function setData(info) {\n            console.assert(info instanceof ICSInfo);\n\n            this.windowSequence = info.windowSequence;\n\n            this.windowShape[PREVIOUS] = this.windowShape[CURRENT];\n\n            this.windowShape[CURRENT] = info.windowShape[CURRENT];\n\n            this.maxSFB = info.maxSFB;\n\n            this.predictionDataPresent = info.predictionDataPresent;\n\n            this.windowCount = info.windowCount;\n\n            this.windowGroupCount = info.windowGroupCount;\n\n            this.windowGroupLength = info.windowGroupLength.slice();\n\n            this.swbCount = info.swbCount;\n\n            this.swbOffsets = info.swbOffsets.slice();\n        }\n    }, {\n        key: 'getMaxSFB',\n        value: function getMaxSFB() {\n            return this.maxSFB;\n        }\n    }, {\n        key: 'getWindowGroupCount',\n        value: function getWindowGroupCount() {\n            return this.windowGroupCount;\n        }\n    }, {\n        key: 'getWindowGroupLength',\n        value: function getWindowGroupLength(g) {\n            return this.windowGroupLength[g];\n        }\n    }, {\n        key: 'isEightShortFrame',\n        value: function isEightShortFrame() {\n            return EIGHT_SHORT_SEQUENCE === this.windowSequence;\n        }\n    }, {\n        key: 'getSWBOffsets',\n        value: function getSWBOffsets() {\n            return this.swbOffsets;\n        }\n    }, {\n        key: 'getSWBOffsetMax',\n        value: function getSWBOffsetMax() {\n            return this.swbOffsets[this.swbCount];\n        }\n    }, {\n        key: 'getWindowSequence',\n        value: function getWindowSequence() {\n            return this.windowSequence;\n        }\n    }, {\n        key: 'getWindowShape',\n        value: function getWindowShape(index) {\n            return this.windowShape[index];\n        }\n    }, {\n        key: 'getCurrentWindowShape',\n        value: function getCurrentWindowShape() {\n            return this.windowShape[CURRENT];\n        }\n    }, {\n        key: 'getPreviousWindowShape',\n        value: function getPreviousWindowShape() {\n            return this.windowShape[PREVIOUS];\n        }\n    }, {\n        key: 'getWindowCount',\n        value: function getWindowCount() {\n            return this.windowCount;\n        }\n\n        // warners\n\n    }, {\n        key: 'windowSequence',\n        get: function get() {\n            return this._windowSequence;\n        },\n        set: function set(seq) {\n            switch (seq) {\n                case ONLY_LONG_SEQUENCE:\n                case LONG_START_SEQUENCE:\n                case EIGHT_SHORT_SEQUENCE:\n                case LONG_STOP_SEQUENCE:\n                    this._windowSequence = seq;\n                    break;\n                default:\n                    throw 'unknown window sequence type';\n            }\n        }\n    }, {\n        key: 'icPredict',\n        get: function get() {\n            throw 'not implemented';\n        }\n    }, {\n        key: 'ltpData1Present',\n        get: function get() {\n            throw 'not implemented';\n        }\n    }, {\n        key: 'ltPredict1',\n        get: function get() {\n            throw 'not implemented';\n        }\n    }, {\n        key: 'ltPredict2',\n        get: function get() {\n            throw 'not implemented';\n        }\n    }]);\n    return ICSInfo;\n}();\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ScaleFactorBands\n */\nmodule.exports = function () {\n    function SFB() {\n        (0, _classCallCheck3.default)(this, SFB);\n    }\n\n    (0, _createClass3.default)(SFB, null, [{\n        key: \"SWB_OFFSET_1024_96\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 64, 72, 80, 88, 96, 108, 120, 132, 144, 156, 172, 188, 212, 240, 276, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_64\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 64, 72, 80, 88, 100, 112, 124, 140, 156, 172, 192, 216, 240, 268, 304, 344, 384, 424, 464, 504, 544, 584, 624, 664, 704, 744, 784, 824, 864, 904, 944, 984, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_48\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 80, 88, 96, 108, 120, 132, 144, 160, 176, 196, 216, 240, 264, 292, 320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800, 832, 864, 896, 928, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_32\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72, 80, 88, 96, 108, 120, 132, 144, 160, 176, 196, 216, 240, 264, 292, 320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800, 832, 864, 896, 928, 960, 992, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_24\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 52, 60, 68, 76, 84, 92, 100, 108, 116, 124, 136, 148, 160, 172, 188, 204, 220, 240, 260, 284, 308, 336, 364, 396, 432, 468, 508, 552, 600, 652, 704, 768, 832, 896, 960, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_16\",\n        get: function get() {\n            return new Int16Array([0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 100, 112, 124, 136, 148, 160, 172, 184, 196, 212, 228, 244, 260, 280, 300, 320, 344, 368, 396, 424, 456, 492, 532, 572, 616, 664, 716, 772, 832, 896, 960, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_1024_8\",\n        get: function get() {\n            return new Int16Array([0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 172, 188, 204, 220, 236, 252, 268, 288, 308, 328, 348, 372, 396, 420, 448, 476, 508, 544, 580, 620, 664, 712, 764, 820, 880, 944, 1024, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_96\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_64\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_48\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 28, 36, 44, 56, 68, 80, 96, 112, 128, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_24\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 64, 76, 92, 108, 128, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_16\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 32, 40, 48, 60, 72, 88, 108, 128, -1]);\n        }\n    }, {\n        key: \"SWB_OFFSET_128_8\",\n        get: function get() {\n            return new Int16Array([0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 60, 72, 88, 108, 128, -1]);\n        }\n    }, {\n        key: \"SWB_LONG_WINDOW_COUNT\",\n        get: function get() {\n            return new Int16Array([41, 41, 47, 49, 49, 51, 47, 47, 43, 43, 43, 40]);\n        }\n    }, {\n        key: \"SWB_OFFSET_LONG_WINDOW\",\n        get: function get() {\n            return [SFB.SWB_OFFSET_1024_96, SFB.SWB_OFFSET_1024_96, SFB.SWB_OFFSET_1024_64, SFB.SWB_OFFSET_1024_48, SFB.SWB_OFFSET_1024_48, SFB.SWB_OFFSET_1024_32, SFB.SWB_OFFSET_1024_24, SFB.SWB_OFFSET_1024_24, SFB.SWB_OFFSET_1024_16, SFB.SWB_OFFSET_1024_16, SFB.SWB_OFFSET_1024_16, SFB.SWB_OFFSET_1024_8];\n        }\n    }, {\n        key: \"SWB_SHORT_WINDOW_COUNT\",\n        get: function get() {\n            return new Int16Array([12, 12, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15]);\n        }\n    }, {\n        key: \"SWB_OFFSET_SHORT_WINDOW\",\n        get: function get() {\n            return [SFB.SWB_OFFSET_128_96, SFB.SWB_OFFSET_128_96, SFB.SWB_OFFSET_128_64, SFB.SWB_OFFSET_128_48, SFB.SWB_OFFSET_128_48, SFB.SWB_OFFSET_128_48, SFB.SWB_OFFSET_128_24, SFB.SWB_OFFSET_128_24, SFB.SWB_OFFSET_128_16, SFB.SWB_OFFSET_128_16, SFB.SWB_OFFSET_128_16, SFB.SWB_OFFSET_128_8];\n        }\n    }]);\n    return SFB;\n}();\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function Huffman() {\n        (0, _classCallCheck3.default)(this, Huffman);\n    }\n\n    (0, _createClass3.default)(Huffman, null, [{\n        key: \"decodeSpectralData\",\n        value: function decodeSpectralData(bitStream, cb, data, off) {\n            var HCB = CODEBOOKS[cb - 1];\n\n            //find index\n            var offset = Huffman.findOffset(bitStream, HCB);\n\n            //copy data\n            data[off] = HCB[offset][2];\n            data[off + 1] = HCB[offset][3];\n\n            if (cb < 5) {\n                data[off + 2] = HCB[offset][4];\n                data[off + 3] = HCB[offset][5];\n            }\n\n            //sign & escape\n            if (cb < 11) {\n                if (Huffman.UNSIGNED[cb - 1]) Huffman.signValues(bitStream, data, off, cb < 5 ? Huffman.QUAD_LEN : Huffman.PAIR_LEN);\n            } else if (cb === 11 || cb > 15) {\n                //virtual codebooks are always unsigned\n                Huffman.signValues(bitStream, data, off, cb < 5 ? Huffman.QUAD_LEN : Huffman.PAIR_LEN);\n                if (Math.abs(data[off]) === 16) data[off] = Huffman.getEscape(bitStream, data[off]);\n                if (Math.abs(data[off + 1]) === 16) data[off + 1] = Huffman.getEscape(bitStream, data[off + 1]);\n            } else throw \"Huffman: unknown spectral codebook: \" + cb;\n        }\n    }, {\n        key: \"signValues\",\n        value: function signValues(bitStream, data, off, len) {\n            for (var i = off; i < off + len; i++) {\n                if (data[i] !== 0) {\n                    if (!!bitStream.readBit()) data[i] = -data[i];\n                }\n            }\n        }\n    }, {\n        key: \"decodeScaleFactor\",\n        value: function decodeScaleFactor(bitStream) {\n            var offset = Huffman.findOffset(bitStream, HCB_SF);\n\n            return HCB_SF[offset][2];\n        }\n    }, {\n        key: \"findOffset\",\n        value: function findOffset(bitStream, table) {\n            var off = 0,\n                len = table[off][0],\n                cw = bitStream.readBits(len),\n                j = void 0;\n\n            while (cw !== table[off][1]) {\n                off++;\n                j = table[off][0] - len;\n                len = table[off][0];\n                cw <<= j;\n                cw |= bitStream.readBits(j);\n            }\n            return off;\n        }\n    }, {\n        key: \"getEscape\",\n        value: function getEscape(bitStream, s) {\n            var neg = s < 0;\n\n            var i = 4;\n\n            while (!!bitStream.readBit()) {\n                i++;\n            }\n\n            var j = bitStream.readBits(i) | 1 << i;\n\n            return neg ? -j : j;\n        }\n    }, {\n        key: \"UNSIGNED\",\n        get: function get() {\n            return [false, false, true, true, false, false, true, true, true, true, true];\n        }\n    }, {\n        key: \"QUAD_LEN\",\n        get: function get() {\n            return 4;\n        }\n    }, {\n        key: \"PAIR_LEN\",\n        get: function get() {\n            return 2;\n        }\n    }]);\n    return Huffman;\n}();\n\nvar HCB1 = [[1, 0, 0, 0, 0, 0], [5, 16, 1, 0, 0, 0], [5, 17, -1, 0, 0, 0], [5, 18, 0, 0, 0, -1], [5, 19, 0, 1, 0, 0], [5, 20, 0, 0, 0, 1], [5, 21, 0, 0, -1, 0], [5, 22, 0, 0, 1, 0], [5, 23, 0, -1, 0, 0], [7, 96, 1, -1, 0, 0], [7, 97, -1, 1, 0, 0], [7, 98, 0, 0, -1, 1], [7, 99, 0, 1, -1, 0], [7, 100, 0, -1, 1, 0], [7, 101, 0, 0, 1, -1], [7, 102, 1, 1, 0, 0], [7, 103, 0, 0, -1, -1], [7, 104, -1, -1, 0, 0], [7, 105, 0, -1, -1, 0], [7, 106, 1, 0, -1, 0], [7, 107, 0, 1, 0, -1], [7, 108, -1, 0, 1, 0], [7, 109, 0, 0, 1, 1], [7, 110, 1, 0, 1, 0], [7, 111, 0, -1, 0, 1], [7, 112, 0, 1, 1, 0], [7, 113, 0, 1, 0, 1], [7, 114, -1, 0, -1, 0], [7, 115, 1, 0, 0, 1], [7, 116, -1, 0, 0, -1], [7, 117, 1, 0, 0, -1], [7, 118, -1, 0, 0, 1], [7, 119, 0, -1, 0, -1], [9, 480, 1, 1, -1, 0], [9, 481, -1, 1, -1, 0], [9, 482, 1, -1, 1, 0], [9, 483, 0, 1, 1, -1], [9, 484, 0, 1, -1, 1], [9, 485, 0, -1, 1, 1], [9, 486, 0, -1, 1, -1], [9, 487, 1, -1, -1, 0], [9, 488, 1, 0, -1, 1], [9, 489, 0, 1, -1, -1], [9, 490, -1, 1, 1, 0], [9, 491, -1, 0, 1, -1], [9, 492, -1, -1, 1, 0], [9, 493, 0, -1, -1, 1], [9, 494, 1, -1, 0, 1], [9, 495, 1, -1, 0, -1], [9, 496, -1, 1, 0, -1], [9, 497, -1, -1, -1, 0], [9, 498, 0, -1, -1, -1], [9, 499, 0, 1, 1, 1], [9, 500, 1, 0, 1, -1], [9, 501, 1, 1, 0, 1], [9, 502, -1, 1, 0, 1], [9, 503, 1, 1, 1, 0], [10, 1008, -1, -1, 0, 1], [10, 1009, -1, 0, -1, -1], [10, 1010, 1, 1, 0, -1], [10, 1011, 1, 0, -1, -1], [10, 1012, -1, 0, -1, 1], [10, 1013, -1, -1, 0, -1], [10, 1014, -1, 0, 1, 1], [10, 1015, 1, 0, 1, 1], [11, 2032, 1, -1, 1, -1], [11, 2033, -1, 1, -1, 1], [11, 2034, -1, 1, 1, -1], [11, 2035, 1, -1, -1, 1], [11, 2036, 1, 1, 1, 1], [11, 2037, -1, -1, 1, 1], [11, 2038, 1, 1, -1, -1], [11, 2039, -1, -1, 1, -1], [11, 2040, -1, -1, -1, -1], [11, 2041, 1, 1, -1, 1], [11, 2042, 1, -1, 1, 1], [11, 2043, -1, 1, 1, 1], [11, 2044, -1, 1, -1, -1], [11, 2045, -1, -1, -1, 1], [11, 2046, 1, -1, -1, -1], [11, 2047, 1, 1, 1, -1]];\n\nvar HCB2 = [[3, 0, 0, 0, 0, 0], [4, 2, 1, 0, 0, 0], [5, 6, -1, 0, 0, 0], [5, 7, 0, 0, 0, 1], [5, 8, 0, 0, -1, 0], [5, 9, 0, 0, 0, -1], [5, 10, 0, -1, 0, 0], [5, 11, 0, 0, 1, 0], [5, 12, 0, 1, 0, 0], [6, 26, 0, -1, 1, 0], [6, 27, -1, 1, 0, 0], [6, 28, 0, 1, -1, 0], [6, 29, 0, 0, 1, -1], [6, 30, 0, 1, 0, -1], [6, 31, 0, 0, -1, 1], [6, 32, -1, 0, 0, -1], [6, 33, 1, -1, 0, 0], [6, 34, 1, 0, -1, 0], [6, 35, -1, -1, 0, 0], [6, 36, 0, 0, -1, -1], [6, 37, 1, 0, 1, 0], [6, 38, 1, 0, 0, 1], [6, 39, 0, -1, 0, 1], [6, 40, -1, 0, 1, 0], [6, 41, 0, 1, 0, 1], [6, 42, 0, -1, -1, 0], [6, 43, -1, 0, 0, 1], [6, 44, 0, -1, 0, -1], [6, 45, -1, 0, -1, 0], [6, 46, 1, 1, 0, 0], [6, 47, 0, 1, 1, 0], [6, 48, 0, 0, 1, 1], [6, 49, 1, 0, 0, -1], [7, 100, 0, 1, -1, 1], [7, 101, 1, 0, -1, 1], [7, 102, -1, 1, -1, 0], [7, 103, 0, -1, 1, -1], [7, 104, 1, -1, 1, 0], [7, 105, 1, 1, 0, -1], [7, 106, 1, 0, 1, 1], [7, 107, -1, 1, 1, 0], [7, 108, 0, -1, -1, 1], [7, 109, 1, 1, 1, 0], [7, 110, -1, 0, 1, -1], [7, 111, -1, -1, -1, 0], [7, 112, -1, 0, -1, 1], [7, 113, 1, -1, -1, 0], [7, 114, 1, 1, -1, 0], [8, 230, 1, -1, 0, 1], [8, 231, -1, 1, 0, -1], [8, 232, -1, -1, 1, 0], [8, 233, -1, 0, 1, 1], [8, 234, -1, -1, 0, 1], [8, 235, -1, -1, 0, -1], [8, 236, 0, -1, -1, -1], [8, 237, 1, 0, 1, -1], [8, 238, 1, 0, -1, -1], [8, 239, 0, 1, -1, -1], [8, 240, 0, 1, 1, 1], [8, 241, -1, 1, 0, 1], [8, 242, -1, 0, -1, -1], [8, 243, 0, 1, 1, -1], [8, 244, 1, -1, 0, -1], [8, 245, 0, -1, 1, 1], [8, 246, 1, 1, 0, 1], [8, 247, 1, -1, 1, -1], [8, 248, -1, 1, -1, 1], [9, 498, 1, -1, -1, 1], [9, 499, -1, -1, -1, -1], [9, 500, -1, 1, 1, -1], [9, 501, -1, 1, 1, 1], [9, 502, 1, 1, 1, 1], [9, 503, -1, -1, 1, -1], [9, 504, 1, -1, 1, 1], [9, 505, -1, 1, -1, -1], [9, 506, -1, -1, 1, 1], [9, 507, 1, 1, -1, -1], [9, 508, 1, -1, -1, -1], [9, 509, -1, -1, -1, 1], [9, 510, 1, 1, -1, 1], [9, 511, 1, 1, 1, -1]];\n\nvar HCB3 = [[1, 0, 0, 0, 0, 0], [4, 8, 1, 0, 0, 0], [4, 9, 0, 0, 0, 1], [4, 10, 0, 1, 0, 0], [4, 11, 0, 0, 1, 0], [5, 24, 1, 1, 0, 0], [5, 25, 0, 0, 1, 1], [6, 52, 0, 1, 1, 0], [6, 53, 0, 1, 0, 1], [6, 54, 1, 0, 1, 0], [6, 55, 0, 1, 1, 1], [6, 56, 1, 0, 0, 1], [6, 57, 1, 1, 1, 0], [7, 116, 1, 1, 1, 1], [7, 117, 1, 0, 1, 1], [7, 118, 1, 1, 0, 1], [8, 238, 2, 0, 0, 0], [8, 239, 0, 0, 0, 2], [8, 240, 0, 0, 1, 2], [8, 241, 2, 1, 0, 0], [8, 242, 1, 2, 1, 0], [9, 486, 0, 0, 2, 1], [9, 487, 0, 1, 2, 1], [9, 488, 1, 2, 0, 0], [9, 489, 0, 1, 1, 2], [9, 490, 2, 1, 1, 0], [9, 491, 0, 0, 2, 0], [9, 492, 0, 2, 1, 0], [9, 493, 0, 1, 2, 0], [9, 494, 0, 2, 0, 0], [9, 495, 0, 1, 0, 2], [9, 496, 2, 0, 1, 0], [9, 497, 1, 2, 1, 1], [9, 498, 0, 2, 1, 1], [9, 499, 1, 1, 2, 0], [9, 500, 1, 1, 2, 1], [10, 1002, 1, 2, 0, 1], [10, 1003, 1, 0, 2, 0], [10, 1004, 1, 0, 2, 1], [10, 1005, 0, 2, 0, 1], [10, 1006, 2, 1, 1, 1], [10, 1007, 1, 1, 1, 2], [10, 1008, 2, 1, 0, 1], [10, 1009, 1, 0, 1, 2], [10, 1010, 0, 0, 2, 2], [10, 1011, 0, 1, 2, 2], [10, 1012, 2, 2, 1, 0], [10, 1013, 1, 2, 2, 0], [10, 1014, 1, 0, 0, 2], [10, 1015, 2, 0, 0, 1], [10, 1016, 0, 2, 2, 1], [11, 2034, 2, 2, 0, 0], [11, 2035, 1, 2, 2, 1], [11, 2036, 1, 1, 0, 2], [11, 2037, 2, 0, 1, 1], [11, 2038, 1, 1, 2, 2], [11, 2039, 2, 2, 1, 1], [11, 2040, 0, 2, 2, 0], [11, 2041, 0, 2, 1, 2], [12, 4084, 1, 0, 2, 2], [12, 4085, 2, 2, 0, 1], [12, 4086, 2, 1, 2, 0], [12, 4087, 2, 2, 2, 0], [12, 4088, 0, 2, 2, 2], [12, 4089, 2, 2, 2, 1], [12, 4090, 2, 1, 2, 1], [12, 4091, 1, 2, 1, 2], [12, 4092, 1, 2, 2, 2], [13, 8186, 0, 2, 0, 2], [13, 8187, 2, 0, 2, 0], [13, 8188, 1, 2, 0, 2], [14, 16378, 2, 0, 2, 1], [14, 16379, 2, 1, 1, 2], [14, 16380, 2, 1, 0, 2], [15, 32762, 2, 2, 2, 2], [15, 32763, 2, 2, 1, 2], [15, 32764, 2, 1, 2, 2], [15, 32765, 2, 0, 1, 2], [15, 32766, 2, 0, 0, 2], [16, 65534, 2, 2, 0, 2], [16, 65535, 2, 0, 2, 2]];\n\nvar HCB4 = [[4, 0, 1, 1, 1, 1], [4, 1, 0, 1, 1, 1], [4, 2, 1, 1, 0, 1], [4, 3, 1, 1, 1, 0], [4, 4, 1, 0, 1, 1], [4, 5, 1, 0, 0, 0], [4, 6, 1, 1, 0, 0], [4, 7, 0, 0, 0, 0], [4, 8, 0, 0, 1, 1], [4, 9, 1, 0, 1, 0], [5, 20, 1, 0, 0, 1], [5, 21, 0, 1, 1, 0], [5, 22, 0, 0, 0, 1], [5, 23, 0, 1, 0, 1], [5, 24, 0, 0, 1, 0], [5, 25, 0, 1, 0, 0], [7, 104, 2, 1, 1, 1], [7, 105, 1, 1, 2, 1], [7, 106, 1, 2, 1, 1], [7, 107, 1, 1, 1, 2], [7, 108, 2, 1, 1, 0], [7, 109, 2, 1, 0, 1], [7, 110, 1, 2, 1, 0], [7, 111, 2, 0, 1, 1], [7, 112, 0, 1, 2, 1], [8, 226, 0, 1, 1, 2], [8, 227, 1, 1, 2, 0], [8, 228, 0, 2, 1, 1], [8, 229, 1, 0, 1, 2], [8, 230, 1, 2, 0, 1], [8, 231, 1, 1, 0, 2], [8, 232, 1, 0, 2, 1], [8, 233, 2, 1, 0, 0], [8, 234, 2, 0, 1, 0], [8, 235, 1, 2, 0, 0], [8, 236, 2, 0, 0, 1], [8, 237, 0, 1, 0, 2], [8, 238, 0, 2, 1, 0], [8, 239, 0, 0, 1, 2], [8, 240, 0, 1, 2, 0], [8, 241, 0, 2, 0, 1], [8, 242, 1, 0, 0, 2], [8, 243, 0, 0, 2, 1], [8, 244, 1, 0, 2, 0], [8, 245, 2, 0, 0, 0], [8, 246, 0, 0, 0, 2], [9, 494, 0, 2, 0, 0], [9, 495, 0, 0, 2, 0], [9, 496, 1, 2, 2, 1], [9, 497, 2, 2, 1, 1], [9, 498, 2, 1, 2, 1], [9, 499, 1, 1, 2, 2], [9, 500, 1, 2, 1, 2], [9, 501, 2, 1, 1, 2], [10, 1004, 1, 2, 2, 0], [10, 1005, 2, 2, 1, 0], [10, 1006, 2, 1, 2, 0], [10, 1007, 0, 2, 2, 1], [10, 1008, 0, 1, 2, 2], [10, 1009, 2, 2, 0, 1], [10, 1010, 0, 2, 1, 2], [10, 1011, 2, 0, 2, 1], [10, 1012, 1, 0, 2, 2], [10, 1013, 2, 2, 2, 1], [10, 1014, 1, 2, 0, 2], [10, 1015, 2, 0, 1, 2], [10, 1016, 2, 1, 0, 2], [10, 1017, 1, 2, 2, 2], [11, 2036, 2, 1, 2, 2], [11, 2037, 2, 2, 1, 2], [11, 2038, 0, 2, 2, 0], [11, 2039, 2, 2, 0, 0], [11, 2040, 0, 0, 2, 2], [11, 2041, 2, 0, 2, 0], [11, 2042, 0, 2, 0, 2], [11, 2043, 2, 0, 0, 2], [11, 2044, 2, 2, 2, 2], [11, 2045, 0, 2, 2, 2], [11, 2046, 2, 2, 2, 0], [12, 4094, 2, 2, 0, 2], [12, 4095, 2, 0, 2, 2]];\n\nvar HCB5 = [[1, 0, 0, 0], [4, 8, -1, 0], [4, 9, 1, 0], [4, 10, 0, 1], [4, 11, 0, -1], [5, 24, 1, -1], [5, 25, -1, 1], [5, 26, -1, -1], [5, 27, 1, 1], [7, 112, -2, 0], [7, 113, 0, 2], [7, 114, 2, 0], [7, 115, 0, -2], [8, 232, -2, -1], [8, 233, 2, 1], [8, 234, -1, -2], [8, 235, 1, 2], [8, 236, -2, 1], [8, 237, 2, -1], [8, 238, -1, 2], [8, 239, 1, -2], [8, 240, -3, 0], [8, 241, 3, 0], [8, 242, 0, -3], [8, 243, 0, 3], [9, 488, -3, -1], [9, 489, 1, 3], [9, 490, 3, 1], [9, 491, -1, -3], [9, 492, -3, 1], [9, 493, 3, -1], [9, 494, 1, -3], [9, 495, -1, 3], [9, 496, -2, 2], [9, 497, 2, 2], [9, 498, -2, -2], [9, 499, 2, -2], [10, 1000, -3, -2], [10, 1001, 3, -2], [10, 1002, -2, 3], [10, 1003, 2, -3], [10, 1004, 3, 2], [10, 1005, 2, 3], [10, 1006, -3, 2], [10, 1007, -2, -3], [10, 1008, 0, -4], [10, 1009, -4, 0], [10, 1010, 4, 1], [10, 1011, 4, 0], [11, 2024, -4, -1], [11, 2025, 0, 4], [11, 2026, 4, -1], [11, 2027, -1, -4], [11, 2028, 1, 4], [11, 2029, -1, 4], [11, 2030, -4, 1], [11, 2031, 1, -4], [11, 2032, 3, -3], [11, 2033, -3, -3], [11, 2034, -3, 3], [11, 2035, -2, 4], [11, 2036, -4, -2], [11, 2037, 4, 2], [11, 2038, 2, -4], [11, 2039, 2, 4], [11, 2040, 3, 3], [11, 2041, -4, 2], [12, 4084, -2, -4], [12, 4085, 4, -2], [12, 4086, 3, -4], [12, 4087, -4, -3], [12, 4088, -4, 3], [12, 4089, 3, 4], [12, 4090, -3, 4], [12, 4091, 4, 3], [12, 4092, 4, -3], [12, 4093, -3, -4], [13, 8188, 4, -4], [13, 8189, -4, 4], [13, 8190, 4, 4], [13, 8191, -4, -4]];\n\nvar HCB6 = [[4, 0, 0, 0], [4, 1, 1, 0], [4, 2, 0, -1], [4, 3, 0, 1], [4, 4, -1, 0], [4, 5, 1, 1], [4, 6, -1, 1], [4, 7, 1, -1], [4, 8, -1, -1], [6, 36, 2, -1], [6, 37, 2, 1], [6, 38, -2, 1], [6, 39, -2, -1], [6, 40, -2, 0], [6, 41, -1, 2], [6, 42, 2, 0], [6, 43, 1, -2], [6, 44, 1, 2], [6, 45, 0, -2], [6, 46, -1, -2], [6, 47, 0, 2], [6, 48, 2, -2], [6, 49, -2, 2], [6, 50, -2, -2], [6, 51, 2, 2], [7, 104, -3, 1], [7, 105, 3, 1], [7, 106, 3, -1], [7, 107, -1, 3], [7, 108, -3, -1], [7, 109, 1, 3], [7, 110, 1, -3], [7, 111, -1, -3], [7, 112, 3, 0], [7, 113, -3, 0], [7, 114, 0, -3], [7, 115, 0, 3], [7, 116, 3, 2], [8, 234, -3, -2], [8, 235, -2, 3], [8, 236, 2, 3], [8, 237, 3, -2], [8, 238, 2, -3], [8, 239, -2, -3], [8, 240, -3, 2], [8, 241, 3, 3], [9, 484, 3, -3], [9, 485, -3, -3], [9, 486, -3, 3], [9, 487, 1, -4], [9, 488, -1, -4], [9, 489, 4, 1], [9, 490, -4, 1], [9, 491, -4, -1], [9, 492, 1, 4], [9, 493, 4, -1], [9, 494, -1, 4], [9, 495, 0, -4], [9, 496, -4, 2], [9, 497, -4, -2], [9, 498, 2, 4], [9, 499, -2, -4], [9, 500, -4, 0], [9, 501, 4, 2], [9, 502, 4, -2], [9, 503, -2, 4], [9, 504, 4, 0], [9, 505, 2, -4], [9, 506, 0, 4], [10, 1014, -3, -4], [10, 1015, -3, 4], [10, 1016, 3, -4], [10, 1017, 4, -3], [10, 1018, 3, 4], [10, 1019, 4, 3], [10, 1020, -4, 3], [10, 1021, -4, -3], [11, 2044, 4, 4], [11, 2045, -4, 4], [11, 2046, -4, -4], [11, 2047, 4, -4]];\n\nvar HCB7 = [[1, 0, 0, 0], [3, 4, 1, 0], [3, 5, 0, 1], [4, 12, 1, 1], [6, 52, 2, 1], [6, 53, 1, 2], [6, 54, 2, 0], [6, 55, 0, 2], [7, 112, 3, 1], [7, 113, 1, 3], [7, 114, 2, 2], [7, 115, 3, 0], [7, 116, 0, 3], [8, 234, 2, 3], [8, 235, 3, 2], [8, 236, 1, 4], [8, 237, 4, 1], [8, 238, 1, 5], [8, 239, 5, 1], [8, 240, 3, 3], [8, 241, 2, 4], [8, 242, 0, 4], [8, 243, 4, 0], [9, 488, 4, 2], [9, 489, 2, 5], [9, 490, 5, 2], [9, 491, 0, 5], [9, 492, 6, 1], [9, 493, 5, 0], [9, 494, 1, 6], [9, 495, 4, 3], [9, 496, 3, 5], [9, 497, 3, 4], [9, 498, 5, 3], [9, 499, 2, 6], [9, 500, 6, 2], [9, 501, 1, 7], [10, 1004, 3, 6], [10, 1005, 0, 6], [10, 1006, 6, 0], [10, 1007, 4, 4], [10, 1008, 7, 1], [10, 1009, 4, 5], [10, 1010, 7, 2], [10, 1011, 5, 4], [10, 1012, 6, 3], [10, 1013, 2, 7], [10, 1014, 7, 3], [10, 1015, 6, 4], [10, 1016, 5, 5], [10, 1017, 4, 6], [10, 1018, 3, 7], [11, 2038, 7, 0], [11, 2039, 0, 7], [11, 2040, 6, 5], [11, 2041, 5, 6], [11, 2042, 7, 4], [11, 2043, 4, 7], [11, 2044, 5, 7], [11, 2045, 7, 5], [12, 4092, 7, 6], [12, 4093, 6, 6], [12, 4094, 6, 7], [12, 4095, 7, 7]];\n\nvar HCB8 = [[3, 0, 1, 1], [4, 2, 2, 1], [4, 3, 1, 0], [4, 4, 1, 2], [4, 5, 0, 1], [4, 6, 2, 2], [5, 14, 0, 0], [5, 15, 2, 0], [5, 16, 0, 2], [5, 17, 3, 1], [5, 18, 1, 3], [5, 19, 3, 2], [5, 20, 2, 3], [6, 42, 3, 3], [6, 43, 4, 1], [6, 44, 1, 4], [6, 45, 4, 2], [6, 46, 2, 4], [6, 47, 3, 0], [6, 48, 0, 3], [6, 49, 4, 3], [6, 50, 3, 4], [6, 51, 5, 2], [7, 104, 5, 1], [7, 105, 2, 5], [7, 106, 1, 5], [7, 107, 5, 3], [7, 108, 3, 5], [7, 109, 4, 4], [7, 110, 5, 4], [7, 111, 0, 4], [7, 112, 4, 5], [7, 113, 4, 0], [7, 114, 2, 6], [7, 115, 6, 2], [7, 116, 6, 1], [7, 117, 1, 6], [8, 236, 3, 6], [8, 237, 6, 3], [8, 238, 5, 5], [8, 239, 5, 0], [8, 240, 6, 4], [8, 241, 0, 5], [8, 242, 4, 6], [8, 243, 7, 1], [8, 244, 7, 2], [8, 245, 2, 7], [8, 246, 6, 5], [8, 247, 7, 3], [8, 248, 1, 7], [8, 249, 5, 6], [8, 250, 3, 7], [9, 502, 6, 6], [9, 503, 7, 4], [9, 504, 6, 0], [9, 505, 4, 7], [9, 506, 0, 6], [9, 507, 7, 5], [9, 508, 7, 6], [9, 509, 6, 7], [10, 1020, 5, 7], [10, 1021, 7, 0], [10, 1022, 0, 7], [10, 1023, 7, 7]];\n\nvar HCB9 = [[1, 0, 0, 0], [3, 4, 1, 0], [3, 5, 0, 1], [4, 12, 1, 1], [6, 52, 2, 1], [6, 53, 1, 2], [6, 54, 2, 0], [6, 55, 0, 2], [7, 112, 3, 1], [7, 113, 2, 2], [7, 114, 1, 3], [8, 230, 3, 0], [8, 231, 0, 3], [8, 232, 2, 3], [8, 233, 3, 2], [8, 234, 1, 4], [8, 235, 4, 1], [8, 236, 2, 4], [8, 237, 1, 5], [9, 476, 4, 2], [9, 477, 3, 3], [9, 478, 0, 4], [9, 479, 4, 0], [9, 480, 5, 1], [9, 481, 2, 5], [9, 482, 1, 6], [9, 483, 3, 4], [9, 484, 5, 2], [9, 485, 6, 1], [9, 486, 4, 3], [10, 974, 0, 5], [10, 975, 2, 6], [10, 976, 5, 0], [10, 977, 1, 7], [10, 978, 3, 5], [10, 979, 1, 8], [10, 980, 8, 1], [10, 981, 4, 4], [10, 982, 5, 3], [10, 983, 6, 2], [10, 984, 7, 1], [10, 985, 0, 6], [10, 986, 8, 2], [10, 987, 2, 8], [10, 988, 3, 6], [10, 989, 2, 7], [10, 990, 4, 5], [10, 991, 9, 1], [10, 992, 1, 9], [10, 993, 7, 2], [11, 1988, 6, 0], [11, 1989, 5, 4], [11, 1990, 6, 3], [11, 1991, 8, 3], [11, 1992, 0, 7], [11, 1993, 9, 2], [11, 1994, 3, 8], [11, 1995, 4, 6], [11, 1996, 3, 7], [11, 1997, 0, 8], [11, 1998, 10, 1], [11, 1999, 6, 4], [11, 2000, 2, 9], [11, 2001, 5, 5], [11, 2002, 8, 0], [11, 2003, 7, 0], [11, 2004, 7, 3], [11, 2005, 10, 2], [11, 2006, 9, 3], [11, 2007, 8, 4], [11, 2008, 1, 10], [11, 2009, 7, 4], [11, 2010, 6, 5], [11, 2011, 5, 6], [11, 2012, 4, 8], [11, 2013, 4, 7], [11, 2014, 3, 9], [11, 2015, 11, 1], [11, 2016, 5, 8], [11, 2017, 9, 0], [11, 2018, 8, 5], [12, 4038, 10, 3], [12, 4039, 2, 10], [12, 4040, 0, 9], [12, 4041, 11, 2], [12, 4042, 9, 4], [12, 4043, 6, 6], [12, 4044, 12, 1], [12, 4045, 4, 9], [12, 4046, 8, 6], [12, 4047, 1, 11], [12, 4048, 9, 5], [12, 4049, 10, 4], [12, 4050, 5, 7], [12, 4051, 7, 5], [12, 4052, 2, 11], [12, 4053, 1, 12], [12, 4054, 12, 2], [12, 4055, 11, 3], [12, 4056, 3, 10], [12, 4057, 5, 9], [12, 4058, 6, 7], [12, 4059, 8, 7], [12, 4060, 11, 4], [12, 4061, 0, 10], [12, 4062, 7, 6], [12, 4063, 12, 3], [12, 4064, 10, 0], [12, 4065, 10, 5], [12, 4066, 4, 10], [12, 4067, 6, 8], [12, 4068, 2, 12], [12, 4069, 9, 6], [12, 4070, 9, 7], [12, 4071, 4, 11], [12, 4072, 11, 0], [12, 4073, 6, 9], [12, 4074, 3, 11], [12, 4075, 5, 10], [13, 8152, 8, 8], [13, 8153, 7, 8], [13, 8154, 12, 5], [13, 8155, 3, 12], [13, 8156, 11, 5], [13, 8157, 7, 7], [13, 8158, 12, 4], [13, 8159, 11, 6], [13, 8160, 10, 6], [13, 8161, 4, 12], [13, 8162, 7, 9], [13, 8163, 5, 11], [13, 8164, 0, 11], [13, 8165, 12, 6], [13, 8166, 6, 10], [13, 8167, 12, 0], [13, 8168, 10, 7], [13, 8169, 5, 12], [13, 8170, 7, 10], [13, 8171, 9, 8], [13, 8172, 0, 12], [13, 8173, 11, 7], [13, 8174, 8, 9], [13, 8175, 9, 9], [13, 8176, 10, 8], [13, 8177, 7, 11], [13, 8178, 12, 7], [13, 8179, 6, 11], [13, 8180, 8, 11], [13, 8181, 11, 8], [13, 8182, 7, 12], [13, 8183, 6, 12], [14, 16368, 8, 10], [14, 16369, 10, 9], [14, 16370, 8, 12], [14, 16371, 9, 10], [14, 16372, 9, 11], [14, 16373, 9, 12], [14, 16374, 10, 11], [14, 16375, 12, 9], [14, 16376, 10, 10], [14, 16377, 11, 9], [14, 16378, 12, 8], [14, 16379, 11, 10], [14, 16380, 12, 10], [14, 16381, 12, 11], [15, 32764, 10, 12], [15, 32765, 11, 11], [15, 32766, 11, 12], [15, 32767, 12, 12]];\n\nvar HCB10 = [[4, 0, 1, 1], [4, 1, 1, 2], [4, 2, 2, 1], [5, 6, 2, 2], [5, 7, 1, 0], [5, 8, 0, 1], [5, 9, 1, 3], [5, 10, 3, 2], [5, 11, 3, 1], [5, 12, 2, 3], [5, 13, 3, 3], [6, 28, 2, 0], [6, 29, 0, 2], [6, 30, 2, 4], [6, 31, 4, 2], [6, 32, 1, 4], [6, 33, 4, 1], [6, 34, 0, 0], [6, 35, 4, 3], [6, 36, 3, 4], [6, 37, 3, 0], [6, 38, 0, 3], [6, 39, 4, 4], [6, 40, 2, 5], [6, 41, 5, 2], [7, 84, 1, 5], [7, 85, 5, 1], [7, 86, 5, 3], [7, 87, 3, 5], [7, 88, 5, 4], [7, 89, 4, 5], [7, 90, 6, 2], [7, 91, 2, 6], [7, 92, 6, 3], [7, 93, 4, 0], [7, 94, 6, 1], [7, 95, 0, 4], [7, 96, 1, 6], [7, 97, 3, 6], [7, 98, 5, 5], [7, 99, 6, 4], [7, 100, 4, 6], [8, 202, 6, 5], [8, 203, 7, 2], [8, 204, 3, 7], [8, 205, 2, 7], [8, 206, 5, 6], [8, 207, 8, 2], [8, 208, 7, 3], [8, 209, 5, 0], [8, 210, 7, 1], [8, 211, 0, 5], [8, 212, 8, 1], [8, 213, 1, 7], [8, 214, 8, 3], [8, 215, 7, 4], [8, 216, 4, 7], [8, 217, 2, 8], [8, 218, 6, 6], [8, 219, 7, 5], [8, 220, 1, 8], [8, 221, 3, 8], [8, 222, 8, 4], [8, 223, 4, 8], [8, 224, 5, 7], [8, 225, 8, 5], [8, 226, 5, 8], [9, 454, 7, 6], [9, 455, 6, 7], [9, 456, 9, 2], [9, 457, 6, 0], [9, 458, 6, 8], [9, 459, 9, 3], [9, 460, 3, 9], [9, 461, 9, 1], [9, 462, 2, 9], [9, 463, 0, 6], [9, 464, 8, 6], [9, 465, 9, 4], [9, 466, 4, 9], [9, 467, 10, 2], [9, 468, 1, 9], [9, 469, 7, 7], [9, 470, 8, 7], [9, 471, 9, 5], [9, 472, 7, 8], [9, 473, 10, 3], [9, 474, 5, 9], [9, 475, 10, 4], [9, 476, 2, 10], [9, 477, 10, 1], [9, 478, 3, 10], [9, 479, 9, 6], [9, 480, 6, 9], [9, 481, 8, 0], [9, 482, 4, 10], [9, 483, 7, 0], [9, 484, 11, 2], [10, 970, 7, 9], [10, 971, 11, 3], [10, 972, 10, 6], [10, 973, 1, 10], [10, 974, 11, 1], [10, 975, 9, 7], [10, 976, 0, 7], [10, 977, 8, 8], [10, 978, 10, 5], [10, 979, 3, 11], [10, 980, 5, 10], [10, 981, 8, 9], [10, 982, 11, 5], [10, 983, 0, 8], [10, 984, 11, 4], [10, 985, 2, 11], [10, 986, 7, 10], [10, 987, 6, 10], [10, 988, 10, 7], [10, 989, 4, 11], [10, 990, 1, 11], [10, 991, 12, 2], [10, 992, 9, 8], [10, 993, 12, 3], [10, 994, 11, 6], [10, 995, 5, 11], [10, 996, 12, 4], [10, 997, 11, 7], [10, 998, 12, 5], [10, 999, 3, 12], [10, 1000, 6, 11], [10, 1001, 9, 0], [10, 1002, 10, 8], [10, 1003, 10, 0], [10, 1004, 12, 1], [10, 1005, 0, 9], [10, 1006, 4, 12], [10, 1007, 9, 9], [10, 1008, 12, 6], [10, 1009, 2, 12], [10, 1010, 8, 10], [11, 2022, 9, 10], [11, 2023, 1, 12], [11, 2024, 11, 8], [11, 2025, 12, 7], [11, 2026, 7, 11], [11, 2027, 5, 12], [11, 2028, 6, 12], [11, 2029, 10, 9], [11, 2030, 8, 11], [11, 2031, 12, 8], [11, 2032, 0, 10], [11, 2033, 7, 12], [11, 2034, 11, 0], [11, 2035, 10, 10], [11, 2036, 11, 9], [11, 2037, 11, 10], [11, 2038, 0, 11], [11, 2039, 11, 11], [11, 2040, 9, 11], [11, 2041, 10, 11], [11, 2042, 12, 0], [11, 2043, 8, 12], [12, 4088, 12, 9], [12, 4089, 10, 12], [12, 4090, 9, 12], [12, 4091, 11, 12], [12, 4092, 12, 11], [12, 4093, 0, 12], [12, 4094, 12, 10], [12, 4095, 12, 12]];\n\nvar HCB11 = [[4, 0, 0, 0], [4, 1, 1, 1], [5, 4, 16, 16], [5, 5, 1, 0], [5, 6, 0, 1], [5, 7, 2, 1], [5, 8, 1, 2], [5, 9, 2, 2], [6, 20, 1, 3], [6, 21, 3, 1], [6, 22, 3, 2], [6, 23, 2, 0], [6, 24, 2, 3], [6, 25, 0, 2], [6, 26, 3, 3], [7, 54, 4, 1], [7, 55, 1, 4], [7, 56, 4, 2], [7, 57, 2, 4], [7, 58, 4, 3], [7, 59, 3, 4], [7, 60, 3, 0], [7, 61, 0, 3], [7, 62, 5, 1], [7, 63, 5, 2], [7, 64, 2, 5], [7, 65, 4, 4], [7, 66, 1, 5], [7, 67, 5, 3], [7, 68, 3, 5], [7, 69, 5, 4], [8, 140, 4, 5], [8, 141, 6, 2], [8, 142, 2, 6], [8, 143, 6, 1], [8, 144, 6, 3], [8, 145, 3, 6], [8, 146, 1, 6], [8, 147, 4, 16], [8, 148, 3, 16], [8, 149, 16, 5], [8, 150, 16, 3], [8, 151, 16, 4], [8, 152, 6, 4], [8, 153, 16, 6], [8, 154, 4, 0], [8, 155, 4, 6], [8, 156, 0, 4], [8, 157, 2, 16], [8, 158, 5, 5], [8, 159, 5, 16], [8, 160, 16, 7], [8, 161, 16, 2], [8, 162, 16, 8], [8, 163, 2, 7], [8, 164, 7, 2], [8, 165, 3, 7], [8, 166, 6, 5], [8, 167, 5, 6], [8, 168, 6, 16], [8, 169, 16, 10], [8, 170, 7, 3], [8, 171, 7, 1], [8, 172, 16, 9], [8, 173, 7, 16], [8, 174, 1, 16], [8, 175, 1, 7], [8, 176, 4, 7], [8, 177, 16, 11], [8, 178, 7, 4], [8, 179, 16, 12], [8, 180, 8, 16], [8, 181, 16, 1], [8, 182, 6, 6], [8, 183, 9, 16], [8, 184, 2, 8], [8, 185, 5, 7], [8, 186, 10, 16], [8, 187, 16, 13], [8, 188, 8, 3], [8, 189, 8, 2], [8, 190, 3, 8], [8, 191, 5, 0], [8, 192, 16, 14], [8, 193, 11, 16], [8, 194, 7, 5], [8, 195, 4, 8], [8, 196, 6, 7], [8, 197, 7, 6], [8, 198, 0, 5], [9, 398, 8, 4], [9, 399, 16, 15], [9, 400, 12, 16], [9, 401, 1, 8], [9, 402, 8, 1], [9, 403, 14, 16], [9, 404, 5, 8], [9, 405, 13, 16], [9, 406, 3, 9], [9, 407, 8, 5], [9, 408, 7, 7], [9, 409, 2, 9], [9, 410, 8, 6], [9, 411, 9, 2], [9, 412, 9, 3], [9, 413, 15, 16], [9, 414, 4, 9], [9, 415, 6, 8], [9, 416, 6, 0], [9, 417, 9, 4], [9, 418, 5, 9], [9, 419, 8, 7], [9, 420, 7, 8], [9, 421, 1, 9], [9, 422, 10, 3], [9, 423, 0, 6], [9, 424, 10, 2], [9, 425, 9, 1], [9, 426, 9, 5], [9, 427, 4, 10], [9, 428, 2, 10], [9, 429, 9, 6], [9, 430, 3, 10], [9, 431, 6, 9], [9, 432, 10, 4], [9, 433, 8, 8], [9, 434, 10, 5], [9, 435, 9, 7], [9, 436, 11, 3], [9, 437, 1, 10], [9, 438, 7, 0], [9, 439, 10, 6], [9, 440, 7, 9], [9, 441, 3, 11], [9, 442, 5, 10], [9, 443, 10, 1], [9, 444, 4, 11], [9, 445, 11, 2], [9, 446, 13, 2], [9, 447, 6, 10], [9, 448, 13, 3], [9, 449, 2, 11], [9, 450, 16, 0], [9, 451, 5, 11], [9, 452, 11, 5], [10, 906, 11, 4], [10, 907, 9, 8], [10, 908, 7, 10], [10, 909, 8, 9], [10, 910, 0, 16], [10, 911, 4, 13], [10, 912, 0, 7], [10, 913, 3, 13], [10, 914, 11, 6], [10, 915, 13, 1], [10, 916, 13, 4], [10, 917, 12, 3], [10, 918, 2, 13], [10, 919, 13, 5], [10, 920, 8, 10], [10, 921, 6, 11], [10, 922, 10, 8], [10, 923, 10, 7], [10, 924, 14, 2], [10, 925, 12, 4], [10, 926, 1, 11], [10, 927, 4, 12], [10, 928, 11, 1], [10, 929, 3, 12], [10, 930, 1, 13], [10, 931, 12, 2], [10, 932, 7, 11], [10, 933, 3, 14], [10, 934, 5, 12], [10, 935, 5, 13], [10, 936, 14, 4], [10, 937, 4, 14], [10, 938, 11, 7], [10, 939, 14, 3], [10, 940, 12, 5], [10, 941, 13, 6], [10, 942, 12, 6], [10, 943, 8, 0], [10, 944, 11, 8], [10, 945, 2, 12], [10, 946, 9, 9], [10, 947, 14, 5], [10, 948, 6, 13], [10, 949, 10, 10], [10, 950, 15, 2], [10, 951, 8, 11], [10, 952, 9, 10], [10, 953, 14, 6], [10, 954, 10, 9], [10, 955, 5, 14], [10, 956, 11, 9], [10, 957, 14, 1], [10, 958, 2, 14], [10, 959, 6, 12], [10, 960, 1, 12], [10, 961, 13, 8], [10, 962, 0, 8], [10, 963, 13, 7], [10, 964, 7, 12], [10, 965, 12, 7], [10, 966, 7, 13], [10, 967, 15, 3], [10, 968, 12, 1], [10, 969, 6, 14], [10, 970, 2, 15], [10, 971, 15, 5], [10, 972, 15, 4], [10, 973, 1, 14], [10, 974, 9, 11], [10, 975, 4, 15], [10, 976, 14, 7], [10, 977, 8, 13], [10, 978, 13, 9], [10, 979, 8, 12], [10, 980, 5, 15], [10, 981, 3, 15], [10, 982, 10, 11], [10, 983, 11, 10], [10, 984, 12, 8], [10, 985, 15, 6], [10, 986, 15, 7], [10, 987, 8, 14], [10, 988, 15, 1], [10, 989, 7, 14], [10, 990, 9, 0], [10, 991, 0, 9], [10, 992, 9, 13], [10, 993, 9, 12], [10, 994, 12, 9], [10, 995, 14, 8], [10, 996, 10, 13], [10, 997, 14, 9], [10, 998, 12, 10], [10, 999, 6, 15], [10, 1000, 7, 15], [11, 2002, 9, 14], [11, 2003, 15, 8], [11, 2004, 11, 11], [11, 2005, 11, 14], [11, 2006, 1, 15], [11, 2007, 10, 12], [11, 2008, 10, 14], [11, 2009, 13, 11], [11, 2010, 13, 10], [11, 2011, 11, 13], [11, 2012, 11, 12], [11, 2013, 8, 15], [11, 2014, 14, 11], [11, 2015, 13, 12], [11, 2016, 12, 13], [11, 2017, 15, 9], [11, 2018, 14, 10], [11, 2019, 10, 0], [11, 2020, 12, 11], [11, 2021, 9, 15], [11, 2022, 0, 10], [11, 2023, 12, 12], [11, 2024, 11, 0], [11, 2025, 12, 14], [11, 2026, 10, 15], [11, 2027, 13, 13], [11, 2028, 0, 13], [11, 2029, 14, 12], [11, 2030, 15, 10], [11, 2031, 15, 11], [11, 2032, 11, 15], [11, 2033, 14, 13], [11, 2034, 13, 0], [11, 2035, 0, 11], [11, 2036, 13, 14], [11, 2037, 15, 12], [11, 2038, 15, 13], [11, 2039, 12, 15], [11, 2040, 14, 0], [11, 2041, 14, 14], [11, 2042, 13, 15], [11, 2043, 12, 0], [11, 2044, 14, 15], [12, 4090, 0, 14], [12, 4091, 0, 12], [12, 4092, 15, 14], [12, 4093, 15, 0], [12, 4094, 0, 15], [12, 4095, 15, 15]];\n\nvar HCB_SF = [[1, 0, 60], [3, 4, 59], [4, 10, 61], [4, 11, 58], [4, 12, 62], [5, 26, 57], [5, 27, 63], [6, 56, 56], [6, 57, 64], [6, 58, 55], [6, 59, 65], [7, 120, 66], [7, 121, 54], [7, 122, 67], [8, 246, 53], [8, 247, 68], [8, 248, 52], [8, 249, 69], [8, 250, 51], [9, 502, 70], [9, 503, 50], [9, 504, 49], [9, 505, 71], [10, 1012, 72], [10, 1013, 48], [10, 1014, 73], [10, 1015, 47], [10, 1016, 74], [10, 1017, 46], [11, 2036, 76], [11, 2037, 75], [11, 2038, 77], [11, 2039, 78], [11, 2040, 45], [11, 2041, 43], [12, 4084, 44], [12, 4085, 79], [12, 4086, 42], [12, 4087, 41], [12, 4088, 80], [12, 4089, 40], [13, 8180, 81], [13, 8181, 39], [13, 8182, 82], [13, 8183, 38], [13, 8184, 83], [14, 16370, 37], [14, 16371, 35], [14, 16372, 85], [14, 16373, 33], [14, 16374, 36], [14, 16375, 34], [14, 16376, 84], [14, 16377, 32], [15, 32756, 87], [15, 32757, 89], [15, 32758, 30], [15, 32759, 31], [16, 65520, 86], [16, 65521, 29], [16, 65522, 26], [16, 65523, 27], [16, 65524, 28], [16, 65525, 24], [16, 65526, 88], [17, 131054, 25], [17, 131055, 22], [17, 131056, 23], [18, 262114, 90], [18, 262115, 21], [18, 262116, 19], [18, 262117, 3], [18, 262118, 1], [18, 262119, 2], [18, 262120, 0], [19, 524242, 98], [19, 524243, 99], [19, 524244, 100], [19, 524245, 101], [19, 524246, 102], [19, 524247, 117], [19, 524248, 97], [19, 524249, 91], [19, 524250, 92], [19, 524251, 93], [19, 524252, 94], [19, 524253, 95], [19, 524254, 96], [19, 524255, 104], [19, 524256, 111], [19, 524257, 112], [19, 524258, 113], [19, 524259, 114], [19, 524260, 115], [19, 524261, 116], [19, 524262, 110], [19, 524263, 105], [19, 524264, 106], [19, 524265, 107], [19, 524266, 108], [19, 524267, 109], [19, 524268, 118], [19, 524269, 6], [19, 524270, 8], [19, 524271, 9], [19, 524272, 10], [19, 524273, 5], [19, 524274, 103], [19, 524275, 120], [19, 524276, 119], [19, 524277, 4], [19, 524278, 7], [19, 524279, 15], [19, 524280, 16], [19, 524281, 18], [19, 524282, 20], [19, 524283, 17], [19, 524284, 11], [19, 524285, 12], [19, 524286, 14], [19, 524287, 13]];\n\nvar CODEBOOKS = [HCB1, HCB2, HCB3, HCB4, HCB5, HCB6, HCB7, HCB8, HCB9, HCB10, HCB11];\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function ScaleFactorTable() {\n        (0, _classCallCheck3.default)(this, ScaleFactorTable);\n    }\n\n    (0, _createClass3.default)(ScaleFactorTable, null, [{\n        key: \"SCALEFACTOR_TABLE\",\n        get: function get() {\n            return SCALEFACTOR_TABLE;\n        }\n    }]);\n    return ScaleFactorTable;\n}();\n\nvar SCALEFACTOR_TABLE = function () {\n    var table = new Float32Array(428);\n\n    for (var i = 0; i < 428; i++) {\n        table[i] = Math.pow(2, (i - 200) / 4);\n    }\n\n    return table;\n}();\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    (0, _createClass3.default)(TNS, null, [{\n        key: \"TNS_MAX_ORDER\",\n        get: function get() {\n            return 20;\n        }\n    }, {\n        key: \"SHORT_BITS\",\n        get: function get() {\n            return [1, 4, 3];\n        }\n    }, {\n        key: \"LONG_BITS\",\n        get: function get() {\n            return [2, 6, 5];\n        }\n    }]);\n\n    function TNS() {\n        (0, _classCallCheck3.default)(this, TNS);\n\n        // private int[] nFilt = new int[8];\n        this.nFilt = new Int32Array(8).fill(0);\n\n        // private int[][] order = new int[8][4];\n        this.order = new Int32Array(8 * 4).fill(0);\n    }\n\n    (0, _createClass3.default)(TNS, [{\n        key: \"decode\",\n        value: function decode(bitStream, info) {\n            var windowCount = info.getWindowCount();\n\n            var bits = info.isEightShortFrame() ? TNS.SHORT_BITS : TNS.LONG_BITS;\n\n            var order = this.order,\n                nFilt = this.nFilt;\n\n            var w = void 0,\n                i = void 0,\n                filt = void 0,\n                coefLen = void 0,\n                coefRes = void 0,\n                coefCompress = void 0,\n                tmp = void 0;\n\n            for (w = 0; w < windowCount; w++) {\n                if ((nFilt[w] = bitStream.readBits(bits[0])) !== 0) {\n                    coefRes = bitStream.readBit();\n\n                    for (filt = 0; filt < nFilt[w]; filt++) {\n                        /*this.length[w][filt] =*/bitStream.readBits(bits[1]);\n\n                        if ((order[w * 8 + filt] = bitStream.readBits(bits[2])) > 20) throw \"TNS filter out of range: \" + order[w * 8 + filt];else if (order[w * 8 + filt] !== 0) {\n                            /*this.direction[w][filt] = !!*/bitStream.readBit();\n                            coefCompress = bitStream.readBit();\n                            coefLen = coefRes + 3 - coefCompress;\n                            tmp = 2 * coefCompress + coefRes;\n\n                            for (i = 0; i < order[w * 8 + filt]; i++) {\n                                // this.coef[w][filt][i] = TNS_TABLES[tmp][bitStream.readBits(coefLen)];\n                                bitStream.readBits(coefLen);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"process\",\n        value: function process(ics, spec, sf, decode) {\n            // todo\n        }\n    }]);\n    return TNS;\n}();\n\nvar TNS_COEF_1_3 = new Float32Array([0.00000000, -0.43388373, 0.64278758, 0.34202015]);\n\nvar TNS_COEF_0_3 = new Float32Array([0.00000000, -0.43388373, -0.78183150, -0.97492790, 0.98480773, 0.86602539, 0.64278758, 0.34202015]);\n\nvar TNS_COEF_1_4 = new Float32Array([0.00000000, -0.20791170, -0.40673664, -0.58778524, 0.67369562, 0.52643216, 0.36124167, 0.18374951]);\n\nvar TNS_COEF_0_4 = new Float32Array([0.00000000, -0.20791170, -0.40673664, -0.58778524, -0.74314481, -0.86602539, -0.95105654, -0.99452192, 0.99573416, 0.96182561, 0.89516330, 0.79801720, 0.67369562, 0.52643216, 0.36124167, 0.18374951]);\n\nvar TNS_TABLES = [TNS_COEF_0_3, TNS_COEF_0_4, TNS_COEF_1_3, TNS_COEF_1_4];\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function IQT() {\n        (0, _classCallCheck3.default)(this, IQT);\n    }\n\n    (0, _createClass3.default)(IQT, null, [{\n        key: \"IQ_TABLE\",\n        get: function get() {\n            return IQ_TABLE;\n        }\n    }]);\n    return IQT;\n}();\n\nvar IQ_TABLE = new Float32Array([0.0, 1.0, 2.519842099789746, 4.3267487109222245, 6.3496042078727974, 8.549879733383484, 10.902723556992836, 13.390518279406722, 15.999999999999998, 18.720754407467133, 21.544346900318835, 24.463780996262464, 27.47314182127996, 30.567350940369842, 33.74199169845321, 36.993181114957046, 40.317473596635935, 43.71178704118999, 47.173345095760126, 50.69963132571694, 54.28835233189812, 57.93740770400352, 61.6448652744185, 65.40894053658599, 69.22797937475559, 73.10044345532164, 77.02489777859162, 80.99999999999997, 85.02449121251853, 89.09718794488955, 93.21697517861574, 97.38280022413316, 101.59366732596474, 105.84863288986224, 110.14680124343441, 114.4873208566006, 118.86938096020653, 123.29220851090024, 127.75506545836058, 132.25724627755247, 136.79807573413572, 141.3769068556919, 145.99311908523086, 150.6461165966291, 155.33532675434674, 160.0601987020528, 164.8202020667335, 169.6148257665186, 174.44357691188537, 179.30597979112554, 184.20157493201927, 189.12991823257562, 194.09058015449685, 199.08314497371674, 204.1072100829694, 209.16238534187647, 214.24829247050752, 219.36456448277784, 224.51084515641213, 229.6867885365223, 234.89205847013176, 240.1263281692325, 245.38927980018508, 250.6806040974726, 255.99999999999991, 261.3471743082887, 266.7218413610645, 272.12372272986045, 277.5525469303796, 283.0080491494619, 288.4899709865989, 293.99806020902247, 299.5320705194741, 305.0917613358298, 310.67689758182206, 316.28724948815585, 321.92259240337177, 327.58270661385535, 333.2673771724374, 338.97639373507025, 344.70955040510125, 350.46664558470013, 356.2474818330261, 362.0518657307514, 367.8796077505826, 373.7305221334451, 379.60442677002084, 385.501143087346, 391.42049594019943, 397.3623135070237, 403.32642719014467, 409.3126715200626, 415.320884063608, 421.35090533576465, 427.4025787149762, 433.4757503617617, 439.5702691404793, 445.6859865440827, 451.8227566217276, 457.9804359090913, 464.15888336127773, 470.35796028818726, 476.5775302922363, 482.81745920832043, 489.0776150459174, 495.3578679332358, 501.6580900633169, 507.9781556420037, 514.3179408376965, 520.6773237328167, 527.056184276906, 533.4544042412917, 539.8718671752513, 546.308458363615, 552.7640647857461, 559.2385750758419, 565.7318794845041, 572.2438698415234, 578.7744395198338, 585.3234834005884, 591.8908978393126, 598.4765806330926, 605.0804309887604, 611.7023494920364, 618.3422380775919, 624.9999999999998, 631.6755398055375, 638.3687633048116, 645.0795775461748, 651.8078907899041, 658.553612483115, 665.3166532353836, 672.0969247950522, 678.8943400261944, 685.7088128862142, 692.540258404062, 699.3885926590398, 706.2537327601806, 713.1355968261797, 720.0341039658604, 726.9491742591542, 733.8807287385821, 740.8286893712154, 747.7929790411054, 754.7735215321619, 761.7702415114704, 768.7830645130296, 775.811916921899, 782.8567259587425, 789.9174196647544, 796.993926886958, 804.0861772638627, 811.194101211471, 818.3176299096223, 825.4566952886656, 832.6112300164486, 839.781167485616, 846.9664418012055, 854.1669877685351, 861.3827408813713, 868.6136373103698, 875.859613891782, 883.1206081164196, 890.3965581188676, 897.6874026669418, 904.9930811513817, 912.3135335757719, 919.6487005466876, 926.9985232640562, 934.3629435117291, 941.7419036482586, 949.1353465978742, 956.5432158416521, 963.9654554088735, 971.4020098685654, 978.8528243212218, 986.3178443906959, 993.7970162162635, 1001.29028644485, 1008.797602223418, 1016.3189111915103, 1023.8541614739464, 1031.4033016736653, 1038.9662808647138, 1046.5430485853758, 1054.1335548314366, 1061.7377500495838, 1069.3555851309357, 1076.9870114046978, 1084.6319806319443, 1092.2904449995174, 1099.9623571140482, 1107.6476699960892, 1115.3463370743607, 1123.058312180106, 1130.783549541554, 1138.5220037784857, 1146.273629896901, 1154.0383832837879, 1161.816219701986, 1169.607095285146, 1177.4109665327805, 1185.2277903054078, 1193.0575238197798, 1200.9001246442, 1208.7555506939248, 1216.6237602266442, 1224.5047118380478, 1232.3983644574657, 1240.3046773435874, 1248.2236100802568, 1256.1551225723395, 1264.099175041662, 1272.0557280230228, 1280.024742360269, 1288.0061792024444, 1295.9999999999995, 1304.006166501068, 1312.0246407478062, 1320.055385072793, 1328.0983620954903, 1336.153534718765, 1344.2208661254647, 1352.3003197750522, 1360.3918594002962, 1368.4954490040145, 1376.6110528558709, 1384.7386354892244, 1392.8781616980295, 1401.0295965337855, 1409.1929053025353, 1417.368053561912, 1425.5550071182324, 1433.7537320236374, 1441.9641945732744, 1450.186361302528, 1458.4201989842913, 1466.6656746262797, 1474.9227554683875, 1483.1914089800841, 1491.4716028578516, 1499.7633050226596, 1508.0664836174794, 1516.3811070048375, 1524.7071437644029, 1533.044562690613, 1541.3933327903342, 1549.753423280558, 1558.1248035861304, 1566.507443337515, 1574.9013123685909, 1583.3063807144795, 1591.722618609407, 1600.149996484594, 1608.58848496618, 1617.0380548731737, 1625.4986772154357, 1633.9703231916887, 1642.4529641875577, 1650.9465717736346, 1659.4511177035752, 1667.9665739122186, 1676.4929125137353, 1685.0301057998013, 1693.5781262377957, 1702.136946469027, 1710.7065393069795, 1719.286877735588, 1727.8779349075323, 1736.4796841425596, 1745.0920989258252, 1753.7151529062583, 1762.3488198949503, 1770.993073863563, 1779.6478889427597, 1788.3132394206564, 1796.9890997412947, 1805.6754445031333, 1814.3722484575621, 1823.0794865074322, 1831.7971337056094, 1840.5251652535437, 1849.263556499858, 1858.0122829389563, 1866.7713202096493, 1875.5406440937966, 1884.3202305149687, 1893.110055537124, 1901.9100953633042, 1910.7203263343454, 1919.5407249276057, 1928.3712677557098, 1937.2119315653083, 1946.0626932358525, 1954.923529778386, 1963.79441833435, 1972.6753361744036, 1981.5662606972594, 1990.467169428533, 1999.378040019607, 2008.2988502465078, 2017.2295780087982, 2026.1702013284819, 2035.1206983489212, 2044.0810473337688, 2053.0512266659125, 2062.031214846431, 2071.0209904935646, 2080.020532341696, 2089.0298192403443, 2098.0488301531714, 2107.0775441569995, 2116.115940440839, 2125.1639983049317, 2134.2216971597995, 2143.2890165253098, 2152.3659360297484, 2161.452435408903, 2170.5484945051617, 2179.6540932666144, 2188.769211746171, 2197.893830100689, 2207.0279285901042, 2216.171487576584, 2225.324487523676, 2234.486908995478, 2243.65873265581, 2252.839939267398, 2262.03050969107, 2271.2304248849537, 2280.4396659036897, 2289.6582138976523, 2298.8860501121762, 2308.1231558867926, 2317.3695126544767, 2326.6251019409005, 2335.8899053636933, 2345.163904631713, 2354.4470815443233, 2363.739417990679, 2373.0408959490205, 2382.351497485973, 2391.671204755856, 2400.999999999999, 2410.337865546065, 2419.6847838073813, 2429.0407372822747, 2438.405708553419, 2447.779680287186, 2457.162635233001, 2466.554556222711, 2475.955426169957, 2485.3652280695474, 2494.7839449968487, 2504.2115601071737, 2513.648056635179, 2523.0934178942675, 2532.5476272760025, 2542.010668249519, 2551.482524360948, 2560.963179232844, 2570.4526165636184, 2579.950820126979, 2589.4577737713744, 2598.973461419446, 2608.4978670674823, 2618.0309747848837, 2627.572768713626, 2637.1232330677353, 2646.6823521327647, 2656.250110265277, 2665.826491892333, 2675.4114815109842, 2685.0050636877722, 2694.6072230582295, 2704.2179443263894, 2713.8372122642972, 2723.465011711528, 2733.1013275747096, 2742.7461448270483, 2752.39944850786, 2762.0612237221085, 2771.731455639942, 2781.4101294962406, 2791.097230590165, 2800.7927442847094, 2810.496656006259, 2820.208951244152, 2829.9296155502466, 2839.6586345384894, 2849.395993884492, 2859.1416793251065, 2868.8956766580086, 2878.6579717412847, 2888.4285504930212, 2898.2073988908974, 2907.9945029717837, 2917.789848831344, 2927.5934226236377, 2937.4052105607307, 2947.225198912308, 2957.053374005286, 2966.8897222234364, 2976.734230007005, 2986.5868838523397, 2996.4476703115197, 3006.316575991989, 3016.193587556191, 3026.078691721209, 3035.971875258411, 3045.8731249930906, 3055.7824278041207, 3065.699770623604, 3075.6251404365285, 3085.5585242804245, 3095.49990924503, 3105.449282471949, 3115.4066311543256, 3125.371942536509, 3135.3452039137287, 3145.3264026317715, 3155.3155260866592, 3165.3125617243295, 3175.3174970403234, 3185.330319579468, 3195.35101693557, 3205.379576751108, 3215.4159867169246, 3225.460234571929, 3235.5123081027928, 3245.572195143656, 3255.63988357583, 3265.7153613275095, 3275.7986163734795, 3285.889636734829, 3295.9884104786665, 3306.0949257178395, 3316.2091706106517, 3326.331133360588, 3336.4608022160382, 3346.598165470023, 3356.7432114599264, 3366.8959285672245, 3377.056305217221, 3387.2243298787826, 3397.3999910640764, 3407.5832773283128, 3417.7741772694862, 3427.9726795281194, 3438.1787727870123, 3448.3924457709873, 3458.6136872466445, 3468.842486022111, 3479.0788309467976, 3489.3227109111554, 3499.5741148464344, 3509.8330317244445, 3520.0994505573185, 3530.373360397275, 3540.6547503363886, 3550.9436095063534, 3561.239927078258, 3571.543692262354, 3581.854894307831, 3592.1735225025936, 3602.4995661730372, 3612.8330146838275, 3623.1738574376814, 3633.52208387515, 3643.877683474403, 3654.240645751014, 3664.6109602577494, 3674.9886165843564, 3685.3736043573545, 3695.7659132398294, 3706.165532931225, 3716.57245316714, 3726.986663719126, 3737.4081543944876, 3747.836915036078, 3758.272935522107, 3768.716205765941, 3779.1667157159077, 3789.6244553551055, 3800.089414701208, 3810.5615838062768, 3821.0409527565694, 3831.5275116723533, 3842.0212507077194, 3852.522160050396, 3863.0302299215673, 3873.5454505756893, 3884.067812300311, 3894.597305415892, 3905.1339202756285, 3915.677647265273, 3926.2284768029604, 3936.786399339034, 3947.3514053558706, 3957.9234853677135, 3968.502629920497, 3979.0888295916798, 3989.6820749900776, 4000.2823567556948, 4010.8896655595613, 4021.5039921035655, 4032.1253271202945, 4042.7536613728694, 4053.3889856547858, 4064.031290789755, 4074.680567631545, 4085.336807063822, 4095.999999999998, 4106.670137383071, 4117.347210185475, 4128.031209408926, 4138.722126084268, 4149.419951271327, 4160.124676058758, 4170.836291563898, 4181.554788932618, 4192.280159339177, 4203.012393986074, 4213.75148410391, 4224.497420951238, 4235.250195814426, 4246.0098000075095, 4256.776224872057, 4267.549461777031, 4278.329502118642, 4289.11633732022, 4299.909958832071, 4310.7103581313495, 4321.517526721914, 4332.3314561342, 4343.152137925088, 4353.979563677767, 4364.813725001605, 4375.654613532022, 4386.502220930359, 4397.356538883747, 4408.217559104982, 4419.085273332402, 4429.959673329753, 4440.840750886073, 4451.72849781556, 4462.622905957458, 4473.523967175923, 4484.431673359913, 4495.346016423058, 4506.26698830355, 4517.194580964012, 4528.128786391389, 4539.069596596828, 4550.017003615559, 4560.970999506781, 4571.931576353546, 4582.898726262647, 4593.8724413645, 4604.852713813035, 4615.839535785582, 4626.832899482757, 4637.832797128359, 4648.839220969251, 4659.852163275256, 4670.871616339047, 4681.897572476039, 4692.930024024284, 4703.9689633443595, 4715.014382819267, 4726.0662748543255, 4737.124631877068, 4748.189446337137, 4759.26071070618, 4770.338417477749, 4781.422559167199, 4792.513128311585, 4803.610117469561, 4814.713519221285, 4825.823326168315, 4836.93953093351, 4848.062126160935, 4859.191104515763, 4870.326458684178, 4881.468181373277, 4892.616265310977, 4903.770703245919, 4914.931487947375, 4926.098612205151, 4937.272068829496, 4948.451850651012, 4959.637950520555, 4970.830361309152, 4982.029075907904, 4993.234087227897, 5004.445388200115, 5015.662971775347, 5026.886830924101, 5038.116958636513, 5049.353347922266, 5060.595991810493, 5071.8448833497005, 5083.100015607673, 5094.3613816714, 5105.628974646975, 5116.902787659525, 5128.18281385312, 5139.469046390692, 5150.761478453947, 5162.060103243293, 5173.364913977747, 5184.675903894859, 5195.993066250632, 5207.316394319439, 5218.645881393944, 5229.981520785022, 5241.323305821685, 5252.671229850992, 5264.025286237983, 5275.385468365595, 5286.751769634588, 5298.124183463464, 5309.502703288395, 5320.887322563145, 5332.278034758998, 5343.674833364676, 5355.077711886272, 5366.486663847172, 5377.901682787985, 5389.3227622664635, 5400.749895857437, 5412.183077152737, 5423.622299761123, 5435.067557308219, 5446.518843436432, 5457.976151804887, 5469.439476089359, 5480.908809982197, 5492.384147192261, 5503.8654814448455, 5515.35280648162, 5526.846116060552, 5538.345403955847, 5549.850663957874, 5561.361889873103, 5572.879075524037, 5584.402214749145, 5595.9313014027975, 5607.466329355201, 5619.00729249233, 5630.554184715866, 5642.106999943128, 5653.665732107017, 5665.230375155943, 5676.8009230537655, 5688.377369779733, 5699.959709328416, 5711.547935709647, 5723.142042948459, 5734.742025085021, 5746.347876174581, 5757.959590287402, 5769.577161508701, 5781.200583938591, 5792.829851692021, 5804.464958898715, 5816.1058997031105, 5827.7526682643065, 5839.405258755998, 5851.06366536642, 5862.727882298291, 5874.397903768755, 5886.07372400932, 5897.755337265809, 5909.442737798296, 5921.135919881051, 5932.834877802487, 5944.539605865103, 5956.250098385426, 5967.966349693957, 5979.688354135121, 5991.416106067203, 6003.1495998623, 6014.888829906269, 6026.6337905986675, 6038.384476352703, 6050.140881595178, 6061.903000766441, 6073.670828320332, 6085.444358724127, 6097.223586458489, 6109.00850601742, 6120.7991119082, 6132.595398651345, 6144.397360780552, 6156.204992842646, 6168.018289397536, 6179.837245018158, 6191.661854290431, 6203.492111813202, 6215.3280121982025, 6227.1695500699925, 6239.01672006592, 6250.869516836063, 6262.727935043189, 6274.591969362706, 6286.461614482607, 6298.3368651034325, 6310.217715938217, 6322.104161712446, 6333.996197164003, 6345.893817043131, 6357.7970161123785, 6369.705789146558, 6381.620130932701, 6393.5400362700075, 6405.465499969803, 6417.396516855498, 6429.333081762534, 6441.275189538345, 6453.222835042314, 6465.176013145724, 6477.134718731716, 6489.098946695247, 6501.0686919430445, 6513.043949393563, 6525.024713976942, 6537.010980634961, 6549.002744321001, 6560.999999999996, 6573.002742648398, 6585.010967254128, 6597.024668816537, 6609.043842346366, 6621.0684828657, 6633.098585407935, 6645.134145017727, 6657.175156750956, 6669.221615674691, 6681.273516867135, 6693.3308554176, 6705.393626426459, 6717.461825005108, 6729.535446275926, 6741.614485372234, 6753.69893743826, 6765.788797629097, 6777.884061110663, 6789.984723059666, 6802.090778663563, 6814.20222312052, 6826.31905163938, 6838.441259439618, 6850.568841751307, 6862.701793815083, 6874.8401108821, 6886.983788213999, 6899.132821082872, 6911.287204771221, 6923.44693457192, 6935.612005788186, 6947.7824137335365, 6959.958153731754, 6972.139221116853, 6984.325611233041, 6996.517319434686, 7008.714341086277, 7020.916671562394, 7033.124306247668, 7045.337240536748, 7057.555469834268, 7069.77898955481, 7082.007795122871, 7094.241881972827, 7106.481245548902, 7118.7258813051285, 7130.975784705322, 7143.23095122304, 7155.491376341552, 7167.757055553804, 7180.027984362389, 7192.304158279513, 7204.585572826957, 7216.872223536052, 7229.164105947641, 7241.461215612049, 7253.76354808905, 7266.0710989478375, 7278.383863766987, 7290.70183813443, 7303.025017647417, 7315.353397912493, 7327.68697454546, 7340.025743171346, 7352.36969942438, 7364.718838947954, 7377.073157394597, 7389.432650425941, 7401.797313712694, 7414.167142934606, 7426.542133780443, 7438.922281947951, 7451.307583143835, 7463.698033083718, 7476.093627492121, 7488.49436210243, 7500.900232656865, 7513.311234906452, 7525.727364610994, 7538.148617539045, 7550.574989467873, 7563.006476183442, 7575.443073480374, 7587.884777161926, 7600.33158303996, 7612.783486934915, 7625.24048467578, 7637.702572100064, 7650.169745053768, 7662.64199939136, 7675.119330975745, 7687.60173567824, 7700.089209378544, 7712.581747964711, 7725.079347333125, 7737.582003388473, 7750.089712043714, 7762.602469220058, 7775.1202708469355, 7787.643112861973, 7800.1709912109645, 7812.703901847848, 7825.241840734677, 7837.784803841597, 7850.3327871468155, 7862.885786636581, 7875.443798305154, 7888.006818154784, 7900.57484219568, 7913.14786644599, 7925.725886931772, 7938.308899686972, 7950.896900753395, 7963.489886180685, 7976.087852026296, 7988.690794355469, 8001.298709241209, 8013.911592764257, 8026.529441013069, 8039.152250083789, 8051.780016080227, 8064.412735113835, 8077.05040330368, 8089.693016776422, 8102.340571666295, 8114.993064115073, 8127.650490272057, 8140.312846294045, 8152.98012834531, 8165.652332597579, 8178.329455230005, 8191.011492429153, 8203.698440388966, 8216.390295310746, 8229.087053403142, 8241.788710882107, 8254.495263970894, 8267.206708900021, 8279.923041907257, 8292.644259237595, 8305.37035714323, 8318.101331883543, 8330.837179725066, 8343.577896941475, 8356.323479813558, 8369.073924629198, 8381.82922768335, 8394.589385278021, 8407.354393722242, 8420.124249332057, 8432.898948430495, 8445.67848734755, 8458.462862420158, 8471.25206999218, 8484.046106414384, 8496.844968044408, 8509.648651246764, 8522.457152392795, 8535.270467860666, 8548.088594035344, 8560.911527308566, 8573.73926407884, 8586.5718007514, 8599.409133738207, 8612.251259457915, 8625.098174335855, 8637.94987480402, 8650.806357301039, 8663.667618272157, 8676.533654169225, 8689.404461450664, 8702.28003658146, 8715.160376033142, 8728.04547628375, 8740.935333817839, 8753.829945126436, 8766.729306707033, 8779.633415063572, 8792.542266706416, 8805.455858152332, 8818.374185924482, 8831.29724655239, 8844.225036571936, 8857.157552525327, 8870.094790961084, 8883.03674843403, 8895.983421505252, 8908.934806742107, 8921.890900718185, 8934.8517000133, 8947.817201213471, 8960.7874009109, 8973.76229570396, 8986.741882197173, 8999.726157001192, 9012.715116732788, 9025.708758014824, 9038.707077476247, 9051.710071752064, 9064.717737483328, 9077.730071317117, 9090.747069906518, 9103.768729910615, 9116.795047994465, 9129.826020829081, 9142.861645091423, 9155.901917464373, 9168.946834636716, 9181.996393303136, 9195.050590164185, 9208.109421926274, 9221.172885301656, 9234.240977008405, 9247.313693770408, 9260.391032317339, 9273.472989384647, 9286.559561713542, 9299.650746050975, 9312.74653914962, 9325.84693776787, 9338.951938669801, 9352.061538625176, 9365.175734409413, 9378.294522803584, 9391.417900594384, 9404.545864574127, 9417.678411540726, 9430.815538297675, 9443.957241654036, 9457.103518424428, 9470.254365429, 9483.40977949343, 9496.569757448893, 9509.734296132066, 9522.903392385091, 9536.07704305558, 9549.255244996582, 9562.437995066583, 9575.62529012948, 9588.817127054574, 9602.013502716549, 9615.214413995463, 9628.419857776727, 9641.629830951093, 9654.844330414644, 9668.063353068772, 9681.286895820167, 9694.514955580802, 9707.74752926792, 9720.984613804016, 9734.226206116828, 9747.472303139319, 9760.722901809664, 9773.977999071232, 9787.237591872581, 9800.501677167433, 9813.77025191467, 9827.04331307831, 9840.320857627503, 9853.602882536512, 9866.8893847847, 9880.18036135651, 9893.475809241469, 9906.775725434152, 9920.080106934185, 9933.388950746223, 9946.702253879943, 9960.020013350022, 9973.34222617613, 9986.668889382916, 9999.999999999995, 10013.335555061929, 10026.675551608221, 10040.0199866833, 10053.368857336509, 10066.722160622081, 10080.079893599144, 10093.442053331697, 10106.808636888598, 10120.17964134355, 10133.555063775097, 10146.934901266595, 10160.31915090622, 10173.707809786936, 10187.100875006496, 10200.498343667417, 10213.900212876984, 10227.306479747222, 10240.717141394889, 10254.132194941467, 10267.551637513146, 10280.975466240814, 10294.40367826004, 10307.836270711065, 10321.273240738796, 10334.71458549278, 10348.160302127204, 10361.610387800878, 10375.064839677221, 10388.523654924258, 10401.986830714592, 10415.454364225412, 10428.926252638465, 10442.402493140049, 10455.883082921007, 10469.368019176709, 10482.85729910704, 10496.350919916393, 10509.848878813653, 10523.351173012188, 10536.857799729838, 10550.368756188902, 10563.884039616121, 10577.403647242685, 10590.927576304197, 10604.455824040679, 10617.988387696556, 10631.525264520642, 10645.066451766135, 10658.611946690598, 10672.161746555956, 10685.715848628475, 10699.274250178762, 10712.836948481747, 10726.403940816675, 10739.97522446709, 10753.550796720836, 10767.130654870027, 10780.714796211058, 10794.303218044579, 10807.895917675487, 10821.492892412922, 10835.094139570248, 10848.699656465047, 10862.309440419107, 10875.923488758415, 10889.541798813138, 10903.16436791762, 10916.791193410372, 10930.422272634056, 10944.05760293548, 10957.697181665582, 10971.341006179427, 10984.98907383619, 10998.641381999149, 11012.297928035676, 11025.958709317223, 11039.623723219316, 11053.292967121542, 11066.96643840754, 11080.64413446499, 11094.326052685608, 11108.012190465128, 11121.702545203298, 11135.397114303863, 11149.09589517457, 11162.798885227143, 11176.506081877276, 11190.217482544635, 11203.933084652828, 11217.652885629415, 11231.376882905886, 11245.105073917659, 11258.837456104062, 11272.574026908333, 11286.314783777601, 11300.059724162888, 11313.808845519083, 11327.56214530495, 11341.319620983111, 11355.081270020033, 11368.847089886023, 11382.617078055218, 11396.391232005579, 11410.169549218874, 11423.952027180676, 11437.738663380347, 11451.529455311042, 11465.324400469679, 11479.123496356951, 11492.926740477304, 11506.734130338931, 11520.545663453764, 11534.361337337468, 11548.181149509423, 11562.005097492724, 11575.83317881417, 11589.665391004253, 11603.501731597149, 11617.342198130715, 11631.186788146468, 11645.03549918959, 11658.888328808911, 11672.745274556906, 11686.606333989675, 11700.471504666955, 11714.340784152086, 11728.214170012021, 11742.091659817312, 11755.9732511421, 11769.85894156411, 11783.748728664636, 11797.642610028539, 11811.540583244237, 11825.442645903695, 11839.34879560242, 11853.259029939445, 11867.173346517331, 11881.091742942153, 11895.014216823492, 11908.940765774427, 11922.871387411526, 11936.80607935484, 11950.744839227897, 11964.687664657684, 11978.634553274653, 11992.5855027127, 12006.540510609168, 12020.499574604826, 12034.462692343877, 12048.429861473938, 12062.401079646032, 12076.376344514589, 12090.355653737432, 12104.339004975769, 12118.326395894186, 12132.317824160644, 12146.313287446457, 12160.312783426303, 12174.316309778205, 12188.323864183525, 12202.335444326955, 12216.35104789651, 12230.37067258353, 12244.394316082657, 12258.421976091831, 12272.453650312296, 12286.489336448576, 12300.529032208471, 12314.57273530306, 12328.620443446678, 12342.672154356922, 12356.727865754638, 12370.78757536391, 12384.851280912055, 12398.918980129623, 12412.990670750381, 12427.066350511306, 12441.146017152583, 12455.229668417589, 12469.317302052901, 12483.408915808272, 12497.50450743663, 12511.604074694078, 12525.707615339878, 12539.815127136444, 12553.926607849342, 12568.042055247275, 12582.161467102082, 12596.284841188726, 12610.41217528529, 12624.54346717297, 12638.67871463607, 12652.817915461985, 12666.961067441209, 12681.108168367316, 12695.259216036962, 12709.41420824987, 12723.573142808826, 12737.73601751968, 12751.902830191326, 12766.073578635704, 12780.248260667788, 12794.426874105588, 12808.609416770132, 12822.795886485468, 12836.986281078653, 12851.180598379744, 12865.378836221802, 12879.580992440871, 12893.787064875982, 12907.997051369144, 12922.210949765336, 12936.428757912496, 12950.650473661524, 12964.876094866271, 12979.105619383532, 12993.33904507304, 13007.576369797454, 13021.817591422368, 13036.062707816287, 13050.311716850629, 13064.564616399723, 13078.821404340792, 13093.082078553954, 13107.346636922217, 13121.615077331466, 13135.887397670458, 13150.163595830825, 13164.44366970706, 13178.727617196502, 13193.015436199352, 13207.307124618648, 13221.602680360265, 13235.902101332911, 13250.20538544812, 13264.512530620239, 13278.823534766434, 13293.138395806676, 13307.457111663734, 13321.779680263176, 13336.106099533357, 13350.43636740541, 13364.770481813252, 13379.108440693562, 13393.450241985796, 13407.795883632158, 13422.145363577607, 13436.498679769855, 13450.855830159346, 13465.216812699266, 13479.58162534553, 13493.950266056772, 13508.32273279435, 13522.69902352233, 13537.079136207483, 13551.463068819285, 13565.850819329906, 13580.2423857142, 13594.637765949712, 13609.036958016655, 13623.439959897927, 13637.84676957908, 13652.257385048335, 13666.67180429656, 13681.090025317284, 13695.512046106669, 13709.93786466352, 13724.367478989278, 13738.800887088004, 13753.238086966387, 13767.679076633725, 13782.12385410194, 13796.572417385545, 13811.024764501659, 13825.480893469998, 13839.94080231286, 13854.404489055134, 13868.871951724283, 13883.34318835034, 13897.818196965914, 13912.296975606168, 13926.779522308825, 13941.26583511416, 13955.755912064991, 13970.24975120668, 13984.747350587126, 13999.248708256751, 14013.75382226851, 14028.262690677873, 14042.775311542828, 14057.291682923867, 14071.811802883994, 14086.335669488704, 14100.863280805994, 14115.39463490634, 14129.92972986271, 14144.468563750548, 14159.01113464777, 14173.55744063476, 14188.10747979437, 14202.6612502119, 14217.218749975118, 14231.779977174227, 14246.34492990188, 14260.913606253163, 14275.486004325601, 14290.062122219148, 14304.64195803617, 14319.225509881464, 14333.812775862236, 14348.403754088098, 14362.998442671067, 14377.59683972556, 14392.198943368388, 14406.804751718748, 14421.414262898223, 14436.027475030774, 14450.64438624274, 14465.264994662828, 14479.889298422106, 14494.517295654005, 14509.148984494313, 14523.784363081166, 14538.423429555049, 14553.066182058781, 14567.712618737527, 14582.362737738777, 14597.016537212348, 14611.674015310382, 14626.33517018734, 14640.999999999993, 14655.668502907418, 14670.340677071003, 14685.016520654426, 14699.69603182367, 14714.379208747, 14729.066049594967, 14743.756552540408, 14758.45071575843, 14773.148537426418, 14787.850015724018, 14802.555148833142, 14817.26393493796, 14831.976372224897, 14846.692458882624, 14861.41219310206, 14876.135573076363, 14890.862597000923, 14905.593263073371, 14920.327569493558, 14935.065514463557, 14949.807096187662, 14964.552312872382, 14979.301162726431, 14994.053643960735, 15008.809754788414, 15023.569493424788, 15038.33285808737, 15053.099846995858, 15067.870458372134, 15082.644690440264, 15097.422541426484, 15112.204009559202, 15126.989093068994, 15141.777790188597, 15156.570099152905, 15171.366018198967, 15186.165545565986, 15200.968679495301, 15215.775418230402, 15230.58576001691, 15245.39970310258, 15260.217245737298, 15275.038386173073, 15289.863122664035, 15304.691453466432, 15319.52337683862, 15334.358891041069, 15349.197994336348, 15364.040684989128, 15378.886961266177, 15393.736821436356, 15408.59026377061, 15423.447286541972, 15438.307888025554, 15453.172066498542, 15468.039820240196, 15482.91114753184, 15497.786046656869, 15512.664515900733, 15527.54655355094, 15542.432157897045, 15557.32132723066, 15572.214059845435, 15587.110354037064, 15602.010208103273, 15616.913620343823, 15631.820589060506, 15646.731112557136, 15661.645189139546, 15676.562817115593, 15691.483994795139, 15706.408720490062, 15721.336992514242, 15736.26880918356, 15751.2041688159, 15766.143069731135, 15781.085510251132, 15796.03148869974, 15810.981003402798, 15825.934052688119, 15840.890634885489, 15855.850748326673, 15870.8143913454, 15885.781562277361, 15900.752259460214, 15915.726481233565, 15930.704225938982, 15945.685491919978, 15960.67027752201, 15975.65858109248, 15990.65040098073, 16005.645735538035, 16020.644583117599, 16035.646942074556, 16050.652810765967, 16065.662187550806, 16080.675070789974, 16095.691458846273, 16110.711350084424, 16125.734742871053, 16140.761635574685, 16155.792026565747, 16170.82591421656, 16185.863296901338, 16200.904172996183, 16215.948540879079, 16230.9963989299, 16246.047745530386, 16261.102579064163, 16276.160897916721, 16291.22270047542, 16306.287985129484, 16321.356750269995, 16336.428994289896, 16351.504715583982, 16366.5839125489, 16381.66658358314, 16396.75272708704, 16411.842341462776, 16426.935425114363, 16442.031976447644, 16457.131993870298, 16472.23547579183, 16487.34242062356, 16502.45282677864, 16517.566692672033, 16532.684016720516, 16547.804797342676, 16562.929032958902, 16578.056721991394, 16593.18786286415, 16608.322454002962, 16623.460493835417, 16638.601980790896, 16653.746913300558, 16668.895289797354, 16684.047108716015, 16699.202368493046, 16714.361067566726, 16729.523204377107, 16744.68877736601, 16759.85778497701, 16775.030225655464, 16790.206097848466, 16805.385400004874, 16820.568130575302, 16835.754288012104, 16850.94387076938, 16866.136877302983, 16881.333306070494, 16896.53315553123, 16911.73642414625, 16926.94311037833, 16942.153212691992, 16957.366729553454, 16972.583659430682, 16987.804000793338, 17003.027752112816, 17018.254911862205, 17033.48547851631, 17048.719450551645, 17063.95682644642, 17079.197604680547, 17094.44178373563, 17109.689362094967, 17124.940338243552, 17140.19471066806, 17155.452477856852, 17170.713638299967, 17185.978190489128, 17201.246132917724, 17216.517464080825, 17231.792182475165, 17247.07028659914, 17262.351774952826, 17277.636646037936, 17292.924898357855, 17308.216530417623, 17323.51154072392, 17338.80992778509, 17354.111690111105, 17369.416826213594, 17384.72533460582, 17400.037213802683, 17415.352462320716, 17430.67107867809, 17445.993061394587, 17461.318408991636, 17476.647119992274, 17491.979192921164, 17507.314626304586, 17522.653418670423, 17537.995568548187, 17553.341074468986, 17568.689934965536, 17584.042148572156, 17599.39771382477, 17614.75662926089, 17630.118893419625, 17645.484504841683, 17660.853462069354, 17676.22576364651, 17691.60140811862, 17706.98039403272, 17722.362719937424, 17737.748384382936, 17753.137385921014, 17768.529723105, 17783.92539448979, 17799.324398631856, 17814.726734089225, 17830.13239942148, 17845.541393189767, 17860.95371395678, 17876.36936028677, 17891.788330745527, 17907.210623900395, 17922.636238320254, 17938.065172575527, 17953.497425238176, 17968.932994881692, 17984.371880081104, 17999.814079412972, 18015.25959145537, 18030.708414787914, 18046.16054799173, 18061.615989649465, 18077.074738345284, 18092.53679266486, 18108.002151195393, 18123.47081252557, 18138.9427752456, 18154.41803794719, 18169.896599223546, 18185.37845766938, 18200.863611880886, 18216.352060455767, 18231.843801993204, 18247.338835093873, 18262.837158359936, 18278.338770395032, 18293.84366980429, 18309.35185519431, 18324.863325173166, 18340.37807835041, 18355.89611333707, 18371.417428745623, 18386.942023190033, 18402.469895285714, 18418.00104364955, 18433.53546689987, 18449.073163656474, 18464.614132540602, 18480.158372174956, 18495.705881183676, 18511.25665819236, 18526.810701828035, 18542.368010719183, 18557.928583495715, 18573.492418788985, 18589.059515231773, 18604.629871458303, 18620.203486104212, 18635.78035780658, 18651.3604852039, 18666.943866936086, 18682.53050164448, 18698.12038797184, 18713.713524562332, 18729.30991006154, 18744.909543116457, 18760.51242237548, 18776.11854648842, 18791.72791410648, 18807.340523882274, 18822.95637446981, 18838.57546452449, 18854.19779270311, 18869.823357663863, 18885.452158066328, 18901.08419257147, 18916.71945984164, 18932.357958540564, 18947.999687333362, 18963.64464488652, 18979.292829867907, 18994.94424094676, 19010.598876793687, 19026.256736080668, 19041.917817481044, 19057.582119669532, 19073.2496413222, 19088.920381116473, 19104.594337731145, 19120.271509846356, 19135.951896143604, 19151.635495305738, 19167.322306016948, 19183.01232696278, 19198.705556830122, 19214.401994307198, 19230.10163808358, 19245.804486850167, 19261.510539299208, 19277.219794124274, 19292.932250020265, 19308.64790568342, 19324.366759811302, 19340.088811102793, 19355.8140582581, 19371.542499978754, 19387.2741349676, 19403.008961928797, 19418.746979567823, 19434.48818659147, 19450.232581707827, 19465.980163626304, 19481.730931057613, 19497.48488271376, 19513.242017308068, 19529.00233355514, 19544.765830170898, 19560.53250587254, 19576.302359378566, 19592.07538940876, 19607.85159468421, 19623.63097392727, 19639.41352586159, 19655.199249212103, 19670.988142705017, 19686.780205067822, 19702.57543502929, 19718.373831319448, 19734.175392669615, 19749.980117812374, 19765.78800548157, 19781.59905441232, 19797.413263341008, 19813.230631005274, 19829.051156144014, 19844.874837497395, 19860.701673806827, 19876.531663814985, 19892.36480626579, 19908.201099904407, 19924.04054347726, 19939.883135732012, 19955.72887541758, 19971.577761284105, 19987.429792082985, 20003.284966566847, 20019.14328348956, 20035.00474160622, 20050.86933967316, 20066.737076447942, 20082.60795068936, 20098.481961157428, 20114.359106613385, 20130.239385819703, 20146.122797540054, 20162.009340539353, 20177.899013583716, 20193.791815440476, 20209.68774487818, 20225.58680066659, 20241.48898157667, 20257.394286380597, 20273.302713851754, 20289.214262764715, 20305.128931895277, 20321.046720020415, 20336.967625918318, 20352.89164836836, 20368.818786151114, 20384.749038048347, 20400.68240284301, 20416.61887931925, 20432.55846626239, 20448.501162458953, 20464.44696669663, 20480.395877764302, 20496.347894452025, 20512.30301555103, 20528.261239853735, 20544.22256615372, 20560.18699324574, 20576.15451992572, 20592.125144990758, 20608.098867239107, 20624.075685470198, 20640.055598484618, 20656.038605084115, 20672.024704071595, 20688.013894251126, 20704.006174427926, 20720.00154340837, 20735.99999999999, 20752.001543011454, 20768.006171252597, 20784.013883534382, 20800.02467866893, 20816.038555469506, 20832.055512750507, 20848.075549327474, 20864.098664017085, 20880.12485563716, 20896.154123006647, 20912.186464945626, 20928.221880275312, 20944.260367818053, 20960.30192639731, 20976.346554837684, 20992.394251964895, 21008.445016605787, 21024.49884758832, 21040.555743741574, 21056.615703895754, 21072.67872688217, 21088.74481153325, 21104.813956682538, 21120.886161164683, 21136.96142381544, 21153.039743471683, 21169.12111897138, 21185.205549153605, 21201.293032858535, 21217.383568927453, 21233.47715620273, 21249.573793527845, 21265.67347974736, 21281.776213706937, 21297.881994253334, 21313.990820234398, 21330.102690499054, 21346.21760389733, 21362.335559280327, 21378.45655550024, 21394.580591410333, 21410.70766586496, 21426.837777719556, 21442.97092583063, 21459.10710905576, 21475.246326253604, 21491.388576283895, 21507.53385800743, 21523.682170286087, 21539.833511982797, 21555.987881961566, 21572.14527908746, 21588.305702226615, 21604.469150246216, 21620.63562201452, 21636.805116400832, 21652.97763227552, 21669.153168510005, 21685.331723976764, 21701.513297549318, 21717.697888102244, 21733.885494511167, 21750.07611565276, 21766.269750404736, 21782.46639764586, 21798.666056255934, 21814.8687251158, 21831.07440310734, 21847.283089113484, 21863.494782018177, 21879.709480706417, 21895.92718406423, 21912.147890978667, 21928.371600337818, 21944.598311030797, 21960.828021947746, 21977.06073197983, 21993.296440019243, 22009.535144959198, 22025.77684569393, 22042.02154111869, 22058.269230129757, 22074.51991162441, 22090.77358450096, 22107.030247658717, 22123.289899998013, 22139.552540420187, 22155.818167827587, 22172.08678112357, 22188.358379212495, 22204.632960999726, 22220.910525391642, 22237.1910712956, 22253.474597619977, 22269.761103274148, 22286.050587168473, 22302.343048214312, 22318.638485324027, 22334.936897410968, 22351.23828338947, 22367.54264217487, 22383.849972683485, 22400.16027383262, 22416.473544540568, 22432.789783726603, 22449.10899031099, 22465.431163214962, 22481.75630136074, 22498.084403671528, 22514.415469071497, 22530.749496485798, 22547.08648484056, 22563.42643306288, 22579.769340080824, 22596.115204823436, 22612.46402622072, 22628.815803203655, 22645.17053470418, 22661.5282196552, 22677.888856990587, 22694.25244564517, 22710.618984554734, 22726.988472656034, 22743.360908886778, 22759.736292185622, 22776.11462149219, 22792.495895747044, 22808.88011389172, 22825.26727486868, 22841.657377621348, 22858.050421094096, 22874.446404232243, 22890.845325982053, 22907.247185290722, 22923.651981106406, 22940.059712378195, 22956.470378056114, 22972.88397709113, 22989.300508435153, 23005.719971041017, 23022.1423638625, 23038.56768585431, 23054.99593597208, 23071.427113172387, 23087.86121641273, 23104.29824465153, 23120.738196848142, 23137.18107196285, 23153.626868956846, 23170.075586792263, 23186.52722443214, 23202.981780840448, 23219.439254982062, 23235.899645822796, 23252.362952329357, 23268.829173469378, 23285.298308211408, 23301.7703555249, 23318.245314380227, 23334.723183748658, 23351.203962602387, 23367.687649914504, 23384.174244659007, 23400.663745810794, 23417.15615234568, 23433.651463240367, 23450.14967747246, 23466.650794020472, 23483.154811863806, 23499.661729982763, 23516.171547358543, 23532.684262973235, 23549.19987580982, 23565.71838485219, 23582.23978908509, 23598.764087494194, 23615.29127906604, 23631.821362788058, 23648.354337648565, 23664.890202636765, 23681.428956742733, 23697.970598957443, 23714.51512827274, 23731.062543681343, 23747.612844176863, 23764.166028753774, 23780.72209640744, 23797.281046134085, 23813.842876930816, 23830.407587795606, 23846.975177727305, 23863.545645725622, 23880.11899079115, 23896.695211925336, 23913.2743081305, 23929.85627840982, 23946.441121767348, 23963.02883720799, 23979.619423737513, 23996.212880362546, 24012.809206090584, 24029.408399929966, 24046.0104608899, 24062.615387980433, 24079.223180212488, 24095.833836597827, 24112.447356149067, 24129.063737879667, 24145.682980803947, 24162.305083937077, 24178.930046295063, 24195.557866894764, 24212.18854475388, 24228.82207889096, 24245.45846832539, 24262.097712077397, 24278.73980916805, 24295.384758619257, 24312.03255945377, 24328.683210695162, 24345.33671136786, 24361.99306049711, 24378.652257108995, 24395.314300230442, 24411.979188889192, 24428.646922113825, 24445.317498933746, 24461.990918379193, 24478.66717948122, 24495.346281271726, 24512.028222783407, 24528.7130030498, 24545.40062110527, 24562.091075984976, 24578.784366724925, 24595.480492361927, 24612.179451933614, 24628.881244478434, 24645.585869035654, 24662.293324645343, 24679.003610348394, 24695.716725186514, 24712.43266820221, 24729.151438438807, 24745.873034940436, 24762.59745675203, 24779.324702919344, 24796.054772488926, 24812.787664508123, 24829.5233780251, 24846.26191208882, 24863.003265749034, 24879.747438056307, 24896.494428062004, 24913.244234818278, 24929.99685737808, 24946.752294795166, 24963.51054612408, 24980.271610420154, 24997.035486739525, 25013.802174139113, 25030.57167167663, 25047.343978410572, 25064.119093400237, 25080.897015705697, 25097.677744387816, 25114.46127850824, 25131.247617129404, 25148.036759314517, 25164.828704127583, 25181.62345063337, 25198.420997897447, 25215.221344986145, 25232.024490966574, 25248.83043490663, 25265.639175874974, 25282.45071294105, 25299.26504517507, 25316.082171648024, 25332.902091431668, 25349.724803598532, 25366.550307221914, 25383.378601375884, 25400.20968513527, 25417.04355757568, 25433.880217773472, 25450.719664805783, 25467.561897750507, 25484.406915686297, 25501.254717692573, 25518.10530284951, 25534.958670238055, 25551.814818939893, 25568.67374803748, 25585.535456614027, 25602.399943753502, 25619.26720854062, 25636.137250060856, 25653.01006740043, 25669.885659646327, 25686.76402588627, 25703.645165208734, 25720.529076702944, 25737.415759458876, 25754.305212567244, 25771.197435119517, 25788.0924262079, 25804.990184925344, 25821.890710365547, 25838.794001622948, 25855.700057792717, 25872.608877970775, 25889.52046125378, 25906.43480673912, 25923.351913524923, 25940.271780710063, 25957.194407394138, 25974.119792677477, 25991.047935661154, 26007.978835446964, 26024.912491137442, 26041.84890183584, 26058.788066646157, 26075.729984673108, 26092.674655022136, 26109.62207679941, 26126.57224911183, 26143.525171067016, 26160.480841773315, 26177.43926033979, 26194.40042587623, 26211.36433749315, 26228.330994301767, 26245.30039541404, 26262.272539942627, 26279.24742700092, 26296.225055703006, 26313.205425163702, 26330.18853449854, 26347.174382823756, 26364.162969256307, 26381.154292913852, 26398.148352914774, 26415.14514837815, 26432.144678423778, 26449.146942172156, 26466.151938744493, 26483.159667262702, 26500.170126849403, 26517.18331662792, 26534.199235722277, 26551.2178832572, 26568.239258358124, 26585.263360151173, 26602.29018776318, 26619.319740321676, 26636.352016954883, 26653.387016791727, 26670.424738961825, 26687.465182595493, 26704.508346823743, 26721.554230778267, 26738.602833591467, 26755.65415439643, 26772.70819232693, 26789.764946517433, 26806.824416103096, 26823.88660021976, 26840.95149800396, 26858.01910859291, 26875.089431124517, 26892.162464737365, 26909.23820857072, 26926.316661764547, 26943.39782345947, 26960.481692796813, 26977.56826891857, 26994.657550967422, 27011.74953808672, 27028.844229420498, 27045.941624113464, 27063.041721311005, 27080.14452015918, 27097.250019804727, 27114.35821939505, 27131.469118078236, 27148.58271500303, 27165.699009318858, 27182.818000175816, 27199.939686724665, 27217.064068116837, 27234.191143504428, 27251.320912040203, 27268.453372877593, 27285.588525170693, 27302.72636807427, 27319.866900743735, 27337.01012233518, 27354.156032005358, 27371.30462891167, 27388.455912212183, 27405.609881065626, 27422.766534631388, 27439.925872069507, 27457.087892540683, 27474.252595206275, 27491.419979228293, 27508.5900437694, 27525.762787992917, 27542.93821106281, 27560.116312143706, 27577.297090400876, 27594.480545000246, 27611.666675108383, 27628.855479892518, 27646.046958520514, 27663.24111016089, 27680.4379339828, 27697.637429156064, 27714.83959485113, 27732.04443023909, 27749.251934491687, 27766.4621067813, 27783.67494628095, 27800.8904521643, 27818.108623605658, 27835.329459779954, 27852.55295986278, 27869.779123030345, 27887.007948459504, 27904.239435327745, 27921.473582813196, 27938.710390094617, 27955.94985635139, 27973.19198076355, 27990.436762511745, 28007.684200777272, 28024.934294742037, 28042.1870435886, 28059.44244650013, 28076.700502660427, 28093.961211253933, 28111.224571465696, 28128.4905824814, 28145.759243487362, 28163.03055367051, 28180.304512218394, 28197.581118319198, 28214.860371161725, 28232.14226993539, 28249.426813830236, 28266.71400203693, 28284.003833746745, 28301.296308151585, 28318.59142444396, 28335.889181817, 28353.189579464466, 28370.492616580705, 28387.798292360705, 28405.10660600005, 28422.417556694945, 28439.73114364221, 28457.047366039264, 28474.36622308415, 28491.687713975512, 28509.01183791261, 28526.338594095305, 28543.66798172407, 28560.999999999985, 28578.33464812473, 28595.671925300605, 28613.0118307305, 28630.35436361791, 28647.699523166943, 28665.0473085823, 28682.39771906929, 28699.750753833818, 28717.10641208239, 28734.46469302212, 28751.82559586071, 28769.189119806462, 28786.55526406828, 28803.92402785566, 28821.2954103787, 28838.669410848088, 28856.046028475103, 28873.42526247163, 28890.80711205013, 28908.191576423673, 28925.578654805915, 28942.968346411097, 28960.360650454055, 28977.755566150212, 28995.15309271559, 29012.553229366786, 29029.955975320987, 29047.361329795975, 29064.769292010107, 29082.179861182336, 29099.593036532187, 29117.00881727978, 29134.427202645813, 29151.848191851568, 29169.27178411891, 29186.697978670283, 29204.126774728706, 29221.55817151779, 29238.992168261717, 29256.42876418525, 29273.867958513725, 29291.30975047306, 29308.754139289747, 29326.201124190855, 29343.65070440403, 29361.102879157483, 29378.557647680012, 29396.015009200975, 29413.47496295031, 29430.937508158524, 29448.402644056692, 29465.87036987647, 29483.34068485007, 29500.81358821028, 29518.289079190454, 29535.76715702451, 29553.247820946945, 29570.731070192807, 29588.216903997723, 29605.70532159787, 29623.19632223, 29640.68990513143, 29658.18606954003, 29675.684814694236, 29693.186139833047, 29710.690044196028, 29728.196527023298, 29745.705587555527, 29763.217225033964, 29780.731438700397, 29798.248227797183, 29815.76759156723, 29833.289529254005, 29850.81404010153, 29868.34112335438, 29885.870778257693, 29903.403004057145, 29920.937799998974, 29938.475165329975, 29956.01509929748, 29973.557601149394, 29991.102670134147, 30008.65030550074, 30026.20050649871, 30043.753272378144, 30061.308602389683, 30078.866495784507, 30096.426951814352, 30113.989969731494, 30131.55554878875, 30149.12368823949, 30166.69438733763, 30184.26764533761, 30201.843461494434, 30219.42183506364, 30237.00276530131, 30254.586251464058, 30272.172292809046, 30289.760888593977, 30307.35203807709, 30324.94574051716, 30342.541995173502, 30360.140801305966, 30377.742158174944, 30395.346065041358, 30412.952521166666, 30430.56152581286, 30448.173078242475, 30465.78717771856, 30483.40382350472, 30501.02301486507, 30518.644751064272, 30536.269031367516, 30553.895855040515, 30571.52522134952, 30589.157129561307, 30606.791578943175, 30624.428568762964, 30642.06809828903, 30659.71016679026, 30677.35477353607, 30695.00191779639, 30712.651598841687, 30730.303815942945, 30747.958568371676, 30765.615855399912, 30783.27567630021, 30800.938030345646, 30818.602916809814, 30836.270334966837, 30853.940284091354, 30871.61276345852, 30889.28777234401, 30906.965310024025, 30924.64537577527, 30942.327968874983, 30960.013088600903, 30977.700734231294, 30995.39090504493, 31013.0836003211, 31030.77881933962, 31048.476561380798, 31066.17682572547, 31083.87961165498, 31101.58491845118, 31119.29274539644, 31137.003091773637, 31154.715956866155, 31172.431339957893, 31190.14924033326, 31207.869657277162, 31225.592590075023, 31243.31803801277, 31261.04600037684, 31278.77647645417, 31296.50946553221, 31314.24496689891, 31331.98297984272, 31349.7235036526, 31367.466537618013, 31385.212081028923, 31402.960133175795, 31420.710693349596, 31438.46376084179, 31456.21933494435, 31473.977414949743, 31491.738000150934, 31509.50108984139, 31527.26668331507, 31545.034779866437, 31562.80537879045, 31580.578479382562, 31598.35408093872, 31616.13218275537, 31633.91278412945, 31651.695884358396, 31669.48148274013, 31687.269578573076, 31705.060171156143, 31722.853259788735, 31740.64884377075, 31758.446922402567, 31776.247494985066, 31794.050560819614, 31811.85611920806, 31829.664169452753, 31847.47471085652, 31865.287742722685, 31883.103264355046, 31900.9212750579, 31918.74177413602, 31936.56476089467, 31954.3902346396, 31972.21819467704, 31990.048640313704, 32007.881570856793, 32025.716985613984, 32043.554883893445, 32061.395265003815, 32079.238128254223, 32097.08347295427, 32114.93129841405, 32132.781603944117, 32150.634388855524, 32168.48965245979, 32186.347394068915, 32204.20761299537, 32222.07030855212, 32239.935480052583, 32257.80312681067, 32275.673248140767, 32293.54584335772, 32311.420911776862, 32329.298452713996, 32347.178465485395, 32365.060949407813, 32382.945903798463, 32400.83332797504, 32418.723221255706, 32436.615582959093, 32454.510412404306, 32472.407708910916, 32490.307471798966, 32508.20970038896, 32526.114394001877, 32544.021551959166, 32561.931173582732, 32579.843258194956, 32597.75780511868, 32615.67481367721, 32633.59428319433, 32651.51621299426, 32669.44060240171, 32687.367450741847, 32705.296757340297, 32723.228521523146, 32741.162742616943, 32759.099419948703, 32777.0385528459, 32794.980140636464, 32812.92418264879, 32830.87067821173, 32848.81962665459, 32866.77102730715, 32884.72487949962, 32902.68118256269, 32920.639935827494, 32938.60113862564, 32956.56479028918, 32974.53089015061, 32992.499437542894, 33010.47043179945, 33028.443872254145, 33046.41975824131, 33064.39808909571, 33082.37886415258, 33100.36208274759, 33118.34774421688, 33136.335847897026, 33154.32639312506, 33172.31937923847, 33190.31480557517, 33208.312671473555, 33226.31297627244, 33244.31571931111, 33262.320899929284, 33280.328517467125, 33298.33857126526, 33316.35106066475, 33334.36598500709, 33352.38334363424, 33370.40313588859, 33388.42536111299, 33406.45001865072, 33424.4771078455, 33442.50662804151, 33460.53857858335, 33478.57295881608, 33496.60976808519, 33514.64900573662, 33532.69067111674, 33550.734763572356, 33568.781282450735, 33586.83022709956, 33604.88159686697, 33622.93539110153, 33640.99160915224, 33659.05025036854, 33677.11131410032, 33695.17479969788, 33713.240706511984, 33731.309033893805, 33749.37978119497, 33767.45294776753, 33785.528532963974, 33803.60653613721, 33821.6869566406, 33839.76979382794, 33857.855047053425, 33875.94271567171, 33894.03279903787, 33912.12529650743, 33930.220207436316, 33948.31753118089, 33966.41726709796, 33984.519414544746, 34002.6239728789, 34020.73094145851, 34038.84031964208, 34056.952106788536, 34075.066302257255, 34093.182905408015, 34111.30191560103, 34129.42333219693, 34147.547154556785, 34165.67338204208, 34183.80201401472, 34201.93304983703, 34220.06648887178, 34238.20233048214, 34256.3405740317, 34274.481218884495, 34292.62426440495, 34310.76970995794, 34328.91755490873, 34347.06779862303, 34365.220440466954, 34383.37547980705, 34401.53291601026, 34419.69274844397, 34437.85497647597, 34456.01959947445, 34474.18661680806, 34492.35602784582, 34510.527831957195, 34528.70202851205, 34546.87861688068, 34565.05759643377, 34583.23896654245, 34601.42272657823, 34619.608875913065, 34637.797413919296, 34655.98833996969, 34674.18165343742, 34692.37735369608, 34710.57544011967, 34728.77591208258, 34746.97876895965, 34765.18401012608, 34783.39163495754, 34801.60164283005, 34819.81403312006, 34838.028805204456, 34856.24595846048, 34874.46549226582, 34892.68740599856, 34910.91169903718, 34929.138370760564, 34947.36742054803, 34965.59884777927, 34983.8326518344, 35002.06883209391, 35020.30738793874, 35038.54831875018, 35056.79162390998, 35075.03730280025, 35093.285354803505, 35111.53577930269, 35129.788575681116, 35148.043743322516, 35166.30128161101, 35184.56118993114, 35202.823467667826, 35221.08811420639, 35239.355128932555, 35257.62451123245, 35275.896260492584, 35294.170376099886, 35312.44685744167, 35330.72570390563, 35349.00691487989, 35367.290489752944, 35385.576427913686, 35403.86472875142, 35422.15539165581, 35440.44841601697, 35458.74380122534, 35477.041546671804, 35495.34165174762, 35513.644115844436, 35531.948938354304, 35550.256118669655, 35568.56565618331, 35586.8775502885, 35605.191800378816, 35623.50840584827, 35641.82736609124, 35660.148680502505, 35678.47234847723, 35696.79836941098, 35715.12674269968, 35733.45746773966, 35751.790543927644, 35770.12597066074, 35788.46374733642, 35806.80387335257, 35825.14634810745, 35843.49117099971, 35861.83834142837, 35880.18785879285, 35898.539722492955, 35916.89393192886, 35935.25048650113, 35953.60938561072, 35971.97062865896, 35990.33421504756, 36008.70014417861, 36027.068415454596, 36045.43902827837, 36063.81198205317, 36082.18727618261, 36100.564910070694, 36118.94488312179, 36137.327194740654, 36155.71184433243, 36174.09883130262, 36192.488155057115, 36210.87981500219, 36229.27381054447, 36247.670141091, 36266.06880604917, 36284.46980482674, 36302.87313683186, 36321.27880147307, 36339.68679815925, 36358.09712629968, 36376.50978530401, 36394.924774582265, 36413.342093544816, 36431.761741602444, 36450.18371816629, 36468.60802264786, 36487.03465445903, 36505.46361301206, 36523.89489771958, 36542.32850799458, 36560.76444325041, 36579.20270290083, 36597.643286359926, 36616.08619304218, 36634.53142236244, 36652.978973735895, 36671.42884657814, 36689.881040305125, 36708.33555433315, 36726.7923880789, 36745.25154095943, 36763.71301239214, 36782.17680179481, 36800.64290858559, 36819.11133218299, 36837.58207200587, 36856.05512747348, 36874.53049800542, 36893.00818302165, 36911.488181942506, 36929.970494188674, 36948.455119181206, 36966.94205634152, 36985.43130509139, 37003.92286485296, 37022.41673504873, 37040.91291510156, 37059.411404434664, 37077.91220247162, 37096.41530863639, 37114.92072235324, 37133.42844304686, 37151.93847014225, 37170.450803064785, 37188.96544124021, 37207.4823840946, 37226.0016310544, 37244.52318154643, 37263.04703499784, 37281.57319083615, 37300.101648489224, 37318.632407385296, 37337.165466952945, 37355.70082662111, 37374.238485819085, 37392.77844397651, 37411.320700523385, 37429.86525489006, 37448.41210650723, 37466.96125480597, 37485.51269921768, 37504.066439174116, 37522.622474107404, 37541.18080344999, 37559.741426634704, 37578.30434309469, 37596.86955226349, 37615.43705357494, 37634.00684646328, 37652.578930363044, 37671.153304709165, 37689.729968936896, 37708.30892248185, 37726.890164779965, 37745.47369526756, 37764.059513381275, 37782.64761855811, 37801.238010235415, 37819.83068785086, 37838.425650842495, 37857.02289864869, 37875.62243070817, 37894.22424646001, 37912.828345343616, 37931.43472679875, 37950.043390265506, 37968.65433518433, 37987.267560996, 38005.883067141665, 38024.500853062775, 38043.12091820116, 38061.74326199896, 38080.36788389868, 38098.99478334316, 38117.62395977556, 38136.25541263942, 38154.889141378575, 38173.525145437234, 38192.16342425994, 38210.80397729155, 38229.44680397729, 38248.0919037627, 38266.739276093685, 38285.388920416466, 38304.040836177606, 38322.695022824, 38341.3514798029, 38360.01020656186, 38378.671202548816, 38397.33446721199, 38415.99999999998, 38434.66780036168, 38453.33786774637, 38472.01020160361, 38490.68480138334, 38509.361666535784, 38528.04079651155, 38546.72219076155, 38565.405848737035, 38584.091769889594, 38602.77995367113, 38621.47039953391, 38640.163106930486, 38658.858075313794, 38677.55530413706, 38696.25479285386, 38714.956540918094, 38733.66054778399, 38752.36681290611, 38771.07533573935, 38789.78611573892, 38808.49915236037, 38827.21444505957, 38845.93199329274, 38864.65179651639, 38883.37385418738, 38902.098165762916, 38920.824730700486, 38939.55354845794, 38958.28461849343, 38977.01794026546, 38995.753513232834, 39014.4913368547, 39033.23141059052, 39051.97373390007, 39070.718306243485, 39089.46512708119, 39108.214195873945, 39126.96551208283, 39145.71907516926, 39164.474884594965, 39183.23293982199, 39201.99324031271, 39220.755785529815, 39239.52057493633, 39258.28760799559, 39277.05688417125, 39295.82840292729, 39314.60216372801, 39333.37816603802, 39352.15640932227, 39370.936893046004, 39389.71961667481, 39408.50457967458, 39427.29178151152, 39446.08122165217, 39464.87289956337, 39483.66681471229, 39502.46296656641, 39521.26135459354, 39540.06197826178, 39558.86483703957, 39577.669930395656, 39596.47725779911, 39615.2868187193, 39634.09861262592, 39652.91263898899, 39671.72889727882, 39690.547386966064, 39709.36810752165, 39728.19105841686, 39747.01623912326, 39765.84364911275, 39784.67328785753, 39803.505154830105, 39822.33924950332, 39841.17557135029, 39860.0141198445, 39878.85489445968, 39897.69789466991, 39916.54311994958, 39935.39056977337, 39954.2402436163, 39973.092140953675, 39991.94626126112, 40010.80260401455, 40029.661168690225, 40048.52195476468, 40067.38496171478, 40086.25018901768, 40105.117636150855, 40123.98730259209, 40142.85918781947, 40161.73329131138, 40180.60961254653, 40199.48815100391, 40218.368906162854, 40237.25187750296, 40256.13706450415, 40275.02446664667, 40293.91408341103, 40312.805914278084, 40331.69995872896, 40350.5962162451, 40369.49468630827, 40388.39536840051, 40407.29826200417, 40426.20336660192, 40445.110681676706, 40464.02020671179, 40482.93194119075, 40501.84588459744, 40520.76203641603, 40539.680396130985, 40558.60096322707, 40577.52373718937, 40596.448717503234, 40615.37590365434, 40634.30529512866, 40653.23689141245, 40672.170691992294, 40691.10669635505, 40710.04490398787, 40728.98531437824, 40747.9279270139, 40766.87274138292, 40785.81975697365, 40804.768973274746, 40823.72038977516, 40842.67400596413, 40861.62982133121, 40880.58783536623, 40899.54804755933, 40918.51045740093, 40937.47506438176, 40956.44186799285, 40975.4108677255, 40994.38206307133, 41013.355453522236, 41032.33103857042, 41051.30881770836, 41070.288790428865, 41089.27095622499, 41108.25531459011, 41127.24186501789, 41146.23060700229, 41165.22154003754, 41184.2146636182, 41203.20997723908, 41222.20748039531, 41241.2071725823, 41260.20905329575, 41279.21312203166, 41298.2193782863, 41317.227821556255, 41336.23845133838, 41355.25126712983, 41374.26626842804, 41393.28345473074, 41412.30282553595, 41431.32438034198, 41450.34811864742, 41469.374039951144, 41488.40214375233, 41507.43242955043, 41526.46489684518, 41545.49954513663, 41564.536373925075, 41583.575382711126, 41602.61657099567, 41621.659938279874, 41640.705484065205, 41659.7532078534, 41678.803109146495, 41697.8551874468, 41716.90944225691, 41735.96587307971, 41755.02447941836, 41774.085260776315, 41793.1482166573, 41812.21334656533, 41831.280650004715, 41850.350126480014, 41869.42177549611, 41888.49559655813, 41907.571589171515, 41926.64975284196, 41945.73008707546, 41964.812591378286, 41983.89726525698, 42002.98410821838, 42022.07311976959, 42041.164299418015, 42060.25764667131, 42079.35316103742, 42098.45084202459, 42117.550689141324, 42136.652701896404, 42155.75687979889, 42174.86322235814, 42193.97172908376, 42213.082399485655, 42232.195233074, 42251.310229359246, 42270.42738785213, 42289.546708063644, 42308.66818950508, 42327.791831687995, 42346.91763412423, 42366.04559632589, 42385.17571780535, 42404.307998075295, 42423.44243664864, 42442.57903303861, 42461.71778675867, 42480.858697322605, 42500.00176424442, 42519.146987038446, 42538.29436521925, 42557.44389830169, 42576.59558580088, 42595.74942723224, 42614.90542211142, 42634.06356995438, 42653.22387027732, 42672.386322596736, 42691.55092642938, 42710.71768129229, 42729.88658670276, 42749.05764217836, 42768.23084723694, 42787.4062013966, 42806.58370417574, 42825.76335509299, 42844.945153667286, 42864.129099417805, 42883.315191864014, 42902.50343052565, 42921.69381492269, 42940.88634457541, 42960.08101900435, 42979.2778377303, 42998.47680027432, 43017.67790615777, 43036.881154902236, 43056.08654602958, 43075.29407906196, 43094.50375352177, 43113.71556893167, 43132.9295248146, 43152.14562069376, 43171.36385609262, 43190.58423053491, 43209.80674354462, 43229.031394646016, 43248.25818336362, 43267.487109222224, 43286.71817174688, 43305.951370462906, 43325.18670489588, 43344.42417457165, 43363.66377901632, 43382.90551775626, 43402.1493903181, 43421.39539622875, 43440.64353501535, 43459.89380620532, 43479.146209326354, 43498.40074390638, 43517.657409473606, 43536.916205556496, 43556.177131683784, 43575.44018738444, 43594.705372187724, 43613.972685623135, 43633.24212722044, 43652.51369650967, 43671.78739302109, 43691.06321628527, 43710.341165833, 43729.621241195346, 43748.903441903625, 43768.18776748941, 43787.474217484545, 43806.762791421126, 43826.0534888315, 43845.34630924828, 43864.641252204325, 43883.938317232765, 43903.23750386697, 43922.538811640596, 43941.84224008751, 43961.14778874188, 43980.4554571381, 43999.765244810835, 44019.077151295, 44038.391176125755, 44057.70731883854, 44077.02557896902, 44096.34595605314, 44115.66844962708, 44134.99305922729, 44154.319784390456, 44173.648624653535, 44192.97957955373, 44212.31264862849, 44231.64783141553, 44250.985127452805, 44270.32453627854, 44289.66605743118, 44309.009690449464, 44328.355434872356, 44347.703290239064, 44367.05325608907, 44386.40533196211, 44405.75951739814, 44425.11581193739, 44444.47421512033, 44463.834726487694, 44483.19734558046, 44502.56207193984, 44521.92890510733, 44541.297844624634, 44560.66889003373, 44580.042040876855, 44599.417296696454, 44618.794657035265, 44638.174121436256, 44657.55568944264, 44676.93936059787, 44696.32513444567, 44715.71301053, 44735.102988395054, 44754.495067585296, 44773.88924764542, 44793.285528120374, 44812.683908555344, 44832.08438849578, 44851.48696748736, 44870.891645076015, 44890.298420807914, 44909.70729422949, 44929.11826488741, 44948.531332328566, 44967.946496100136, 44987.36375574951, 45006.783110824326, 45026.20456087247, 45045.6281054421, 45065.05374408157, 45084.48147633949, 45103.91130176475, 45123.34321990643, 45142.777230313885, 45162.21333253671, 45181.65152612473, 45201.09181062803, 45220.53418559692, 45239.978650581965, 45259.42520513396, 45278.87384880394, 45298.32458114319, 45317.777401703235, 45337.23231003585, 45356.68930569302, 45376.148388227, 45395.60955719027, 45415.07281213556, 45434.53815261583, 45454.00557818428, 45473.47508839436, 45492.946682799746, 45512.42036095436, 45531.89612241236, 45551.373966728155, 45570.85389345636, 45590.33590215187, 45609.819992369776, 45629.30616366544, 45648.79441559444, 45668.28474771261, 45687.777159576006, 45707.27165074092, 45726.76822076389, 45746.26686920169, 45765.76759561132, 45785.270399550034, 45804.7752805753, 45824.28223824482, 45843.79127211657, 45863.30238174872, 45882.81556669969, 45902.33082652812, 45921.84816079293, 45941.367569053225, 45960.889050868354, 45980.41260579793, 45999.93823340176, 46019.4659332399, 46038.99570487266, 46058.52754786055, 46078.06146176433, 46097.597446144995, 46117.135500563774, 46136.67562458211, 46156.2178177617, 46175.76207966446, 46195.30840985254, 46214.85680788833, 46234.40727333444, 46253.95980575372, 46273.51440470924, 46293.07106976431, 46312.62980048248, 46332.1905964275, 46351.75345716338, 46371.31838225435, 46390.88537126487, 46410.45442375962, 46430.025539303526, 46449.59871746173, 46469.17395779962, 46488.75125988279, 46508.33062327707, 46527.91204754854, 46547.49553226347, 46567.0810769884, 46586.66868129006, 46606.258344735434, 46625.850066891726, 46645.44384732635, 46665.039685606986, 46684.6375813015, 46704.237533978005, 46723.83954320484, 46743.44360855057, 46763.04972958399, 46782.657905874104, 46802.26813699017, 46821.88042250163, 46841.494761978196, 46861.111154989776, 46880.72960110652, 46900.3500998988, 46919.9726509372, 46939.597253792526, 46959.22390803584, 46978.8526132384, 46998.48336897169, 47018.11617480742, 47037.75103031755, 47057.38793507422, 47077.02688864981, 47096.66789061694, 47116.31094054843, 47135.95603801733, 47155.60318259692, 47175.2523738607, 47194.903611382375, 47214.5568947359, 47234.21222349542, 47253.86959723534, 47273.52901553025, 47293.19047795498, 47312.85398408458, 47332.519533494306, 47352.187125759665, 47371.85676045634, 47391.52843716029, 47411.20215544765, 47430.877914894794, 47450.5557150783, 47470.23555557498, 47489.91743596186, 47509.6013558162, 47529.28731471546, 47548.97531223731, 47568.66534795967, 47588.35742146065, 47608.051532318605, 47627.74768011208, 47647.445864419846, 47667.14608482091, 47686.848340894474, 47706.55263221997, 47726.258958377046, 47745.96731894555, 47765.67771350559, 47785.39014163743, 47805.104602921594, 47824.821096938824, 47844.539623270044, 47864.26018149643, 47883.98277119934, 47903.70739196039, 47923.43404336137, 47943.162724984315, 47962.89343641144, 47982.62617722522, 48002.36094700831, 48022.0977453436, 48041.83657181417, 48061.57742600335, 48081.32030749465, 48101.065215871815, 48120.81215071879, 48140.56111161974, 48160.31209815905, 48180.0651099213, 48199.82014649131, 48219.57720745407, 48239.336292394844, 48259.097400899045, 48278.86053255234, 48298.62568694059, 48318.392863649875, 48338.16206226648, 48357.933282376915, 48377.70652356789, 48397.48178542632, 48417.259067539344, 48437.0383694943, 48456.819690878765, 48476.60303128049, 48496.38839028745, 48516.17576748783, 48535.96516247005, 48555.756574822684, 48575.550004134566, 48595.34544999472, 48615.14291199238, 48634.94238971699, 48654.7438827582, 48674.54739070588, 48694.35291315008, 48714.16044968111, 48733.969999889436, 48753.78156336576, 48773.59513970098, 48793.41072848621, 48813.22832931277, 48833.04794177219, 48852.86956545619, 48872.69319995672, 48892.51884486592, 48912.346499776155, 48932.176164279976, 48952.00783797016, 48971.84152043966, 48991.677211281676, 49011.51491008959, 49031.354616456985, 49051.196329977654, 49071.04005024561, 49090.88577685506, 49110.73350940041, 49130.58324747627, 49150.43499067749, 49170.28873859906, 49190.14449083623, 49210.00224698444, 49229.86200663932, 49249.72376939672, 49269.587534852675, 49289.45330260345, 49309.32107224548, 49329.19084337544, 49349.06261559019, 49368.936388486785, 49388.81216166249, 49408.689934714785, 49428.569707241324, 49448.45147883999, 49468.33524910886, 49488.22101764621, 49508.10878405052, 49527.99854792047, 49547.89030885494, 49567.78406645301, 49587.67982031398, 49607.57757003732, 49627.47731522272, 49647.37905547007, 49667.28279037946, 49687.18851955118, 49707.09624258571, 49727.00595908374, 49746.917668646165, 49766.83137087407, 49786.747065368734, 49806.66475173166, 49826.58442956452, 49846.5060984692, 49866.429758047794, 49886.35540790258, 49906.28304763604, 49926.212676850846, 49946.14429514988, 49966.077902136225, 49986.01349741315, 50005.951080584135, 50025.890651252834, 50045.83220902312, 50065.77575349907, 50085.72128428493, 50105.668800985164, 50125.61830320443, 50145.569790547575, 50165.52326261965, 50185.4787190259, 50205.43615937177, 50225.39558326289, 50245.3569903051, 50265.32038010443, 50285.2857522671, 50305.25310639953, 50325.22244210834, 50345.193759000336, 50365.16705668252, 50385.1423347621, 50405.11959284647, 50425.09883054322, 50445.08004746013, 50465.06324320518, 50485.04841738654, 50505.03556961258, 50525.024699491856, 50545.01580663313, 50565.00889064534, 50585.00395113762, 50605.00098771933, 50624.99999999997, 50645.00098758927, 50665.00395009713, 50685.00888713368, 50705.01579830919, 50725.024683234165, 50745.03554151928, 50765.04837277541, 50785.06317661362, 50805.07995264516, 50825.09870048149, 50845.11941973424, 50865.142110015244, 50885.16677093652, 50905.19340211028, 50925.222003148934, 50945.25257366507, 50965.28511327147, 50985.31962158112, 51005.356098207165, 51025.39454276298, 51045.434954862096, 51065.477334118244, 51085.521680145364, 51105.567992557546, 51125.61627096911, 51145.66651499454, 51165.71872424852, 51185.77289834591, 51205.82903690178, 51225.88713953136, 51245.947205850105, 51266.00923547362, 51286.07322801772, 51306.1391830984, 51326.207100331856, 51346.27697933445, 51366.348819722756, 51386.42262111351, 51406.49838312366, 51426.57610537032, 51446.655787470794, 51466.73742904259, 51486.82102970338, 51506.90658907105, 51526.99410676363, 51547.08358239939, 51567.17501559674, 51587.2684059743, 51607.36375315086, 51627.461056745415, 51647.56031637713, 51667.66153166536, 51687.76470222966, 51707.86982768973, 51727.9769076655, 51748.085941777055, 51768.19692964468, 51788.309870888836, 51808.42476513017, 51828.54161198952, 51848.660411087905, 51868.781162046515, 51888.90386448674, 51909.02851803014, 51929.155122298485, 51949.28367691369, 51969.41418149788, 51989.54663567335, 52009.68103906259, 52029.81739128826, 52049.95569197321, 52070.09594074048, 52090.23813721327, 52110.38228101499, 52130.5283717692, 52150.676409099666, 52170.82639263033, 52190.97832198532, 52211.13219678893, 52231.288016665654, 52251.44578124015, 52271.60549013727, 52291.76714298204, 52311.93073939967, 52332.096279015546, 52352.26376145525, 52372.43318634451, 52392.604553309284, 52412.777861975665, 52432.953111969946, 52453.130302918595, 52473.30943444827, 52493.49050618579, 52513.67351775817, 52533.858468792605, 52554.04535891645, 52574.23418775725, 52594.42495494274, 52614.61766010081, 52634.81230285956, 52655.00888284723, 52675.20739969227, 52695.407853023295, 52715.6102424691, 52735.81456765866, 52756.02082822111, 52776.229023785796, 52796.439153982225, 52816.65121844006, 52836.86521678917, 52857.0811486596, 52877.29901368155, 52897.518811485425, 52917.74054170177, 52937.96420396135, 52958.18979789508, 52978.41732313405, 52998.64677930953, 53018.87816605298, 53039.111482996006, 53059.34672977042, 53079.58390600819, 53099.82301134148, 53120.0640454026, 53140.30700782406, 53160.55189823853, 53180.79871627886, 53201.04746157809, 53221.2981337694, 53241.550732486176, 53261.805257361964, 53282.06170803049, 53302.32008412564, 53322.58038528149, 53342.8426111323, 53363.10676131247, 53383.3728354566, 53403.64083319945, 53423.91075417597, 53444.18259802126, 53464.45636437061, 53484.73205285948, 53505.0096631235, 53525.28919479847, 53545.57064752036, 53565.85402092533, 53586.1393146497, 53606.426528329954, 53626.715661602764, 53647.00671410496, 53667.299685473554, 53687.59457534572, 53707.891383358816, 53728.19010915037, 53748.490752358055, 53768.79331261975, 53789.0977895735, 53809.404182857485, 53829.712492110106, 53850.0227169699, 53870.33485707559, 53890.648912066055, 53910.96488158037, 53931.28276525774, 53951.60256273758, 53971.92427365946, 53992.24789766311, 54012.57343438844, 54032.90088347553, 54053.23024456462, 54073.561517296126, 54093.894701310644, 54114.22979624891, 54134.566801751855, 54154.90571746057, 54175.246543016314, 54195.589278060506, 54215.933922234755, 54236.280475180814, 54256.62893654063, 54276.97930595628, 54297.331583070045, 54317.68576752436, 54338.04185896183, 54358.399857025215, 54378.75976135746, 54399.12157160167, 54419.48528740111, 54439.850908399225, 54460.218434239614, 54480.587864566056, 54500.95919902248, 54521.332437253, 54541.70757890188, 54562.084623613555, 54582.46357103264, 54602.844420803885, 54623.227172572246, 54643.61182598281, 54663.99838068084, 54684.38683631177, 54704.7771925212, 54725.1694489549, 54745.56360525877, 54765.95966107893, 54786.357616061614, 54806.757469853255, 54827.15922210044, 54847.56287244991, 54867.96842054858, 54888.375866043534, 54908.78520858201, 54929.19644781142, 54949.60958337932, 54970.02461493346, 54990.44154212173, 55010.86036459218, 55031.28108199306, 55051.70369397273, 55072.12820017975, 55092.55460026284, 55112.98289387087, 55133.41308065288, 55153.84516025806, 55174.27913233579, 55194.714996535586, 55215.15275250714, 55235.5923999003, 55256.033938365086, 55276.477367551655, 55296.92268711036, 55317.369896691685, 55337.818995946305, 55358.269984525024, 55378.72286207883, 55399.17762825887, 55419.63428271644, 55440.09282510301, 55460.553255070205, 55481.01557226981, 55501.479776353764, 55521.94586697419, 55542.413843783346, 55562.883706433655, 55583.355454577715, 55603.82908786826, 55624.30460595821, 55644.78200850064, 55665.26129514875, 55685.742465555944, 55706.225519375774, 55726.71045626193, 55747.197275868275, 55767.68597784884, 55788.176561857814, 55808.66902754953, 55829.16337457848, 55849.65960259933, 55870.15771126689, 55890.657700236145, 55911.15956916222, 55931.66331770041, 55952.168945506164, 55972.676452235086, 55993.185837542944, 56013.69710108565, 56034.2102425193, 56054.72526150012, 56075.24215768451, 56095.76093072901, 56116.28158029034, 56136.80410602537, 56157.328507591104, 56177.85478464474, 56198.3829368436, 56218.912963845185, 56239.44486530714, 56259.97864088727, 56280.51429024353, 56301.05181303404, 56321.59120891709, 56342.13247755108, 56362.675618594614, 56383.22063170642, 56403.7675165454, 56424.31627277061, 56444.86690004124, 56465.41939801667, 56485.973766356394, 56506.5300047201, 56527.08811276761, 56547.6480901589, 56568.20993655411, 56588.77365161352, 56609.339234997584, 56629.9066863669, 56650.47600538221, 56671.04719170442, 56691.6202449946, 56712.19516491396, 56732.77195112387, 56753.350603285835, 56773.93112106154, 56794.51350411282, 56815.09775210165, 56835.68386469015, 56856.27184154063, 56876.86168231552, 56897.4533866774, 56918.04695428902, 56938.6423848133, 56959.23967791326, 56979.83883325211, 57000.439850493225, 57021.04272930009, 57041.64746933637, 57062.25407026587, 57082.86253175256, 57103.47285346055, 57124.08503505411, 57144.69907619765, 57165.31497655575, 57185.9327357931, 57206.55235357461, 57227.173829565276, 57247.79716343028, 57268.42235483494, 57289.04940344473, 57309.678308925286, 57330.30907094237, 57350.94168916191, 57371.576163249985, 57392.212492872815, 57412.850677696784, 57433.490717388406, 57454.13261161437, 57474.77636004149, 57495.421962336746, 57516.069418167266, 57536.718727200314, 57557.36988910332, 57578.02290354386, 57598.67777018964, 57619.33448870855, 57639.99305876859, 57660.65348003794, 57681.315752184906, 57701.97987487797, 57722.64584778573, 57743.31367057695, 57763.98334292055, 57784.65486448557, 57805.32823494123, 57826.00345395688, 57846.680521202026, 57867.359436346305, 57888.04019905953, 57908.72280901163, 57929.40726587271, 57950.093569313, 57970.781719002895, 57991.47171461291, 58012.16355581375, 58032.85724227622, 58053.55277367131, 58074.25014967013, 58094.94936994395, 58115.650434164185, 58136.35334200239, 58157.058093130276, 58177.76468721969, 58198.47312394264, 58219.18340297126, 58239.89552397784, 58260.60948663482, 58281.325290614775, 58302.042935590434, 58322.76242123468, 58343.48374722051, 58364.206913221096, 58384.93191890975, 58405.65876395992, 58426.3874480452, 58447.11797083934, 58467.85033201621, 58488.584531249864, 58509.32056821446, 58530.05844258433, 58550.79815403393, 58571.539702237875, 58592.283086870906, 58613.02830760793, 58633.77536412398, 58654.52425609425, 58675.27498319405, 58696.02754509888, 58716.781941484325, 58737.53817202616, 58758.296236400274, 58779.05613428273, 58799.817865349694, 58820.5814292775, 58841.34682574264, 58862.11405442171, 58882.883114991484, 58903.65400712885, 58924.42673051085, 58945.201284814684, 58965.977669717664, 58986.75588489727, 59007.53593003111, 59028.31780479695, 59049.10150887266, 59069.8870419363, 59090.674403666046, 59111.46359374021, 59132.25461183726, 59153.0474576358, 59173.84213081458, 59194.63863105247, 59215.436958028506, 59236.237111421855, 59257.03909091183, 59277.84289617788, 59298.64852689959, 59319.455982756685, 59340.26526342905, 59361.076368596696, 59381.88929793976, 59402.70405113854, 59423.520627873484, 59444.33902782514, 59465.15925067423, 59485.9812961016, 59506.80516378825, 59527.63085341531, 59548.458364664046, 59569.28769721586, 59590.11885075232, 59610.95182495509, 59631.78661950601, 59652.62323408705, 59673.46166838031, 59694.30192206803, 59715.14399483259, 59735.987886356525, 59756.83359632248, 59777.681124413255, 59798.530470311794, 59819.38163370116, 59840.23461426457, 59861.08941168538, 59881.94602564707, 59902.80445583327, 59923.664701927744, 59944.52676361438, 59965.39064057724, 59986.25633250049, 60007.12383906844, 60027.99315996554, 60048.86429487638, 60069.73724348569, 60090.612005478324, 60111.488580539284, 60132.36696835371, 60153.24716860687, 60174.129180984164, 60195.01300517115, 60215.89864085351, 60236.78608771706, 60257.67534544775, 60278.56641373167, 60299.459292255044, 60320.35398070425, 60341.25047876576, 60362.14878612623, 60383.04890247242, 60403.95082749124, 60424.85456086972, 60445.76010229504, 60466.667451454516, 60487.57660803559, 60508.48757172584, 60529.400342213, 60550.31491918489, 60571.23130232952, 60592.149491335, 60613.06948588959, 60633.99128568168, 60654.914890399785, 60675.84029973257, 60696.76751336883, 60717.69653099749, 60738.6273523076, 60759.55997698837, 60780.49440472912, 60801.43063521932, 60822.368668148556, 60843.308503206565, 60864.250140083204, 60885.19357846847, 60906.138818052495, 60927.08585852554, 60948.03469957801, 60968.98534090042, 60989.93778218344, 61010.89202311786, 61031.84806339462, 61052.805902704764, 61073.76554073949, 61094.726977190134, 61115.69021174814, 61136.6552441051, 61157.62207395274, 61178.590700982924, 61199.561124887616, 61220.53334535895, 61241.50736208917, 61262.48317477066, 61283.46078309594, 61304.440186757645, 61325.42138544856, 61346.40437886158, 61367.389166689754, 61388.37574862626, 61409.36412436439, 61430.35429359757, 61451.34625601937, 61472.3400113235, 61493.33555920376, 61514.33289935412, 61535.33203146867, 61556.33295524162, 61577.33567036731, 61598.34017654024, 61619.34647345499, 61640.35456080633, 61661.3644382891, 61682.37610559831, 61703.38956242909, 61724.40480847669, 61745.42184343651, 61766.44066700406, 61787.46127887499, 61808.48367874506, 61829.5078663102, 61850.533841266435, 61871.56160330993, 61892.59115213697, 61913.62248744399, 61934.655608927525, 61955.69051628427, 61976.72720921102, 61997.765687404724, 62018.80595056245, 62039.847998381374, 62060.891830558845, 62081.93744679229, 62102.9848467793, 62124.034030217575, 62145.084996804966, 62166.137746239416, 62187.19227821903, 62208.248592442025, 62229.30668860674, 62250.366566411656, 62271.42822555538, 62292.49166573663, 62313.55688665427, 62334.62388800727, 62355.69266949476, 62376.763230815974, 62397.83557167027, 62418.909691757144, 62439.98559077621, 62461.06326842723, 62482.14272441005, 62503.223958424685, 62524.30697017127, 62545.39175935003, 62566.47832566137, 62587.56666880577, 62608.65678848388, 62629.74868439645, 62650.842356244364, 62671.93780372862, 62693.035026550366, 62714.13402441086, 62735.23479701148, 62756.33734405374, 62777.441665239276, 62798.54776026985, 62819.65562884736, 62840.7652706738, 62861.87668545132, 62882.989872882186, 62904.104832668774, 62925.2215645136, 62946.34006811931, 62967.46034318866, 62988.582389424526, 63009.70620652994, 63030.83179420802, 63051.95915216204, 63073.08828009537, 63094.21917771154, 63115.351844714154, 63136.48628080699, 63157.62248569392, 63178.760459078956, 63199.90020066622, 63221.04171015997, 63242.18498726457, 63263.330031684534, 63284.476843124474, 63305.62542128914, 63326.77576588341, 63347.92787661226, 63369.08175318081, 63390.237395294316, 63411.39480265812, 63432.553974977716, 63453.71491195871, 63474.87761330684, 63496.04207872794, 63517.208307928, 63538.37630061312, 63559.546056489504, 63580.717575263516, 63601.89085664161, 63623.06590033037, 63644.242706036515, 63665.42127346687, 63686.60160232838, 63707.783692328136, 63728.967543173334, 63750.15315457128, 63771.34052622942, 63792.52965785532, 63813.72054915665, 63834.91319984123, 63856.10760961698, 63877.30377819194, 63898.501705274284, 63919.7013905723, 63940.902833794404, 63962.106034649114, 63983.310992845094, 64004.51770809111, 64025.72618009605, 64046.93640856894, 64068.1483932189, 64089.362133755196, 64110.57762988719, 64131.79488132439, 64153.013887776404, 64174.23464895297, 64195.45716456394, 64216.68143431929, 64237.90745792911, 64259.135235103626, 64280.36476555316, 64301.59604898817, 64322.829085119236, 64344.06387365704, 64365.3004143124, 64386.53870679625, 64407.778750819634, 64429.02054609372, 64450.26409232981, 64471.50938923929, 64492.75643653371, 64514.005233924705, 64535.25578112403, 64556.50807784358, 64577.76212379536, 64599.017918691476, 64620.27546224417, 64641.534754165805, 64662.795794168844, 64684.058581965895, 64705.32311726966, 64726.589399792974, 64747.857429248776, 64769.12720535014, 64790.398727810236, 64811.671996342375, 64832.94701065997, 64854.22377047656, 64875.502275505794, 64896.78252546145, 64918.064520057414, 64939.34825900768, 64960.63374202639, 64981.92096882776, 65003.209939126165, 65024.50065263607, 65045.79310907207, 65067.08730814886, 65088.38324958128, 65109.68093308426, 65130.980358372864, 65152.28152516226, 65173.584433167736, 65194.8890821047, 65216.19547168868, 65237.50360163532, 65258.81347166035, 65280.125081479666, 65301.43843080924, 65322.75351936518, 65344.07034686371, 65365.38891302115, 65386.70921755396, 65408.0312601787, 65429.355040612056, 65450.68055857082, 65472.00781377191, 65493.336805932355, 65514.66753476928, 65535.999999999956, 65557.33420134176, 65578.67013851217, 65600.00781122879, 65621.34721920933, 65642.68836217163, 65664.03123983364, 65685.37585191341, 65706.72219812914, 65728.07027819908, 65749.42009184166, 65770.7716387754, 65792.12491871894, 65813.479931391, 65834.83667651046, 65856.1951537963, 65877.5553629676, 65898.91730374355, 65920.28097584349, 65941.64637898684, 65963.01351289316, 65984.38237728208, 66005.75297187339, 66027.12529638696, 66048.4993505428, 66069.87513406102, 66091.25264666184, 66112.63188806562, 66134.01285799277, 66155.39555616389, 66176.77998229963, 66198.1661361208, 66219.55401734827, 66240.9436257031, 66262.33496090639, 66283.7280226794, 66305.12281074344, 66326.51932482002, 66347.9175646307, 66369.31752989716, 66390.71922034123, 66412.12263568479, 66433.52777564988, 66454.93463995864, 66476.34322833332, 66497.75354049628, 66519.16557617, 66540.57933507704, 66561.99481694012, 66583.41202148204, 66604.83094842573, 66626.25159749422, 66647.67396841063, 66669.09806089824, 66690.52387468038, 66711.95140948056, 66733.38066502237, 66754.81164102948, 66776.24433722571, 66797.67875333499, 66819.11488908132, 66840.55274418888, 66861.9923183819, 66883.43361138474, 66904.87662292189, 66926.3213527179, 66947.7678004975, 66969.21596598547, 66990.66584890673, 67012.1174489863, 67033.57076594933, 67055.02579952106, 67076.48254942682, 67097.94101539208, 67119.40119714243, 67140.86309440355, 67162.32670690122, 67183.79203436135, 67205.25907650996, 67226.72783307315, 67248.19830377717, 67269.67048834835, 67291.14438651314, 67312.61999799809, 67334.09732252988, 67355.5763598353, 67377.05710964119, 67398.53957167457, 67420.02374566255, 67441.50963133233, 67462.99722841123, 67484.48653662669, 67505.97755570622, 67527.4702853775, 67548.96472536826, 67570.46087540637, 67591.9587352198, 67613.45830453663, 67634.95958308503, 67656.46257059333, 67677.9672667899, 67699.47367140325, 67720.98178416202, 67742.49160479492, 67764.0031330308, 67785.51636859858, 67807.03131122731, 67828.54796064617, 67850.0663165844, 67871.58637877138, 67893.10814693659, 67914.63162080961, 67936.15680012014, 67957.68368459797, 67979.21227397301, 68000.74256797526, 68022.27456633488, 68043.80826878206, 68065.34367504714, 68086.88078486058, 68108.41959795292, 68129.96011405479, 68151.50233289697, 68173.04625421032, 68194.59187772583, 68216.13920317456, 68237.6882302877, 68259.23895879654, 68280.79138843248, 68302.34551892703, 68323.90135001179, 68345.45888141848, 68367.01811287891, 68388.57904412503, 68410.14167488884, 68431.7060049025, 68453.27203389826, 68474.83976160845, 68496.40918776554, 68517.98031210208, 68539.55313435073, 68561.12765424428, 68582.70387151558, 68604.28178589763, 68625.8613971235, 68647.44270492639, 68669.0257090396, 68690.61040919652, 68712.19680513066, 68733.78489657563, 68755.37468326512, 68776.966164933, 68798.55934131313, 68820.15421213959, 68841.75077714647, 68863.34903606804, 68884.94898863863, 68906.55063459268, 68928.15397366474, 68949.75900558944, 68971.36573010158, 68992.97414693599, 69014.58425582763, 69036.19605651159, 69057.80954872302, 69079.4247321972, 69101.04160666953, 69122.66017187547, 69144.2804275506, 69165.90237343062, 69187.52600925133, 69209.15133474862, 69230.77834965847, 69252.40705371699, 69274.0374466604, 69295.669528225, 69317.30329814719, 69338.9387561635, 69360.57590201053, 69382.214735425, 69403.85525614375, 69425.49746390368, 69447.14135844183, 69468.78693949533, 69490.4342068014, 69512.08316009739, 69533.73379912072, 69555.38612360893, 69577.04013329967, 69598.69582793067, 69620.3532072398, 69642.01227096497, 69663.67301884426, 69685.33545061579, 69706.99956601784, 69728.66536478874, 69750.33284666698, 69772.00201139107, 69793.67285869969, 69815.34538833161, 69837.01960002567, 69858.69549352085, 69880.3730685562, 69902.0523248709, 69923.73326220422, 69945.41588029549, 69967.10017888421, 69988.78615770994, 70010.47381651236, 70032.16315503122, 70053.8541730064, 70075.54687017787, 70097.24124628572, 70118.93730107011, 70140.6350342713, 70162.33444562969, 70184.03553488574, 70205.73830178002, 70227.44274605322, 70249.1488674461, 70270.85666569954, 70292.56614055451, 70314.2772917521, 70335.9901190335, 70357.70462213994, 70379.42080081282, 70401.13865479361, 70422.85818382389, 70444.57938764534, 70466.30226599972, 70488.02681862892, 70509.75304527488, 70531.48094567971, 70553.21051958555, 70574.9417667347, 70596.6746868695, 70618.40927973246, 70640.1455450661, 70661.8834826131, 70683.62309211626, 70705.36437331841, 70727.10732596253, 70748.85194979167, 70770.59824454901, 70792.34620997778, 70814.09584582137, 70835.84715182323, 70857.6001277269, 70879.35477327603, 70901.11108821441, 70922.86907228586, 70944.62872523433, 70966.39004680388, 70988.15303673863, 71009.91769478285, 71031.68402068088, 71053.45201417715, 71075.22167501619, 71096.99300294266, 71118.76599770127, 71140.54065903684, 71162.31698669434, 71184.09498041874, 71205.87463995522, 71227.65596504895, 71249.4389554453, 71271.22361088963, 71293.00993112748, 71314.79791590448, 71336.5875649663, 71358.37887805876, 71380.17185492777, 71401.96649531931, 71423.76279897949, 71445.56076565449, 71467.3603950906, 71489.16168703421, 71510.96464123181, 71532.76925742996, 71554.57553537536, 71576.38347481475, 71598.19307549503, 71620.00433716313, 71641.81725956615, 71663.63184245121, 71685.4480855656, 71707.26598865664, 71729.0855514718, 71750.90677375859, 71772.72965526467, 71794.55419573777, 71816.38039492571, 71838.20825257644, 71860.03776843796, 71881.86894225838, 71903.70177378594, 71925.53626276893, 71947.37240895575, 71969.2102120949, 71991.04967193498, 72012.89078822469, 72034.73356071279, 72056.57798914817, 72078.42407327982, 72100.2718128568, 72122.12120762825, 72143.97225734347, 72165.8249617518, 72187.67932060269, 72209.53533364569, 72231.39300063043, 72253.25232130665, 72275.11329542418, 72296.97592273295, 72318.84020298296, 72340.70613592434, 72362.57372130727, 72384.4429588821, 72406.31384839918, 72428.18638960904, 72450.06058226222, 72471.93642610943, 72493.81392090143, 72515.6930663891, 72537.57386232339, 72559.45630845535, 72581.34040453614, 72603.22615031699, 72625.11354554925, 72647.00258998433, 72668.89328337376, 72690.78562546917, 72712.67961602227, 72734.57525478485, 72756.47254150882, 72778.37147594614, 72800.27205784894, 72822.17428696936, 72844.07816305969, 72865.98368587228, 72887.8908551596, 72909.79967067418, 72931.7101321687, 72953.62223939585, 72975.53599210849, 72997.45139005952, 73019.36843300196, 73041.28712068892, 73063.20745287361, 73085.1294293093, 73107.05304974939, 73128.97831394733, 73150.90522165672, 73172.83377263122, 73194.76396662457, 73216.69580339061, 73238.62928268328, 73260.56440425663, 73282.50116786477, 73304.4395732619, 73326.37962020234, 73348.32130844049, 73370.26463773084, 73392.20960782796, 73414.15621848653, 73436.10446946132, 73458.05436050717, 73480.00589137906, 73501.95906183199, 73523.91387162112, 73545.87032050166, 73567.82840822893, 73589.78813455833, 73611.74949924536, 73633.71250204562, 73655.67714271475, 73677.64342100856, 73699.61133668288, 73721.58088949369, 73743.55207919702, 73765.524905549, 73787.49936830586, 73809.4754672239, 73831.45320205955, 73853.43257256929, 73875.41357850972, 73897.3962196375, 73919.38049570941, 73941.36640648231, 73963.35395171314, 73985.34313115895, 74007.33394457687, 74029.32639172411, 74051.32047235797, 74073.31618623588, 74095.3135331153, 74117.31251275384, 74139.31312490914, 74161.31536933898, 74183.31924580119, 74205.32475405373, 74227.33189385463, 74249.34066496199, 74271.35106713403, 74293.36310012905, 74315.37676370544, 74337.39205762166, 74359.4089816363, 74381.427535508, 74403.4477189955, 74425.46953185767, 74447.4929738534, 74469.5180447417, 74491.54474428168, 74513.57307223254, 74535.60302835355, 74557.63461240409, 74579.6678241436, 74601.70266333164, 74623.73912972784, 74645.77722309194, 74667.81694318372, 74689.85828976311, 74711.9012625901, 74733.94586142474, 74755.99208602723, 74778.0399361578, 74800.08941157682, 74822.1405120447, 74844.19323732196, 74866.24758716923, 74888.30356134719, 74910.36115961662, 74932.42038173841, 74954.4812274735, 74976.54369658297, 74998.60778882793, 75020.6735039696, 75042.74084176932, 75064.80980198846, 75086.88038438853, 75108.9525887311, 75131.02641477782, 75153.10186229047, 75175.17893103085, 75197.25762076092, 75219.33793124268, 75241.41986223822, 75263.50341350974, 75285.5885848195, 75307.67537592987, 75329.76378660332, 75351.85381660235, 75373.94546568961, 75396.0387336278, 75418.13362017972, 75440.23012510825, 75462.32824817636, 75484.42798914711, 75506.52934778365, 75528.63232384919, 75550.73691710707, 75572.8431273207, 75594.95095425354, 75617.0603976692, 75639.17145733131, 75661.28413300365, 75683.39842445003, 75705.5143314344, 75727.63185372074, 75749.75099107318, 75771.87174325586, 75793.99411003308, 75816.11809116918, 75838.24368642858, 75860.37089557585, 75882.49971837556, 75904.63015459242, 75926.76220399122, 75948.89586633682, 75971.03114139418, 75993.16802892832, 76015.3065287044, 76037.4466404876, 76059.58836404321, 76081.73169913665, 76103.87664553335, 76126.02320299888, 76148.17137129887, 76170.32115019904, 76192.4725394652, 76214.62553886326, 76236.78014815917, 76258.93636711901, 76281.09419550892, 76303.25363309514, 76325.41467964397, 76347.57733492184, 76369.74159869523, 76391.90747073069, 76414.07495079488, 76436.24403865456, 76458.41473407655, 76480.58703682775, 76502.76094667517, 76524.93646338588, 76547.11358672705, 76569.29231646592, 76591.47265236982, 76613.65459420616, 76635.83814174247, 76658.02329474631, 76680.21005298535, 76702.39841622734, 76724.58838424014, 76746.77995679164, 76768.97313364987, 76791.1679145829, 76813.3642993589, 76835.56228774616, 76857.76187951297, 76879.9630744278, 76902.16587225911, 76924.37027277553, 76946.57627574573, 76968.78388093844, 76990.99308812252, 77013.2038970669, 77035.41630754055, 77057.63031931262, 77079.84593215224, 77102.0631458287, 77124.28196011129, 77146.50237476948, 77168.72438957276, 77190.94800429072, 77213.17321869303, 77235.40003254944, 77257.6284456298, 77279.85845770403, 77302.09006854212, 77324.32327791417, 77346.55808559034, 77368.79449134089, 77391.03249493614, 77413.27209614652, 77435.51329474253, 77457.75609049473, 77480.0004831738, 77502.2464725505, 77524.49405839563, 77546.74324048011, 77568.99401857494, 77591.2463924512, 77613.50036188003, 77635.75592663266, 77658.01308648044, 77680.27184119476, 77702.53219054709, 77724.79413430902, 77747.0576722522, 77769.32280414834, 77791.58952976925, 77813.85784888684, 77836.12776127306, 77858.3992667, 77880.67236493979, 77902.94705576463, 77925.22333894683, 77947.50121425878, 77969.78068147293, 77992.06174036184, 78014.34439069813, 78036.62863225449, 78058.91446480375, 78081.20188811873, 78103.49090197241, 78125.78150613782, 78148.07370038806, 78170.36748449634, 78192.66285823593, 78214.95982138017, 78237.2583737025, 78259.55851497645, 78281.86024497561, 78304.16356347366, 78326.46847024436, 78348.77496506154, 78371.08304769913, 78393.3927179311, 78415.70397553158, 78438.0168202747, 78460.3312519347, 78482.6472702859, 78504.96487510273, 78527.28406615963, 78549.6048432312, 78571.92720609205, 78594.25115451691, 78616.5766882806, 78638.90380715799, 78661.23251092403, 78683.56279935378, 78705.89467222235, 78728.22812930495, 78750.56317037686, 78772.89979521342, 78795.2380035901, 78817.5777952824, 78839.91917006593, 78862.26212771636, 78884.60666800945, 78906.95279072104, 78929.30049562705, 78951.64978250346, 78974.00065112638, 78996.35310127193, 79018.70713271636, 79041.06274523598, 79063.41993860717, 79085.77871260644, 79108.13906701028, 79130.50100159539, 79152.86451613842, 79175.22961041618, 79197.59628420553, 79219.96453728342, 79242.33436942687, 79264.70578041299, 79287.07877001894, 79309.45333802201, 79331.82948419951, 79354.20720832888, 79376.58651018758, 79398.96738955322, 79421.34984620343, 79443.73387991595, 79466.11949046858, 79488.50667763922, 79510.89544120582, 79533.28578094643, 79555.67769663916, 79578.07118806223, 79600.4662549939, 79622.86289721253, 79645.26111449653, 79667.66090662447, 79690.06227337488, 79712.46521452646, 79734.86972985794, 79757.27581914813, 79779.68348217595, 79802.09271872038, 79824.50352856045, 79846.91591147533, 79869.3298672442, 79891.74539564634, 79914.16249646115, 79936.58116946805, 79959.00141444655, 79981.42323117626, 80003.84661943685, 80026.27157900808, 80048.69810966977, 80071.12621120183, 80093.55588338424, 80115.98712599705, 80138.41993882041, 80160.85432163453, 80183.29027421969, 80205.72779635628, 80228.16688782471, 80250.60754840553, 80273.04977787934, 80295.49357602678, 80317.93894262865, 80340.38587746573, 80362.83438031895, 80385.28445096928, 80407.73608919779, 80430.1892947856, 80452.64406751392, 80475.10040716403, 80497.55831351732, 80520.01778635521, 80542.47882545921, 80564.94143061092, 80587.405601592, 80609.8713381842, 80632.33864016933, 80654.8075073293, 80677.27793944607, 80699.74993630168, 80722.22349767828, 80744.69862335804, 80767.17531312324, 80789.65356675624, 80812.13338403947, 80834.6147647554, 80857.09770868665, 80879.58221561585, 80902.06828532573, 80924.5559175991, 80947.04511221882, 80969.53586896788, 80992.02818762927, 81014.52206798614, 81037.01750982161, 81059.514512919, 81082.01307706161, 81104.51320203283, 81127.01488761618, 81149.5181335952, 81172.0229397535, 81194.5293058748, 81217.0372317429, 81239.54671714164, 81262.05776185496, 81284.57036566685, 81307.0845283614, 81329.60024972277, 81352.11752953519, 81374.63636758295, 81397.15676365045, 81419.67871752213, 81442.20222898253, 81464.72729781622, 81487.25392380793, 81509.78210674238, 81532.3118464044, 81554.8431425789, 81577.37599505084, 81599.91040360527, 81622.44636802733, 81644.98388810222, 81667.52296361518, 81690.06359435158, 81712.60578009684, 81735.14952063645, 81757.69481575597, 81780.24166524105, 81802.79006887741, 81825.34002645082, 81847.89153774717, 81870.44460255238, 81892.99922065248, 81915.5553918335, 81938.11311588167, 81960.67239258319, 81983.23322172434, 82005.79560309154, 82028.35953647122, 82050.9250216499, 82073.49205841421, 82096.06064655079, 82118.63078584638, 82141.20247608784, 82163.77571706203, 82186.35050855593, 82208.92685035657, 82231.50474225105, 82254.08418402658, 82276.66517547039, 82299.24771636983, 82321.83180651232, 82344.4174456853, 82367.00463367635, 82389.59337027307, 82412.18365526316, 82434.77548843439, 82457.3688695746, 82479.9637984717, 82502.56027491367, 82525.1582986886, 82547.7578695846, 82570.35898738986, 82592.96165189268, 82615.5658628814, 82638.17162014442, 82660.77892347026, 82683.38777264747, 82705.99816746471, 82728.61010771066, 82751.22359317412, 82773.83862364394, 82796.45519890904, 82819.07331875843, 82841.69298298119, 82864.31419136643, 82886.93694370337, 82909.56123978132, 82932.18707938964, 82954.81446231774, 82977.44338835512, 83000.07385729137, 83022.70586891612, 83045.33942301909, 83067.97451939009, 83090.61115781896, 83113.24933809563, 83135.8890600101, 83158.53032335246, 83181.17312791286, 83203.8174734815, 83226.46335984867, 83249.11078680474, 83271.75975414013, 83294.41026164537, 83317.062309111, 83339.7158963277, 83362.37102308616, 83385.02768917716, 83407.68589439159, 83430.34563852036, 83453.00692135448, 83475.669742685, 83498.33410230308, 83520.99999999994, 83543.66743556687, 83566.33640879519, 83589.00691947635, 83611.67896740185, 83634.35255236324, 83657.02767415217, 83679.70433256036, 83702.38252737955, 83725.06225840164, 83747.74352541851, 83770.42632822218, 83793.11066660468, 83815.79654035816, 83838.48394927483, 83861.17289314694, 83883.86337176684, 83906.55538492696, 83929.24893241975, 83951.9440140378, 83974.6406295737, 83997.33877882015, 84020.03846156993, 84042.73967761586, 84065.44242675084, 84088.14670876783, 84110.85252345992, 84133.55987062017, 84156.2687500418, 84178.97916151803, 84201.6911048422, 84224.40457980771, 84247.119586208, 84269.83612383662, 84292.55419248715, 84315.27379195328, 84337.99492202874, 84360.71758250732, 84383.44177318295, 84406.16749384951, 84428.89474430107, 84451.62352433169, 84474.35383373554, 84497.08567230683, 84519.81903983987, 84542.553936129, 84565.29036096868, 84588.0283141534, 84610.76779547772, 84633.50880473628, 84656.25134172381, 84678.99540623507, 84701.74099806492, 84724.48811700825, 84747.23676286006, 84769.9869354154, 84792.73863446941, 84815.49185981725, 84838.2466112542, 84861.00288857557, 84883.76069157677, 84906.52002005326, 84929.28087380057, 84952.0432526143, 84974.80715629015, 84997.5725846238, 85020.33953741111, 85043.10801444795, 85065.87801553024, 85088.64954045399, 85111.4225890153, 85134.19716101032, 85156.97325623524, 85179.75087448637, 85202.53001556007, 85225.31067925273, 85248.09286536086, 85270.87657368102, 85293.66180400981, 85316.44855614395, 85339.23682988019, 85362.02662501535, 85384.81794134635, 85407.61077867013, 85430.40513678372, 85453.20101548426, 85475.99841456886, 85498.7973338348, 85521.59777307935, 85544.3997320999, 85567.2032106939, 85590.00820865881, 85612.81472579224, 85635.62276189183, 85658.43231675526, 85681.24339018033, 85704.05598196488, 85726.8700919068, 85749.68571980408, 85772.50286545476, 85795.32152865696, 85818.14170920885, 85840.96340690868, 85863.78662155475, 85886.61135294545, 85909.43760087922, 85932.26536515457, 85955.09464557009, 85977.92544192442, 86000.75775401627, 86023.59158164443, 86046.42692460775, 86069.26378270512, 86092.10215573556, 86114.94204349807, 86137.7834457918, 86160.62636241592, 86183.47079316968, 86206.31673785238, 86229.1641962634, 86252.0131682022, 86274.8636534683, 86297.71565186126, 86320.56916318073, 86343.42418722642, 86366.28072379812, 86389.13877269567, 86411.99833371898, 86434.85940666801, 86457.72199134283, 86480.58608754353, 86503.45169507028, 86526.31881372335, 86549.18744330303, 86572.05758360968, 86594.92923444376, 86617.80239560577, 86640.67706689627, 86663.5532481159, 86686.43093906538, 86709.31013954544, 86732.19084935696, 86755.07306830082, 86777.95679617795, 86800.84203278944, 86823.72877793635, 86846.61703141985, 86869.50679304118, 86892.39806260161, 86915.29083990252, 86938.1851247453, 86961.08091693149, 86983.97821626259, 87006.87702254027, 87029.77733556618, 87052.67915514208, 87075.5824810698, 87098.48731315118, 87121.39365118822, 87144.3014949829, 87167.21084433729, 87190.12169905353, 87213.03405893384, 87235.9479237805, 87258.86329339583, 87281.78016758224, 87304.69854614217, 87327.61842887818, 87350.53981559286, 87373.46270608885, 87396.3871001689, 87419.31299763577, 87442.24039829234, 87465.16930194154, 87488.09970838632, 87511.03161742973, 87533.9650288749, 87556.89994252501, 87579.83635818327, 87602.77427565302, 87625.71369473761, 87648.65461524049, 87671.59703696515, 87694.54095971514, 87717.4863832941, 87740.43330750574, 87763.38173215378, 87786.33165704206, 87809.28308197446, 87832.23600675492, 87855.19043118745, 87878.14635507615, 87901.10377822515, 87924.06270043863, 87947.02312152089, 87969.98504127625, 87992.94845950909, 88015.9133760239, 88038.87979062517, 88061.84770311751, 88084.81711330556, 88107.78802099405, 88130.76042598773, 88153.73432809146, 88176.70972711014, 88199.68662284875, 88222.6650151123, 88245.6449037059, 88268.62628843471, 88291.60916910395, 88314.5935455189, 88337.57941748491, 88360.56678480741, 88383.55564729185, 88406.5460047438, 88429.53785696882, 88452.53120377261, 88475.52604496089, 88498.52238033945, 88521.52020971413, 88544.51953289087, 88567.52034967564, 88590.5226598745, 88613.52646329353, 88636.53175973892, 88659.5385490169, 88682.54683093374, 88705.55660529585, 88728.56787190959, 88751.58063058149, 88774.59488111807, 88797.61062332596, 88820.62785701183, 88843.6465819824, 88866.66679804446, 88889.68850500489, 88912.71170267061, 88935.73639084859, 88958.7625693459, 88981.79023796963, 89004.81939652696, 89027.85004482511, 89050.88218267141, 89073.9158098732, 89096.95092623789, 89119.98753157297, 89143.025625686, 89166.06520838456, 89189.10627947636, 89212.14883876909, 89235.19288607058, 89258.23842118867, 89281.28544393127, 89304.33395410638, 89327.38395152202, 89350.4354359863, 89373.4884073074, 89396.54286529354, 89419.598809753, 89442.65624049417, 89465.71515732541, 89488.77556005522, 89511.83744849212, 89534.90082244476, 89557.96568172173, 89581.03202613181, 89604.09985548374, 89627.1691695864, 89650.23996824867, 89673.31225127954, 89696.38601848802, 89719.4612696832, 89742.53800467425, 89765.61622327036, 89788.69592528083, 89811.77711051499, 89834.85977878221, 89857.94392989198, 89881.0295636538, 89904.11667987728, 89927.20527837201, 89950.29535894774, 89973.38692141422, 89996.47996558127, 90019.57449125877, 90042.67049825669, 90065.76798638502, 90088.86695545384, 90111.96740527326, 90135.06933565348, 90158.17274640476, 90181.2776373374, 90204.3840082618, 90227.49185898836, 90250.60118932759, 90273.71199909004, 90296.82428808633, 90319.93805612714, 90343.05330302319, 90366.1700285853, 90389.2882326243, 90412.40791495114, 90435.52907537678, 90458.65171371226, 90481.77582976868, 90504.90142335721, 90528.02849428906, 90551.1570423755, 90574.28706742791, 90597.41856925764, 90620.5515476762, 90643.68600249507, 90666.82193352585, 90689.95934058019, 90713.09822346977, 90736.23858200636, 90759.3804160018, 90782.52372526795, 90805.66850961676, 90828.81476886023, 90851.96250281043, 90875.11171127946, 90898.26239407953, 90921.41455102284, 90944.56818192174, 90967.72328658856, 90990.87986483572, 91014.03791647572, 91037.19744132107, 91060.35843918439, 91083.52090987834, 91106.68485321563, 91129.85026900904, 91153.0171570714, 91176.18551721562, 91199.35534925465, 91222.52665300149, 91245.69942826925, 91268.87367487104, 91292.04939262004, 91315.22658132955, 91338.40524081283, 91361.58537088329, 91384.76697135434, 91407.95004203948, 91431.13458275225, 91454.32059330626, 91477.50807351517, 91500.69702319271, 91523.88744215269, 91547.07933020893, 91570.27268717533, 91593.46751286586, 91616.66380709453, 91639.86156967544, 91663.06080042271, 91686.26149915057, 91709.46366567322, 91732.66729980502, 91755.87240136032, 91779.07897015357, 91802.28700599924, 91825.49650871192, 91848.70747810617, 91871.91991399668, 91895.13381619815, 91918.34918452542, 91941.56601879328, 91964.78431881666, 91988.0040844105, 92011.22531538982, 92034.44801156971, 92057.67217276528, 92080.89779879176, 92104.12488946435, 92127.35344459841, 92150.58346400928, 92173.81494751238, 92197.04789492322, 92220.28230605731, 92243.51818073026, 92266.75551875774, 92289.99431995547, 92313.2345841392, 92336.47631112477, 92359.71950072808, 92382.96415276507, 92406.21026705173, 92429.45784340418, 92452.70688163847, 92475.95738157081, 92499.20934301744, 92522.46276579465, 92545.7176497188, 92568.9739946063, 92592.23180027361, 92615.49106653726, 92638.75179321383, 92662.01398011995, 92685.27762707233, 92708.54273388773, 92731.80930038294, 92755.07732637487, 92778.34681168041, 92801.61775611658, 92824.89015950038, 92848.16402164895, 92871.43934237942, 92894.71612150903, 92917.99435885502, 92941.27405423473, 92964.55520746557, 92987.83781836496, 93011.12188675042, 93034.40741243947, 93057.69439524977, 93080.98283499895, 93104.27273150477, 93127.564084585, 93150.8568940575, 93174.15115974014, 93197.44688145092, 93220.7440590078, 93244.04269222889, 93267.34278093232, 93290.64432493623, 93313.94732405891, 93337.25177811863, 93360.55768693375, 93383.8650503227, 93407.17386810391, 93430.48414009594, 93453.79586611736, 93477.10904598678, 93500.42367952294, 93523.73976654456, 93547.05730687045, 93570.37630031949, 93593.69674671057, 93617.0186458627, 93640.3419975949, 93663.66680172624, 93686.99305807588, 93710.32076646303, 93733.64992670694, 93756.98053862691, 93780.31260204234, 93803.64611677264, 93826.9810826373, 93850.31749945584, 93873.65536704786, 93896.99468523303, 93920.33545383104, 93943.67767266167, 93967.0213415447, 93990.36646030005, 94013.71302874765, 94037.06104670743, 94060.4105139995, 94083.7614304439, 94107.11379586085, 94130.46761007051, 94153.82287289316, 94177.17958414911, 94200.53774365876, 94223.89735124253, 94247.25840672091, 94270.62090991443, 94293.98486064372, 94317.35025872942, 94340.71710399224, 94364.08539625294, 94387.45513533235, 94410.82632105134, 94434.19895323085, 94457.57303169188, 94480.94855625545, 94504.32552674267, 94527.70394297468, 94551.08380477272, 94574.46511195804, 94597.84786435193, 94621.23206177581, 94644.61770405111, 94668.00479099927, 94691.39332244187, 94714.78329820049, 94738.1747180968, 94761.56758195249, 94784.9618895893, 94808.35764082908, 94831.7548354937, 94855.15347340508, 94878.55355438517, 94901.95507825605, 94925.35804483978, 94948.76245395854, 94972.16830543448, 94995.57559908989, 95018.98433474707, 95042.3945122284, 95065.80613135628, 95089.21919195318, 95112.63369384164, 95136.04963684424, 95159.46702078362, 95182.88584548247, 95206.30611076353, 95229.72781644962, 95253.15096236358, 95276.57554832831, 95300.00157416679, 95323.42903970205, 95346.85794475715, 95370.28828915521, 95393.72007271941, 95417.15329527302, 95440.5879566393, 95464.02405664159, 95487.46159510332, 95510.9005718479, 95534.34098669887, 95557.78283947978, 95581.22613001426, 95604.67085812596, 95628.1170236386, 95651.56462637598, 95675.01366616192, 95698.4641428203, 95721.91605617508, 95745.36940605023, 95768.8241922698, 95792.28041465791, 95815.7380730387, 95839.19716723639, 95862.65769707522, 95886.11966237954, 95909.58306297369, 95933.04789868211, 95956.51416932927, 95979.98187473971, 96003.451014738, 96026.92158914881, 96050.39359779679, 96073.86704050671, 96097.34191710339, 96120.81822741163, 96144.29597125638, 96167.77514846258, 96191.25575885524, 96214.73780225945, 96238.2212785003, 96261.70618740298, 96285.19252879272, 96308.68030249479, 96332.16950833453, 96355.66014613732, 96379.1522157286, 96402.64571693387, 96426.14064957868, 96449.6370134886, 96473.13480848931, 96496.63403440651, 96520.13469106596, 96543.63677829347, 96567.1402959149, 96590.64524375615, 96614.15162164322, 96637.65942940213, 96661.16866685895, 96684.6793338398, 96708.19143017087, 96731.7049556784, 96755.21991018867, 96778.73629352801, 96802.25410552284, 96825.77334599958, 96849.29401478474, 96872.81611170487, 96896.33963658658, 96919.86458925651, 96943.39096954139, 96966.91877726796, 96990.44801226305, 97013.97867435352, 97037.5107633663, 97061.04427912834, 97084.57922146667, 97108.11559020838, 97131.6533851806, 97155.19260621049, 97178.73325312529, 97202.2753257523, 97225.81882391885, 97249.36374745233, 97272.91009618019, 97296.4578699299, 97320.00706852904, 97343.5576918052, 97367.10973958601, 97390.6632116992, 97414.2181079725, 97437.77442823374, 97461.33217231077, 97484.89134003149, 97508.4519312239, 97532.01394571598, 97555.57738333581, 97579.14224391151, 97602.70852727126, 97626.27623324326, 97649.84536165581, 97673.41591233722, 97696.98788511587, 97720.56127982022, 97744.1360962787, 97767.71233431989, 97791.28999377234, 97814.86907446472, 97838.44957622568, 97862.031498884, 97885.61484226845, 97909.19960620788, 97932.7857905312, 97956.37339506732, 97979.96241964525, 98003.55286409408, 98027.14472824286, 98050.73801192077, 98074.332714957, 98097.9288371808, 98121.52637842152, 98145.12533850846, 98168.72571727107, 98192.32751453877, 98215.93073014112, 98239.53536390766, 98263.14141566801, 98286.74888525181, 98310.35777248882, 98333.96807720876, 98357.57979924149, 98381.19293841685, 98404.80749456478, 98428.42346751524, 98452.04085709827, 98475.65966314392, 98499.27988548232, 98522.90152394367, 98546.52457835816, 98570.1490485561, 98593.77493436779, 98617.40223562362, 98641.03095215405, 98664.66108378951, 98688.29263036055, 98711.92559169777, 98735.5599676318, 98759.1957579933, 98782.83296261301, 98806.47158132173, 98830.11161395028, 98853.75306032957, 98877.39592029051, 98901.0401936641, 98924.68588028138, 98948.33297997342, 98971.98149257139, 98995.63141790645, 99019.28275580984, 99042.93550611287, 99066.58966864688, 99090.24524324323, 99113.9022297334, 99137.56062794886, 99161.22043772115, 99184.88165888184, 99208.54429126263, 99232.20833469517, 99255.87378901121, 99279.54065404256, 99303.20892962103, 99326.87861557852, 99350.54971174701, 99374.22221795844, 99397.89613404489, 99421.57145983842, 99445.24819517121, 99468.92633987544, 99492.60589378334, 99516.28685672721, 99539.9692285394, 99563.65300905229, 99587.33819809832, 99611.02479551, 99634.71280111987, 99658.4022147605, 99682.09303626454, 99705.7852654647, 99729.47890219369, 99753.17394628433, 99776.87039756944, 99800.56825588191, 99824.26752105469, 99847.96819292076, 99871.67027131317, 99895.373756065, 99919.07864700939, 99942.78494397952, 99966.49264680862, 99990.20175533001, 100013.91226937699, 100037.62418878295, 100061.33751338134, 100085.05224300563, 100108.76837748935, 100132.4859166661, 100156.2048603695, 100179.92520843323, 100203.64696069101, 100227.37011697664, 100251.09467712394, 100274.82064096678, 100298.54800833909, 100322.27677907483, 100346.00695300807, 100369.73852997283, 100393.47150980328, 100417.20589233354, 100440.94167739789, 100464.67886483055, 100488.41745446586, 100512.1574461382, 100535.89883968196, 100559.64163493161, 100583.3858317217, 100607.13142988674, 100630.87842926137, 100654.62682968024, 100678.37663097809, 100702.12783298964, 100725.88043554971, 100749.63443849317, 100773.38984165489, 100797.14664486986, 100820.90484797307, 100844.66445079957, 100868.42545318443, 100892.18785496285, 100915.95165596998, 100939.71685604108, 100963.48345501146, 100987.25145271645, 101011.02084899142, 101034.79164367184, 101058.56383659315, 101082.33742759094, 101106.11241650078, 101129.88880315828, 101153.66658739912, 101177.44576905905, 101201.22634797383, 101225.00832397929, 101248.7916969113, 101272.5764666058, 101296.36263289873, 101320.15019562612, 101343.93915462404, 101367.7295097286, 101391.52126077596, 101415.31440760233, 101439.10895004397, 101462.9048879372, 101486.70222111835, 101510.50094942382, 101534.30107269008, 101558.10259075361, 101581.90550345098, 101605.70981061876, 101629.5155120936, 101653.32260771218, 101677.13109731126, 101700.9409807276, 101724.75225779804, 101748.56492835947, 101772.3789922488, 101796.19444930303, 101820.01129935916, 101843.82954225427, 101867.64917782549, 101891.47020590997, 101915.29262634492, 101939.11643896763, 101962.94164361537, 101986.76824012553, 102010.59622833549, 102034.42560808272, 102058.25637920471, 102082.08854153901, 102105.92209492321, 102129.75703919494, 102153.59337419191, 102177.43109975185, 102201.27021571253, 102225.1107219118, 102248.95261818753, 102272.79590437764, 102296.64058032009, 102320.48664585294, 102344.33410081422, 102368.18294504205, 102392.03317837461, 102415.88480065008, 102439.73781170673, 102463.59221138287, 102487.44799951684, 102511.30517594703, 102535.1637405119, 102559.02369304994, 102582.88503339965, 102606.74776139966, 102630.6118768886, 102654.47737970512, 102678.34426968795, 102702.21254667587, 102726.08221050771, 102749.95326102231, 102773.8256980586, 102797.69952145554, 102821.57473105213, 102845.45132668741, 102869.32930820051, 102893.20867543056, 102917.08942821674, 102940.97156639831, 102964.85508981455, 102988.73999830478, 103012.6262917084, 103036.51396986481, 103060.40303261351, 103084.293479794, 103108.18531124585, 103132.07852680866, 103155.97312632212, 103179.8691096259, 103203.76647655977, 103227.66522696352, 103251.565360677, 103275.46687754011, 103299.36977739276, 103323.27406007495, 103347.1797254267, 103371.08677328809, 103394.99520349925, 103418.90501590034, 103442.81621033157, 103466.7287866332, 103490.64274464553, 103514.55808420894, 103538.4748051638, 103562.39290735057, 103586.31239060973, 103610.23325478184, 103634.15549970744, 103658.0791252272, 103682.00413118176, 103705.93051741188, 103729.8582837583, 103753.78743006183, 103777.71795616334, 103801.64986190372, 103825.58314712394, 103849.51781166499, 103873.4538553679, 103897.39127807376, 103921.33007962372, 103945.27025985895, 103969.21181862066, 103993.15475575015, 104017.0990710887, 104041.0447644777, 104064.99183575854, 104088.94028477269, 104112.89011136163, 104136.84131536692, 104160.79389663014, 104184.74785499295, 104208.70319029699, 104232.65990238401, 104256.61799109579, 104280.57745627411, 104304.53829776088, 104328.50051539797, 104352.46410902737, 104376.42907849104, 104400.39542363104, 104424.36314428947, 104448.33224030846, 104472.3027115302, 104496.27455779689, 104520.24777895081, 104544.22237483428, 104568.19834528965, 104592.17569015936, 104616.15440928582, 104640.13450251156, 104664.11596967909, 104688.09881063103, 104712.08302520998, 104736.06861325864, 104760.05557461972, 104784.043909136, 104808.03361665027, 104832.0246970054, 104856.01715004431, 104880.01097560991, 104904.00617354522, 104928.00274369326, 104952.00068589713, 104975.99999999993, 105000.00068584486, 105024.00274327511, 105048.00617213396, 105072.01097226472, 105096.0171435107, 105120.02468571535, 105144.03359872208, 105168.04388237436, 105192.05553651575, 105216.06856098982, 105240.08295564016, 105264.09872031047, 105288.11585484444, 105312.13435908582, 105336.1542328784, 105360.17547606604, 105384.19808849262, 105408.22207000206, 105432.24742043833, 105456.27413964548, 105480.30222746753, 105504.33168374863, 105528.36250833291, 105552.39470106458, 105576.42826178786, 105600.46319034706, 105624.49948658649, 105648.53715035053, 105672.5761814836, 105696.61657983017, 105720.65834523473, 105744.70147754184, 105768.74597659608, 105792.79184224212, 105816.83907432464, 105840.88767268835, 105864.93763717801, 105888.98896763846, 105913.04166391456, 105937.09572585119, 105961.15115329332, 105985.20794608595, 106009.2661040741, 106033.32562710284, 106057.3865150173, 106081.44876766266, 106105.51238488412, 106129.57736652695, 106153.64371243643, 106177.71142245791, 106201.78049643678, 106225.85093421848, 106249.92273564848, 106273.99590057228, 106298.07042883546, 106322.14632028362, 106346.2235747624, 106370.30219211751, 106394.38217219469, 106418.4635148397, 106442.54621989837, 106466.63028721658, 106490.71571664023, 106514.8025080153, 106538.89066118775, 106562.98017600364, 106587.07105230905, 106611.16328995011, 106635.25688877302, 106659.35184862395, 106683.44816934918, 106707.54585079502, 106731.64489280782, 106755.74529523395, 106779.84705791986, 106803.95018071201, 106828.05466345693, 106852.16050600118, 106876.26770819136, 106900.37626987413, 106924.48619089619, 106948.59747110425, 106972.71011034511, 106996.82410846559, 107020.93946531255, 107045.05618073288, 107069.17425457356, 107093.29368668159, 107117.41447690397, 107141.53662508781, 107165.66013108024, 107189.7849947284, 107213.91121587952, 107238.03879438085, 107262.16773007967, 107286.29802282334, 107310.42967245923, 107334.56267883476, 107358.69704179741, 107382.83276119467, 107406.96983687414, 107431.10826868335, 107455.24805646998, 107479.38920008171, 107503.53169936626, 107527.6755541714, 107551.82076434491, 107575.96732973469, 107600.11525018861, 107624.26452555461, 107648.41515568066, 107672.56714041479, 107696.72047960508, 107720.87517309963, 107745.03122074658, 107769.18862239414, 107793.34737789052, 107817.50748708403, 107841.66894982298, 107865.83176595572, 107889.99593533068, 107914.16145779629, 107938.32833320105, 107962.49656139348, 107986.66614222217, 108010.83707553573, 108035.00936118282, 108059.18299901215, 108083.35798887245, 108107.53433061253, 108131.71202408121, 108155.89106912735, 108180.07146559987, 108204.25321334775, 108228.43631221994, 108252.62076206553, 108276.80656273357, 108300.9937140732, 108325.18221593359, 108349.37206816394, 108373.5632706135, 108397.75582313156, 108421.94972556747, 108446.1449777706, 108470.34157959036, 108494.53953087622, 108518.7388314777, 108542.9394812443, 108567.14148002566, 108591.34482767139, 108615.54952403114, 108639.75556895464, 108663.96296229165, 108688.17170389196, 108712.38179360541, 108736.59323128188, 108760.80601677128, 108785.02014992358, 108809.23563058881, 108833.45245861699, 108857.67063385822, 108881.89015616261, 108906.11102538036, 108930.33324136169, 108954.55680395682, 108978.78171301607, 109003.00796838978, 109027.2355699283, 109051.4645174821, 109075.69481090162, 109099.92645003737, 109124.15943473988, 109148.39376485976, 109172.62944024763, 109196.86646075416, 109221.10482623006, 109245.3445365261, 109269.58559149304, 109293.82799098175, 109318.0717348431, 109342.316822928, 109366.56325508743, 109390.81103117237, 109415.06015103386, 109439.31061452301, 109463.56242149093, 109487.8155717888, 109512.0700652678, 109536.3259017792, 109560.58308117429, 109584.8416033044, 109609.1014680209, 109633.36267517522, 109657.62522461878, 109681.88911620309, 109706.15434977971, 109730.4209252002, 109754.68884231619, 109778.95810097932, 109803.22870104131, 109827.50064235389, 109851.77392476884, 109876.048548138, 109900.32451231324, 109924.60181714644, 109948.88046248957, 109973.1604481946, 109997.44177411357, 110021.72444009855, 110046.00844600165, 110070.29379167501, 110094.58047697082, 110118.86850174134, 110143.15786583882, 110167.44856911557, 110191.74061142397, 110216.0339926164, 110240.32871254528, 110264.62477106311, 110288.9221680224, 110313.22090327571, 110337.52097667565, 110361.82238807483, 110386.12513732594, 110410.42922428172, 110434.7346487949, 110459.04141071832, 110483.34950990479, 110507.6589462072, 110531.96971947847, 110556.28182957157, 110580.5952763395, 110604.91005963532, 110629.2261793121, 110653.54363522294, 110677.86242722106, 110702.18255515961, 110726.50401889188, 110750.82681827113, 110775.1509531507, 110799.47642338395, 110823.80322882428, 110848.13136932514, 110872.46084474004, 110896.79165492248, 110921.12379972603, 110945.4572790043, 110969.79209261097, 110994.12824039967, 111018.46572222418, 111042.80453793824, 111067.14468739566, 111091.48617045028, 111115.82898695602, 111140.1731367668, 111164.51861973657, 111188.86543571934, 111213.21358456917, 111237.56306614014, 111261.91388028639, 111286.26602686207, 111310.6195057214, 111334.97431671864, 111359.33045970804, 111383.68793454397, 111408.04674108078, 111432.40687917286, 111456.76834867468, 111481.13114944073, 111505.49528132551, 111529.8607441836, 111554.22753786962, 111578.59566223821, 111602.96511714405, 111627.33590244185, 111651.7080179864, 111676.08146363248, 111700.45623923496, 111724.8323446487, 111749.20977972864, 111773.58854432974, 111797.968638307, 111822.35006151545, 111846.73281381019, 111871.11689504632, 111895.50230507903, 111919.88904376348, 111944.27711095495, 111968.6665065087, 111993.05723028004, 112017.44928212435, 112041.842661897, 112066.23736945343, 112090.63340464912, 112115.0307673396, 112139.42945738042, 112163.82947462716, 112188.23081893545, 112212.63349016097, 112237.03748815943, 112261.44281278658, 112285.84946389822, 112310.25744135017, 112334.66674499828, 112359.07737469849, 112383.48933030672, 112407.90261167898, 112432.31721867126, 112456.73315113965, 112481.15040894024, 112505.56899192919, 112529.98889996266, 112554.41013289688, 112578.83269058811, 112603.25657289263, 112627.6817796668, 112652.10831076698, 112676.53616604958, 112700.96534537108, 112725.39584858794, 112749.82767555672, 112774.26082613398, 112798.6953001763, 112823.13109754038, 112847.56821808286, 112872.00666166049, 112896.44642813003, 112920.88751734828, 112945.32992917208, 112969.7736634583, 112994.21872006389, 113018.66509884578, 113043.11279966097, 113067.56182236652, 113092.01216681948, 113116.46383287695, 113140.9168203961, 113165.37112923413, 113189.82675924824, 113214.28371029573, 113238.74198223387, 113263.20157492002, 113287.66248821156, 113312.12472196593, 113336.58827604055, 113361.05315029295, 113385.51934458067, 113409.98685876124, 113434.45569269233, 113458.92584623155, 113483.39731923661, 113507.87011156522, 113532.34422307517, 113556.81965362425, 113581.2964030703, 113605.77447127122, 113630.2538580849, 113654.73456336933, 113679.21658698248, 113703.69992878241, 113728.18458862716, 113752.67056637487, 113777.15786188368, 113801.64647501177, 113826.13640561736, 113850.62765355874, 113875.12021869418, 113899.61410088204, 113924.1092999807, 113948.60581584855, 113973.10364834408, 113997.60279732574, 114022.1032626521, 114046.60504418172, 114071.10814177318, 114095.61255528513, 114120.11828457628, 114144.62532950533, 114169.13368993104, 114193.6433657122, 114218.15435670764, 114242.66666277626, 114267.18028377692, 114291.69521956862, 114316.21147001031, 114340.72903496103, 114365.24791427983, 114389.7681078258, 114414.2896154581, 114438.81243703587, 114463.33657241837, 114487.8620214648, 114512.38878403447, 114536.91685998671, 114561.44624918088, 114585.97695147636, 114610.5089667326, 114635.04229480909, 114659.57693556532, 114684.11288886084, 114708.65015455526, 114733.18873250818, 114757.72862257928, 114782.26982462825, 114806.81233851484, 114831.35616409882, 114855.90130124, 114880.44774979822, 114904.99550963337, 114929.5445806054, 114954.09496257425, 114978.64665539993, 115003.19965894247, 115027.75397306195, 115052.30959761847, 115076.86653247218, 115101.42477748329, 115125.984332512, 115150.54519741859, 115175.10737206334, 115199.67085630659, 115224.23565000873, 115248.80175303014, 115273.3691652313, 115297.93788647266, 115322.50791661476, 115347.07925551817, 115371.65190304347, 115396.2258590513, 115420.80112340231, 115445.37769595724, 115469.95557657682, 115494.53476512182, 115519.11526145306, 115543.6970654314, 115568.28017691776, 115592.86459577303, 115617.4503218582, 115642.03735503425, 115666.62569516223, 115691.21534210323, 115715.80629571836, 115740.39855586876, 115764.99212241563, 115789.58699522018, 115814.18317414368, 115838.78065904742, 115863.37944979276, 115887.97954624105, 115912.5809482537, 115937.18365569218, 115961.78766841792, 115986.39298629249, 116010.99960917742, 116035.60753693432, 116060.21676942479, 116084.82730651053, 116109.43914805322, 116134.0522939146, 116158.66674395645, 116183.2824980406, 116207.89955602886, 116232.51791778316, 116257.13758316539, 116281.75855203751, 116306.38082426153, 116331.0043996995, 116355.62927821343, 116380.25545966547, 116404.88294391775, 116429.51173083246, 116454.14182027178, 116478.77321209799, 116503.40590617337, 116528.03990236024, 116552.67520052097, 116577.31180051794, 116601.94970221359, 116626.5889054704, 116651.22941015086, 116675.8712161175, 116700.51432323293, 116725.15873135976, 116749.8044403606, 116774.45145009817, 116799.0997604352, 116823.74937123443, 116848.40028235866, 116873.05249367072, 116897.70600503348, 116922.36081630984, 116947.01692736275, 116971.67433805518, 116996.33304825013, 117020.99305781067, 117045.65436659988, 117070.31697448085, 117094.98088131678, 117119.64608697084, 117144.31259130625, 117168.98039418628, 117193.64949547425, 117218.31989503348, 117242.99159272734, 117267.66458841923, 117292.33888197262, 117317.01447325097, 117341.6913621178, 117366.36954843666, 117391.04903207115, 117415.72981288488, 117440.41189074152, 117465.09526550476, 117489.77993703831, 117514.46590520597, 117539.15316987154, 117563.84173089883, 117588.53158815173, 117613.22274149416, 117637.91519079005, 117662.60893590341, 117687.30397669821, 117712.00031303853, 117736.69794478847, 117761.39687181212, 117786.09709397367, 117810.7986111373, 117835.50142316725, 117860.20552992777, 117884.91093128319, 117909.6176270978, 117934.32561723603, 117959.03490156225, 117983.74547994092, 118008.45735223651, 118033.17051831353, 118057.88497803656, 118082.60073127014, 118107.31777787892, 118132.03611772758, 118156.75575068076, 118181.47667660323, 118206.19889535972, 118230.92240681504, 118255.64721083404, 118280.37330728157, 118305.10069602253, 118329.82937692187, 118354.55934984458, 118379.29061465565, 118404.02317122012, 118428.75701940308, 118453.49215906965, 118478.22859008498, 118502.96631231424, 118527.70532562268, 118552.44562987552, 118577.18722493808, 118601.93011067568, 118626.67428695368, 118651.41975363747, 118676.1665105925, 118700.91455768421, 118725.66389477813, 118750.41452173979, 118775.16643843475, 118799.91964472862, 118824.67414048707, 118849.42992557574, 118874.18699986035, 118898.94536320666, 118923.70501548043, 118948.46595654752, 118973.22818627374, 118997.99170452499, 119022.7565111672, 119047.52260606633, 119072.28998908834, 119097.0586600993, 119121.82861896523, 119146.59986555226, 119171.3723997265, 119196.14622135412, 119220.92133030134, 119245.69772643436, 119270.47540961947, 119295.25437972297, 119320.0346366112, 119344.81618015055, 119369.5990102074, 119394.38312664822, 119419.16852933947, 119443.95521814766, 119468.74319293935, 119493.53245358112, 119518.32299993958, 119543.1148318814, 119567.90794927324, 119592.70235198183, 119617.49803987393, 119642.29501281632, 119667.09327067583, 119691.89281331931, 119716.69364061367, 119741.49575242584, 119766.29914862274, 119791.10382907142, 119815.90979363887, 119840.71704219218, 119865.52557459843, 119890.33539072477, 119915.14649043836, 119939.95887360642, 119964.77254009615, 119989.58748977486, 120014.40372250983, 120039.22123816841, 120064.04003661797, 120088.86011772591, 120113.6814813597, 120138.50412738678, 120163.3280556747, 120188.15326609099, 120212.9797585032, 120237.807532779, 120262.636588786, 120287.46692639188, 120312.29854546436, 120337.13144587121, 120361.9656274802, 120386.80109015913, 120411.6378337759, 120436.47585819835, 120461.31516329442, 120486.15574893207, 120510.99761497928, 120535.84076130408, 120560.6851877745, 120585.53089425867, 120610.3778806247, 120635.22614674074, 120660.07569247499, 120684.92651769568, 120709.77862227106, 120734.63200606944, 120759.48666895913, 120784.3426108085, 120809.19983148595, 120834.05833085992, 120858.91810879884, 120883.77916517125, 120908.64149984565, 120933.5051126906, 120958.37000357473, 120983.23617236665, 121008.10361893504, 121032.9723431486, 121057.84234487606, 121082.71362398617, 121107.58618034775, 121132.46001382964, 121157.33512430069, 121182.21151162982, 121207.08917568595, 121231.96811633807, 121256.84833345517, 121281.72982690629, 121306.61259656049, 121331.49664228689, 121356.38196395461, 121381.26856143285, 121406.15643459078, 121431.04558329767, 121455.93600742277, 121480.82770683538, 121505.72068140487, 121530.61493100057, 121555.51045549192, 121580.40725474835, 121605.30532863933, 121630.20467703436, 121655.10529980299, 121680.00719681478, 121704.91036793934, 121729.81481304632, 121754.72053200539, 121779.62752468624, 121804.53579095862, 121829.44533069231, 121854.3561437571, 121879.26823002285, 121904.1815893594, 121929.09622163669, 121954.01212672464, 121978.92930449323, 122003.84775481246, 122028.76747755238, 122053.68847258303, 122078.61073977455, 122103.53427899707, 122128.45909012076, 122153.3851730158, 122178.31252755247, 122203.241153601, 122228.1710510317, 122253.10221971496, 122278.03465952107, 122302.9683703205, 122327.90335198362, 122352.83960438096, 122377.777127383, 122402.71592086025, 122427.65598468333, 122452.59731872278, 122477.53992284928, 122502.48379693348, 122527.42894084606, 122552.37535445779, 122577.3230376394, 122602.27199026172, 122627.22221219557, 122652.17370331181, 122677.12646348133, 122702.08049257506, 122727.03579046397, 122751.99235701906, 122776.95019211136, 122801.9092956119, 122826.8696673918, 122851.8313073222, 122876.79421527422, 122901.75839111907, 122926.72383472799, 122951.69054597223, 122976.65852472307, 123001.62777085182, 123026.59828422987, 123051.57006472857, 123076.54311221937, 123101.5174265737, 123126.49300766307, 123151.46985535898, 123176.447969533, 123201.42735005668, 123226.40799680166, 123251.38990963959, 123276.37308844214, 123301.35753308103, 123326.343243428, 123351.33021935483, 123376.31846073334, 123401.30796743535, 123426.29873933276, 123451.29077629748, 123476.28407820144, 123501.2786449166, 123526.27447631498, 123551.27157226863, 123576.2699326496, 123601.26955732999, 123626.27044618195, 123651.27259907764, 123676.27601588926, 123701.28069648903, 123726.28664074925, 123751.29384854218, 123776.30231974016, 123801.31205421555, 123826.32305184074, 123851.33531248817, 123876.34883603029, 123901.36362233957, 123926.37967128855, 123951.3969827498, 123976.41555659588, 124001.43539269941, 124026.45649093305, 124051.47885116948, 124076.50247328142, 124101.5273571416, 124126.55350262282, 124151.58090959788, 124176.60957793961, 124201.63950752091, 124226.67069821467, 124251.70314989384, 124276.73686243138, 124301.7718357003, 124326.80806957364, 124351.84556392446, 124376.88431862585, 124401.92433355095, 124426.96560857294, 124452.00814356498, 124477.05193840031, 124502.0969929522, 124527.14330709392, 124552.19088069882, 124577.23971364023, 124602.28980579154, 124627.34115702618, 124652.3937672176, 124677.44763623926, 124702.50276396469, 124727.55915026742, 124752.61679502104, 124777.67569809916, 124802.73585937542, 124827.79727872348, 124852.85995601704, 124877.92389112986, 124902.98908393568, 124928.05553430831, 124953.1232421216, 124978.19220724938, 125003.26242956554, 125028.33390894404, 125053.40664525882, 125078.48063838384, 125103.55588819316, 125128.63239456083, 125153.71015736091, 125178.78917646752, 125203.86945175481, 125228.95098309696, 125254.03377036817, 125279.1178134427, 125304.2031121948, 125329.28966649878, 125354.37747622898, 125379.46654125977, 125404.55686146552, 125429.6484367207, 125454.74126689974, 125479.83535187715, 125504.93069152744, 125530.02728572517, 125555.12513434493, 125580.22423726133, 125605.32459434902, 125630.42620548268, 125655.52907053704, 125680.63318938682, 125705.7385619068, 125730.84518797178, 125755.9530674566, 125781.06220023613, 125806.17258618528, 125831.28422517896, 125856.39711709213, 125881.51126179981, 125906.62665917698, 125931.74330909875, 125956.86121144016, 125981.98036607634, 126007.10077288245, 126032.22243173365, 126057.34534250517, 126082.46950507225, 126107.59491931014, 126132.72158509417, 126157.84950229966, 126182.97867080198, 126208.10909047653, 126233.24076119871, 126258.37368284403, 126283.50785528794, 126308.64327840599, 126333.7799520737, 126358.91787616667, 126384.0570505605, 126409.19747513086, 126434.3391497534, 126459.48207430386, 126484.62624865794, 126509.77167269142, 126534.9183462801, 126560.06626929982, 126585.21544162642, 126610.36586313581, 126635.51753370391, 126660.67045320668, 126685.82462152008, 126710.98003852014, 126736.1367040829, 126761.29461808444, 126786.45378040087, 126811.61419090834, 126836.77584948298, 126861.93875600102, 126887.10291033868, 126912.26831237224, 126937.43496197795, 126962.60285903217, 126987.77200341123, 127012.94239499152, 127038.11403364947, 127063.2869192615, 127088.46105170409, 127113.63643085376, 127138.81305658702, 127163.99092878048, 127189.17004731069, 127214.3504120543, 127239.53202288797, 127264.71487968838, 127289.89898233226, 127315.08433069635, 127340.27092465744, 127365.45876409234, 127390.64784887788, 127415.83817889093, 127441.02975400841, 127466.22257410725, 127491.4166390644, 127516.61194875685, 127541.80850306165, 127567.00630185583, 127592.20534501647, 127617.4056324207, 127642.60716394568, 127667.80993946856, 127693.01395886653, 127718.21922201688, 127743.42572879682, 127768.63347908368, 127793.8424727548, 127819.05270968749, 127844.26418975917, 127869.47691284724, 127894.69087882918, 127919.90608758242, 127945.12253898452, 127970.34023291297, 127995.55916924539, 128020.77934785932, 128046.00076863244, 128071.22343144237, 128096.44733616684, 128121.67248268353, 128146.89887087021, 128172.12650060465, 128197.35537176466, 128222.5854842281, 128247.81683787282, 128273.0494325767, 128298.28326821771, 128323.5183446738, 128348.75466182294, 128373.99221954317, 128399.23101771252, 128424.47105620909, 128449.71233491098, 128474.95485369631, 128500.19861244329, 128525.44361103009, 128550.68984933494, 128575.93732723613, 128601.18604461191, 128626.43600134061, 128651.68719730059, 128676.93963237021, 128702.1933064279, 128727.44821935208, 128752.70437102125, 128777.96176131385, 128803.22039010846, 128828.48025728362, 128853.74136271792, 128879.00370628996, 128904.2672878784, 128929.53210736193, 128954.79816461923, 128980.06545952905, 129005.33399197015, 129030.60376182134, 129055.87476896142, 129081.14701326926, 129106.42049462376, 129131.6952129038, 129156.97116798835, 129182.24835975636, 129207.52678808685, 129232.80645285884, 129258.08735395141, 129283.36949124365, 129308.65286461466, 129333.9374739436, 129359.22331910966, 129384.51039999202, 129409.79871646997, 129435.08826842274, 129460.37905572963, 129485.67107826998, 129510.96433592314, 129536.2588285685, 129561.55455608548, 129586.85151835352, 129612.14971525209, 129637.4491466607, 129662.74981245887, 129688.0517125262, 129713.35484674224, 129738.65921498663, 129763.96481713903, 129789.2716530791, 129814.57972268655, 129839.88902584116, 129865.19956242264, 129890.51133231082, 129915.82433538554, 129941.13857152662, 129966.45404061397, 129991.7707425275, 130017.08867714716, 130042.4078443529, 130067.72824402474, 130093.04987604271, 130118.37274028687, 130143.69683663732, 130169.02216497416, 130194.34872517755, 130219.67651712766, 130245.0055407047, 130270.33579578891, 130295.66728226055, 130320.99999999991, 130346.33394888733, 130371.66912880314, 130397.00553962773, 130422.34318124152, 130447.68205352494, 130473.02215635845, 130498.36348962256, 130523.70605319779, 130549.0498469647, 130574.39487080388, 130599.74112459592, 130625.08860822149, 130650.43732156123, 130675.78726449587, 130701.13843690613, 130726.49083867275, 130751.84446967654, 130777.19932979831, 130802.5554189189, 130827.91273691918, 130853.27128368006, 130878.63105908247, 130903.99206300738, 130929.35429533575, 130954.71775594862, 130980.08244472703, 131005.44836155206, 131030.81550630482, 131056.18387886642, 131081.55347911804, 131106.92430694087, 131132.29636221612, 131157.66964482504, 131183.0441546489, 131208.41989156904, 131233.79685546676, 131259.17504622342, 131284.55446372041, 131309.93510783918, 131335.31697846117, 131360.70007546784, 131386.0843987407, 131411.46994816128, 131436.85672361116, 131462.24472497194, 131487.6339521252, 131513.02440495262, 131538.41608333588, 131563.80898715663, 131589.2031162967, 131614.59847063778, 131639.9950500617, 131665.39285445024, 131690.7918836853, 131716.19213764873, 131741.5936162224, 131766.99631928833, 131792.4002467284, 131817.80539842462, 131843.21177425905, 131868.6193741137, 131894.02819787065, 131919.43824541202, 131944.84951661993, 131970.26201137656, 131995.67572956407, 132021.09067106468, 132046.50683576067, 132071.9242235343, 132097.34283426782, 132122.76266784366, 132148.1837241441, 132173.60600305157, 132199.02950444847, 132224.45422821722, 132249.88017424036, 132275.3073424003, 132300.73573257966, 132326.16534466096, 132351.59617852676, 132377.0282340597, 132402.46151114244, 132427.8960096576, 132453.3317294879, 132478.7686705161, 132504.2068326249, 132529.64621569714, 132555.0868196156, 132580.5286442631, 132605.97168952253, 132631.41595527678, 132656.8614414088, 132682.3081478015, 132707.75607433787, 132733.20522090094, 132758.65558737374, 132784.1071736393, 132809.55997958075, 132835.01400508118, 132860.46925002377, 132885.92571429166, 132911.3833977681, 132936.84230033628, 132962.30242187946, 132987.76376228096, 133013.22632142407, 133038.69009919214, 133064.15509546854, 133089.62131013666, 133115.08874307995, 133140.55739418184, 133166.0272633258, 133191.4983503954, 133216.97065527414, 133242.4441778456, 133267.91891799335, 133293.39487560102, 133318.87205055228, 133344.3504427308, 133369.83005202023, 133395.3108783044, 133420.79292146701, 133446.27618139185, 133471.76065796276, 133497.24635106357, 133522.73326057816, 133548.2213863904, 133573.71072838426, 133599.20128644365, 133624.6930604526, 133650.1860502951, 133675.68025585517, 133701.1756770169, 133726.67231366437, 133752.17016568172, 133777.66923295305, 133803.1695153626, 133828.67101279454, 133854.1737251331, 133879.67765226253, 133905.18279406714, 133930.68915043125, 133956.19672123916, 133981.70550637526, 134007.215505724, 134032.7267191697, 134058.23914659687, 134083.75278789, 134109.26764293358, 134134.78371161217, 134160.30099381026, 134185.8194894125, 134211.33919830353, 134236.8601203679, 134262.38225549037, 134287.90560355558, 134313.4301644483, 134338.95593805326, 134364.48292425525, 134390.0111229391, 134415.54053398955, 134441.0711572916, 134466.60299273, 134492.1360401898, 134517.67029955584, 134543.20577071316, 134568.74245354676, 134594.2803479416, 134619.81945378278, 134645.35977095537, 134670.90129934452, 134696.4440388353, 134721.9879893129, 134747.53315066252, 134773.07952276937, 134798.6271055187, 134824.17589879577, 134849.7259024859, 134875.27711647438, 134900.8295406466, 134926.38317488792, 134951.93801908373, 134977.4940731195, 135003.0513368807, 135028.60981025276, 135054.16949312127, 135079.73038537172, 135105.29248688967, 135130.85579756077, 135156.42031727062, 135181.98604590484, 135207.55298334916, 135233.12112948927, 135258.69048421088, 135284.26104739975, 135309.83281894168, 135335.4057987225, 135360.97998662802, 135386.55538254412, 135412.1319863567, 135437.70979795168, 135463.28881721498, 135488.86904403262, 135514.45047829056, 135540.03311987486, 135565.61696867156, 135591.20202456677, 135616.78828744654, 135642.37575719706, 135667.96443370447, 135693.55431685498, 135719.14540653478, 135744.7377026301, 135770.33120502727, 135795.92591361253, 135821.52182827223, 135847.11894889272, 135872.7172753604, 135898.3168075616, 135923.91754538284, 135949.51948871053, 135975.12263743114, 136000.72699143123, 136026.3325505973, 136051.9393148159, 136077.5472839737, 136103.15645795723, 136128.76683665317, 136154.37841994822, 136179.991207729, 136205.60519988232, 136231.2203962949, 136256.8367968535, 136282.45440144493, 136308.07320995603, 136333.69322227367, 136359.3144382847, 136384.93685787608, 136410.56048093468, 136436.18530734754, 136461.81133700156, 136487.43856978387, 136513.06700558143, 136538.6966442813, 136564.32748577066, 136589.95952993655, 136615.59277666616, 136641.22722584667, 136666.86287736523, 136692.49973110916, 136718.13778696564, 136743.77704482197, 136769.41750456547, 136795.05916608346, 136820.7020292633, 136846.34609399244, 136871.9913601582, 136897.63782764805, 136923.28549634948, 136948.93436614997, 136974.58443693706, 137000.23570859825, 137025.88818102115, 137051.54185409332, 137077.19672770242, 137102.8528017361, 137128.51007608202, 137154.16855062786, 137179.82822526142, 137205.4890998704, 137231.15117434258, 137256.8144485658, 137282.4789224279, 137308.14459581667, 137333.8114686201, 137359.47954072602, 137385.1488120224, 137410.8192823972, 137436.49095173844, 137462.16381993407, 137487.8378868722, 137513.5131524409, 137539.18961652822, 137564.8672790223, 137590.5461398113, 137616.22619878338, 137641.90745582676, 137667.58991082967, 137693.27356368033, 137718.95841426702, 137744.64446247809, 137770.33170820182, 137796.0201513266, 137821.7097917408, 137847.40062933284, 137873.09266399115, 137898.78589560417, 137924.48032406042, 137950.17594924837, 137975.8727710566, 138001.57078937365, 138027.27000408815, 138052.97041508864, 138078.67202226384, 138104.3748255024, 138130.07882469296, 138155.78401972432, 138181.49041048516, 138207.1979968643, 138232.9067787505, 138258.61675603263, 138284.3279285995, 138310.04029633995, 138335.75385914298, 138361.46861689744, 138387.18456949232, 138412.9017168166, 138438.62005875923, 138464.3395952093, 138490.06032605586, 138515.78225118798, 138541.50537049473, 138567.2296838653, 138592.95519118884, 138618.6818923545, 138644.40978725153, 138670.13887576913, 138695.86915779658, 138721.60063322316, 138747.33330193823, 138773.06716383106, 138798.80221879104, 138824.53846670757, 138850.27590747006, 138876.01454096794, 138901.7543670907, 138927.49538572782, 138953.2375967688, 138978.9810001032, 139004.7255956206, 139030.4713832106, 139056.2183627628, 139081.96653416683, 139107.7158973124, 139133.46645208917, 139159.2181983869, 139184.97113609532, 139210.7252651042, 139236.48058530336, 139262.23709658257, 139287.99479883176, 139313.75369194074, 139339.51377579942, 139365.27505029776, 139391.03751532568, 139416.80117077316, 139442.56601653024, 139468.3320524869, 139494.09927853322, 139519.86769455927, 139545.63730045516, 139571.408096111, 139597.18008141697, 139622.95325626322, 139648.72762054, 139674.5031741375, 139700.27991694602, 139726.0578488558, 139751.83696975713, 139777.61727954043, 139803.39877809596, 139829.18146531415, 139854.9653410854, 139880.75040530015, 139906.53665784886, 139932.324098622, 139958.11272751007, 139983.90254440365, 140009.69354919327, 140035.4857417695, 140061.27912202294, 140087.07368984428, 140112.86944512415, 140138.6663877532, 140164.4645176222, 140190.26383462187, 140216.06433864293, 140241.86602957622, 140267.66890731253, 140293.47297174268, 140319.27822275754, 140345.08466024802, 140370.89228410498, 140396.70109421943, 140422.51109048226, 140448.32227278448, 140474.13464101712, 140499.94819507122, 140525.7629348378, 140551.578860208, 140577.3959710729, 140603.21426732364, 140629.03374885136, 140654.8544155473, 140680.67626730262, 140706.49930400858, 140732.32352555645, 140758.1489318375, 140783.97552274304, 140809.80329816442, 140835.63225799298, 140861.46240212015, 140887.2937304373, 140913.12624283586, 140938.95993920733, 140964.79481944317, 140990.63088343487, 141016.468131074, 141042.30656225214, 141068.14617686084, 141093.98697479168, 141119.82895593636, 141145.6721201865, 141171.51646743377, 141197.36199756994, 141223.20871048668, 141249.05660607578, 141274.90568422904, 141300.75594483822, 141326.6073877952, 141352.4600129918, 141378.31382031992, 141404.16880967148, 141430.02498093838, 141455.8823340126, 141481.74086878612, 141507.60058515094, 141533.4614829991, 141559.32356222265, 141585.18682271364, 141611.0512643642, 141636.9168870665, 141662.78369071265, 141688.6516751948, 141714.5208404052, 141740.39118623605, 141766.26271257963, 141792.1354193282, 141818.00930637406, 141843.88437360956, 141869.760620927, 141895.6380482188, 141921.51665537735, 141947.39644229505, 141973.27740886438, 141999.15955497778, 142025.0428805278, 142050.9273854069, 142076.81306950765, 142102.69993272264, 142128.58797494444, 142154.4771960657, 142180.36759597904, 142206.25917457714, 142232.15193175265, 142258.04586739838, 142283.94098140698, 142309.83727367126, 142335.734744084, 142361.63339253806, 142387.5332189262, 142413.43422314132, 142439.33640507632, 142465.23976462413, 142491.14430167765, 142517.05001612983, 142542.95690787368, 142568.86497680223, 142594.77422280848, 142620.6846457855, 142646.5962456264, 142672.50902222423, 142698.42297547215, 142724.33810526333, 142750.25441149093, 142776.17189404817, 142802.09055282827, 142828.0103877245, 142853.93139863008, 142879.85358543837, 142905.77694804268, 142931.70148633636, 142957.62720021277, 142983.55408956532, 143009.48215428743, 143035.41139427255, 143061.34180941415, 143087.2733996057, 143113.20616474075, 143139.14010471283, 143165.0752194155, 143191.01150874238, 143216.94897258704, 143242.88761084314, 143268.82742340435, 143294.76841016437, 143320.71057101688, 143346.65390585564, 143372.59841457437, 143398.54409706692, 143424.490953227, 143450.43898294857, 143476.38818612538, 143502.33856265133, 143528.29011242036, 143554.24283532638, 143580.19673126334, 143606.1518001252, 143632.10804180597, 143658.0654561997, 143684.02404320036, 143709.98380270213, 143735.944734599, 143761.9068387852, 143787.87011515474, 143813.83456360188, 143839.8001840208, 143865.7669763057, 143891.7349403508, 143917.7040760504, 143943.67438329876, 143969.6458619902, 143995.61851201905, 144021.59233327967, 144047.56732566646, 144073.54348907378, 144099.52082339607, 144125.49932852783, 144151.4790043635, 144177.45985079758, 144203.44186772458, 144229.4250550391, 144255.40941263564, 144281.39494040885, 144307.3816382533, 144333.36950606373, 144359.35854373468, 144385.34875116093, 144411.34012823718, 144437.33267485813, 144463.32639091855, 144489.32127631325, 144515.31733093705, 144541.31455468474, 144567.3129474512, 144593.3125091313, 144619.31323961995, 144645.31513881206, 144671.31820660262, 144697.32244288657, 144723.3278475589, 144749.33442051467, 144775.34216164888, 144801.35107085665, 144827.36114803303, 144853.37239307314, 144879.38480587213, 144905.39838632516, 144931.41313432742, 144957.4290497741, 144983.44613256046, 145009.46438258173, 145035.48379973322, 145061.5043839102, 145087.52613500805, 145113.54905292206, 145139.57313754765, 145165.59838878017, 145191.6248065151, 145217.65239064783, 145243.68114107384, 145269.71105768863, 145295.74214038774, 145321.77438906668, 145347.807803621, 145373.8423839463, 145399.87812993818, 145425.9150414923, 145451.95311850426, 145477.9923608698, 145504.03276848458, 145530.07434124436, 145556.11707904484, 145582.1609817818, 145608.20604935108, 145634.25228164849, 145660.2996785698, 145686.34824001096, 145712.39796586783, 145738.4488560363, 145764.50091041232, 145790.55412889185, 145816.60851137087, 145842.66405774537, 145868.7207679114, 145894.778641765, 145920.83767920226, 145946.89788011924, 145972.95924441208, 145999.02177197693, 146025.08546270995, 146051.15031650732, 146077.21633326527, 146103.28351288004, 146129.3518552479, 146155.42136026506, 146181.49202782792, 146207.56385783272, 146233.63685017588, 146259.71100475377, 146285.78632146274, 146311.86280019928, 146337.94044085976, 146364.0192433407, 146390.09920753856, 146416.18033334985, 146442.26262067116, 146468.34606939898, 146494.43067942993, 146520.51645066062, 146546.60338298764, 146572.6914763077, 146598.7807305174, 146624.87114551352, 146650.96272119274, 146677.0554574518, 146703.14935418745, 146729.2444112965, 146755.34062867577, 146781.43800622207, 146807.53654383228, 146833.6362414033, 146859.73709883197, 146885.83911601527, 146911.94229285014, 146938.04662923355, 146964.15212506248, 146990.25878023397, 147016.36659464505, 147042.4755681928, 147068.58570077427, 147094.6969922866, 147120.80944262692, 147146.92305169237, 147173.03781938017, 147199.15374558745, 147225.2708302115, 147251.38907314953, 147277.5084742988, 147303.62903355664, 147329.75075082036, 147355.87362598727, 147381.99765895473, 147408.12284962015, 147434.2491978809, 147460.37670363448, 147486.50536677826, 147512.63518720976, 147538.76616482646, 147564.89829952587, 147591.03159120557, 147617.16603976308, 147643.301645096, 147669.43840710196, 147695.5763256786, 147721.71540072354, 147747.85563213445, 147773.9970198091, 147800.13956364512, 147826.28326354033, 147852.42811939248, 147878.57413109933, 147904.72129855872, 147930.8696216685, 147957.01910032652, 147983.16973443062, 148009.32152387875, 148035.47446856883, 148061.62856839882, 148087.78382326665, 148113.94023307035, 148140.09779770792, 148166.2565170774, 148192.41639107687, 148218.57741960438, 148244.73960255808, 148270.90293983606, 148297.0674313365, 148323.23307695755, 148349.39987659742, 148375.56783015432, 148401.73693752653, 148427.90719861226, 148454.07861330983, 148480.25118151752, 148506.42490313368, 148532.59977805667, 148558.77580618486, 148584.95298741665, 148611.13132165046, 148637.3108087847, 148663.4914487179, 148689.6732413485, 148715.85618657502, 148742.040284296, 148768.22553440998, 148794.41193681557, 148820.59949141133, 148846.7881980959, 148872.97805676793, 148899.16906732606, 148925.361229669, 148951.55454369547, 148977.74900930419, 149003.9446263939, 149030.14139486343, 149056.3393146115, 149082.538385537, 149108.73860753875, 149134.9399805156, 149161.14250436646, 149187.34617899026, 149213.5510042859, 149239.75698015234, 149265.96410648854, 149292.17238319354, 149318.38181016635, 149344.59238730598, 149370.80411451156, 149397.01699168212, 149423.2310187168, 149449.4461955147, 149475.66252197503, 149501.87999799693, 149528.0986234796, 149554.31839832227, 149580.53932242419, 149606.7613956846, 149632.98461800278, 149659.2089892781, 149685.43450940982, 149711.66117829733, 149737.88899584, 149764.11796193724, 149790.34807648844, 149816.5793393931, 149842.8117505506, 149869.0453098605, 149895.28001722222, 149921.51587253538, 149947.75287569952, 149973.99102661415, 150000.2303251789, 150026.47077129342, 150052.71236485732, 150078.95510577026, 150105.1989939319, 150131.444029242, 150157.69021160025, 150183.9375409064, 150210.18601706024, 150236.43563996154, 150262.68640951012, 150288.93832560582, 150315.19138814852, 150341.44559703805, 150367.70095217437, 150393.95745345735, 150420.215100787, 150446.4738940632, 150472.733833186, 150498.99491805542, 150525.25714857146, 150551.5205246342, 150577.7850461437, 150604.05071300003, 150630.31752510337, 150656.58548235384, 150682.8545846516, 150709.1248318968, 150735.39622398972, 150761.66876083054, 150787.9424423195, 150814.2172683569, 150840.49323884305, 150866.7703536782, 150893.04861276277, 150919.32801599705, 150945.60856328148, 150971.89025451642, 150998.1730896023, 151024.45706843957, 151050.74219092872, 151077.0284569702, 151103.31586646455, 151129.6044193123, 151155.894115414, 151182.1849546702, 151208.47693698155, 151234.77006224863, 151261.0643303721, 151287.35974125259, 151313.65629479082, 151339.95399088747, 151366.25282944329, 151392.55281035902, 151418.85393353543, 151445.1561988733, 151471.45960627345, 151497.76415563675, 151524.06984686397, 151550.3766798561, 151576.68465451393, 151602.99377073845, 151629.30402843058, 151655.61542749128, 151681.92796782157, 151708.24164932242, 151734.55647189484, 151760.87243543993, 151787.18953985872, 151813.50778505235, 151839.82717092187, 151866.14769736846, 151892.46936429327, 151918.79217159748, 151945.1161191823, 151971.4412069489, 151997.76743479856, 152024.09480263255, 152050.42331035214, 152076.75295785864, 152103.0837450534, 152129.41567183775, 152155.74873811303, 152182.08294378067, 152208.41828874208, 152234.7547728987, 152261.09239615197, 152287.43115840337, 152313.7710595544, 152340.11209950657, 152366.45427816146, 152392.79759542056, 152419.14205118554, 152445.48764535793, 152471.8343778394, 152498.1822485316, 152524.53125733617, 152550.88140415482, 152577.23268888926, 152603.5851114412, 152629.9386717124, 152656.29336960468, 152682.64920501978, 152709.00617785956, 152735.36428802583, 152761.72353542043, 152788.0839199453, 152814.4454415023, 152840.80809999333, 152867.1718953204, 152893.53682738543, 152919.9028960904, 152946.27010133737, 152972.63844302832, 152999.0079210653, 153025.3785353504, 153051.7502857857, 153078.12317227334, 153104.4971947154, 153130.8723530141, 153157.24864707157, 153183.62607679, 153210.00464207167, 153236.38434281875, 153262.76517893354, 153289.1471503183, 153315.53025687535, 153341.914498507, 153368.29987511563, 153394.68638660354, 153421.07403287315, 153447.4628138269, 153473.85272936718, 153500.24377939643, 153526.63596381716, 153553.02928253182, 153579.42373544298, 153605.81932245308, 153632.21604346478, 153658.61389838057, 153685.0128871031, 153711.41300953497, 153737.8142655788, 153764.21665513728, 153790.62017811305, 153817.02483440886, 153843.4306239274, 153869.8375465714, 153896.24560224364, 153922.65479084692, 153949.06511228404, 153975.4765664578, 154001.88915327107, 154028.3028726267, 154054.7177244276, 154081.13370857667, 154107.55082497682, 154133.969073531, 154160.38845414226, 154186.8089667135, 154213.23061114774, 154239.65338734805, 154266.07729521746, 154292.50233465908, 154318.92850557598, 154345.35580787127, 154371.7842414481, 154398.21380620962, 154424.64450205903, 154451.0763288995, 154477.50928663427, 154503.9433751666, 154530.3785943997, 154556.8149442369, 154583.25242458144, 154609.69103533673, 154636.13077640603, 154662.5716476928, 154689.01364910032, 154715.45678053208, 154741.90104189145, 154768.34643308193, 154794.79295400696, 154821.24060457002, 154847.68938467462, 154874.13929422433, 154900.59033312264, 154927.04250127316, 154953.49579857948, 154979.9502249452, 155006.40578027396, 155032.86246446942, 155059.32027743524, 155085.77921907514, 155112.2392892928, 155138.70048799197, 155165.16281507642, 155191.6262704499, 155218.09085401625, 155244.55656567923, 155271.0234053427, 155297.4913729106, 155323.96046828668, 155350.4306913749, 155376.9020420792, 155403.37452030348, 155429.8481259517, 155456.3228589279, 155482.79871913602, 155509.2757064801, 155535.75382086422, 155562.2330621924, 155588.71343036872, 155615.1949252973, 155641.67754688227, 155668.1612950278, 155694.64616963797, 155721.13217061706, 155747.6192978692, 155774.1075512987, 155800.59693080973, 155827.0874363066, 155853.5790676936, 155880.07182487496, 155906.56570775513, 155933.06071623837, 155959.5568502291, 155986.05410963166, 156012.5524943505, 156039.05200429005, 156065.55263935472, 156092.054399449, 156118.5572844774, 156145.06129434443, 156171.5664289546, 156198.07268821247, 156224.5800720226, 156251.0885802896, 156277.5982129181, 156304.10896981266, 156330.620850878, 156357.1338560188, 156383.6479851397, 156410.16323814544, 156436.67961494075, 156463.1971154304, 156489.71573951913, 156516.2354871118, 156542.7563581131, 156569.278352428, 156595.80146996127, 156622.32571061782, 156648.85107430254, 156675.37756092031, 156701.90517037612, 156728.4339025749, 156754.96375742165, 156781.4947348213, 156808.0268346789, 156834.5600568995, 156861.09440138817, 156887.62986804993, 156914.16645678994, 156940.70416751326, 156967.24300012505, 156993.78295453047, 157020.32403063469, 157046.8662283429, 157073.40954756032, 157099.9539881922, 157126.49955014378, 157153.04623332032, 157179.59403762716, 157206.14296296958, 157232.69300925292, 157259.24417638258, 157285.79646426387, 157312.3498728022, 157338.90440190304, 157365.46005147175, 157392.01682141385, 157418.57471163478, 157445.13372204005, 157471.69385253516, 157498.25510302564, 157524.81747341706, 157551.38096361503, 157577.9455735251, 157604.51130305286, 157631.07815210402, 157657.64612058416, 157684.21520839902, 157710.78541545427, 157737.3567416556, 157763.92918690876, 157790.50275111952, 157817.07743419363, 157843.65323603692, 157870.23015655516, 157896.80819565422, 157923.3873532399, 157949.96762921812, 157976.5490234948, 158003.13153597576, 158029.715166567, 158056.2999151745, 158082.88578170416, 158109.47276606198, 158136.06086815405, 158162.6500878863, 158189.24042516484, 158215.83187989573, 158242.42445198505, 158269.01814133892, 158295.61294786347, 158322.20887146486, 158348.80591204923, 158375.4040695228, 158402.00334379176, 158428.60373476235, 158455.2052423408, 158481.80786643337, 158508.4116069464, 158535.01646378616, 158561.62243685898, 158588.2295260712, 158614.8377313292, 158641.44705253936, 158668.05748960807, 158694.6690424418, 158721.28171094693, 158747.89549502998, 158774.5103945974, 158801.12640955573, 158827.74353981143, 158854.36178527112, 158880.9811458413, 158907.60162142856, 158934.22321193956, 158960.84591728085, 158987.4697373591, 159014.09467208097, 159040.72072135314, 159067.3478850823, 159093.9761631752, 159120.60555553852, 159147.23606207906, 159173.8676827036, 159200.5004173189, 159227.13426583182, 159253.76922814918, 159280.4053041778, 159307.0424938246, 159333.6807969965, 159360.32021360032, 159386.96074354305, 159413.60238673165, 159440.2451430731, 159466.88901247433, 159493.53399484244, 159520.18009008438, 159546.8272981072, 159573.47561881805, 159600.12505212397, 159626.77559793205, 159653.4272561494, 159680.08002668325, 159706.7339094407, 159733.38890432892, 159760.04501125516, 159786.70223012666, 159813.3605608506, 159840.02000333427, 159866.68055748497, 159893.34222320997, 159920.00500041663, 159946.66888901225, 159973.33388890422, 159999.99999999988, 160026.66722220668, 160053.33555543202, 160080.0049995833, 160106.675554568, 160133.3472202936, 160160.0199966676, 160186.6938835975, 160213.36888099083, 160240.04498875517, 160266.72220679803, 160293.4005350271, 160320.07997334987, 160346.76052167406, 160373.4421799073, 160400.1249479572, 160426.8088257315, 160453.49381313793, 160480.17991008417, 160506.86711647795, 160533.5554322271, 160560.24485723933, 160586.93539142248, 160613.62703468435, 160640.31978693279, 160667.0136480757, 160693.70861802087, 160720.40469667627, 160747.1018839498, 160773.80017974938, 160800.49958398298, 160827.20009655855, 160853.9017173841, 160880.60444636765, 160907.30828341722, 160934.0132284409, 160960.71928134665, 160987.4264420427, 161014.13471043704, 161040.84408643784, 161067.55456995327, 161094.26616089148, 161120.97885916062, 161147.69266466892, 161174.40757732463, 161201.12359703594, 161227.84072371112, 161254.55895725847, 161281.27829758628, 161307.99874460287, 161334.72029821656, 161361.4429583357, 161388.1667248687, 161414.8915977239, 161441.61757680977, 161468.34466203468, 161495.07285330712, 161521.80215053557, 161548.53255362847, 161575.26406249436, 161601.99667704175, 161628.7303971792, 161655.46522281526, 161682.2011538585, 161708.93819021754, 161735.676331801, 161762.4155785175, 161789.1559302757, 161815.89738698432, 161842.639948552, 161869.38361488748, 161896.1283858995, 161922.87426149676, 161949.62124158812, 161976.3693260823, 162003.1185148881, 162029.8688079144, 162056.62020507, 162083.37270626382, 162110.1263114047, 162136.88102040152, 162163.63683316324, 162190.3937495988, 162217.1517696171, 162243.91089312723, 162270.67112003808, 162297.43245025873, 162324.1948836982, 162350.9584202655, 162377.72305986975, 162404.48880242003, 162431.25564782543, 162458.0235959951, 162484.79264683815, 162511.56280026378, 162538.33405618116, 162565.1064144995, 162591.879875128, 162618.65443797593, 162645.43010295252, 162672.20686996708, 162698.98473892888, 162725.76370974723, 162752.54378233146, 162779.32495659095, 162806.10723243505, 162832.89060977317, 162859.67508851466, 162886.46066856902, 162913.24734984562, 162940.035132254, 162966.82401570358, 162993.6140001039, 163020.40508536444, 163047.19727139478, 163073.99055810447, 163100.78494540305, 163127.58043320014, 163154.37702140535, 163181.1747099283, 163207.97349867865, 163234.77338756606, 163261.57437650024, 163288.37646539084, 163315.17965414765, 163341.98394268038, 163368.78933089875, 163395.5958187126, 163422.40340603172, 163449.2120927659, 163476.02187882498, 163502.83276411882, 163529.6447485573, 163556.45783205028, 163583.2720145077, 163610.08729583945, 163636.90367595552, 163663.72115476584, 163690.53973218042, 163717.35940810922, 163744.18018246227, 163771.00205514964, 163797.82502608138, 163824.64909516752, 163851.4742623182, 163878.3005274435, 163905.12789045356, 163931.95635125853, 163958.78590976857, 163985.61656589387, 164012.44831954464, 164039.2811706311, 164066.11511906344, 164092.950164752, 164119.786307607, 164146.62354753874, 164173.46188445756, 164200.30131827376, 164227.1418488977, 164253.98347623978, 164280.82620021031, 164307.6700207198, 164334.51493767856, 164361.3609509971, 164388.20806058586, 164415.05626635533, 164441.905568216, 164468.75596607837, 164495.607459853, 164522.4600494504, 164549.31373478117, 164576.1685157559, 164603.02439228518, 164629.88136427966, 164656.7394316499, 164683.59859430668, 164710.4588521606, 164737.32020512238, 164764.18265310273, 164791.04619601235, 164817.91083376206, 164844.77656626256, 164871.6433934247, 164898.51131515924, 164925.38033137703, 164952.25044198887, 164979.1216469057, 165005.9939460383, 165032.86733929766, 165059.7418265946, 165086.61740784015]);\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The MSMask indicates, if MS is applied to a specific ICStream.\n * @author in-somnia\n */\n\nmodule.exports = function () {\n    function MSMask() {\n        (0, _classCallCheck3.default)(this, MSMask);\n    }\n\n    (0, _createClass3.default)(MSMask, null, [{\n        key: \"forInt\",\n        value: function forInt(int) {\n            switch (int) {\n                case MSMask.TYPE_ALL_0:\n                case MSMask.TYPE_USED:\n                case MSMask.TYPE_ALL_1:\n                case MSMask.TYPE_RESERVED:\n                    return int;\n                default:\n                    throw \"unknown MS mask type\";\n            }\n        }\n    }, {\n        key: \"TYPE_ALL_0\",\n        get: function get() {\n            return 0;\n        }\n    }, {\n        key: \"TYPE_USED\",\n        get: function get() {\n            return 1;\n        }\n    }, {\n        key: \"TYPE_ALL_1\",\n        get: function get() {\n            return 2;\n        }\n    }, {\n        key: \"TYPE_RESERVED\",\n        get: function get() {\n            return 3;\n        }\n    }]);\n    return MSMask;\n}();\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(6);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Element = __webpack_require__(46);\n\nvar CPE = __webpack_require__(66);\nvar SCE_LFE = __webpack_require__(68);\n\nvar TYPE_FILL = 0;\nvar TYPE_FILL_DATA = 1;\nvar TYPE_EXT_DATA_ELEMENT = 2;\nvar TYPE_DYNAMIC_RANGE = 11;\nvar TYPE_SBR_DATA = 13;\nvar TYPE_SBR_DATA_CRC = 14;\n\nmodule.exports = function (_Element) {\n    (0, _inherits3.default)(FIL, _Element);\n\n    function FIL(downSampledSBR) {\n        (0, _classCallCheck3.default)(this, FIL);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (FIL.__proto__ || (0, _getPrototypeOf2.default)(FIL)).call(this));\n\n        _this.downSampledSBR = downSampledSBR;\n        return _this;\n    }\n\n    (0, _createClass3.default)(FIL, [{\n        key: 'decode',\n        value: function decode(bitStream, prev, sf, sbrEnabled, smallFrames) {\n            var count = bitStream.readBits(4);\n            if (count === 15) count += bitStream.readBits(8) - 1;\n            count *= 8; //convert to bits\n\n            var cpy = count;\n            var pos = bitStream.bitPosition;\n\n            while (count > 0) {\n                count = this.decodeExtensionPayload(bitStream, count, prev, sf, sbrEnabled, smallFrames);\n            }\n\n            var pos2 = bitStream.bitPosition - pos;\n            var bitsLeft = cpy - pos2;\n\n            if (bitsLeft > 0) bitStream.skipBits(pos2);else if (bitsLeft < 0) throw \"FIL element overread: \" + bitsLeft;\n        }\n    }, {\n        key: 'decodeExtensionPayload',\n        value: function decodeExtensionPayload(bitStream, count, prev, sf, sbrEnabled, smallFrames) {\n            var type = bitStream.readBits(4);\n\n            var ret = count - 4;\n\n            switch (type) {\n                case TYPE_DYNAMIC_RANGE:\n                    ret = this.decodeDynamicRangeInfo(bitStream, ret);\n                    break;\n\n                case TYPE_SBR_DATA:\n                case TYPE_SBR_DATA_CRC:\n                    if (sbrEnabled) {\n                        if (prev instanceof SCE_LFE || prev instanceof CPE) {\n                            prev.decodeSBR(bitStream, sf, ret, prev instanceof CPE, type === TYPE_SBR_DATA_CRC, downSampledSBR, smallFrames);\n                            ret = 0;\n                            break;\n                        } else throw \"SBR applied on unexpected element\";\n                    } else {\n                        bitStream.skipBits(ret);\n                        ret = 0;\n                    }\n                // fallthrough\n                case TYPE_FILL:\n                case TYPE_FILL_DATA:\n                case TYPE_EXT_DATA_ELEMENT:\n                default:\n                    bitStream.skipBits(ret);\n                    ret = 0;\n                    break;\n            }\n\n            return ret;\n        }\n    }, {\n        key: 'decodeDynamicRangeInfo',\n        value: function decodeDynamicRangeInfo() {\n            throw 'not implemented';\n        }\n    }]);\n    return FIL;\n}(Element);\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HCB = __webpack_require__(47);\n\nmodule.exports = function () {\n    function IS() {\n        (0, _classCallCheck3.default)(this, IS);\n    }\n\n    (0, _createClass3.default)(IS, null, [{\n        key: 'process',\n        value: function process(cpe, specL, specR) {\n            var ics = cpe.getRightChannel();\n\n            var info = ics.getInfo();\n\n            var offsets = info.getSWBOffsets();\n\n            var windowGroups = info.getWindowGroupCount();\n\n            var maxSFB = info.getMaxSFB();\n\n            var sfbCB = ics.getSfbCB();\n\n            var sectEnd = ics.getSectEnd();\n\n            var scaleFactors = ics.getScaleFactors();\n\n            var w = void 0,\n                i = void 0,\n                j = void 0,\n                c = void 0,\n                end = void 0,\n                off = void 0;\n            var idx = 0,\n                groupOff = 0;\n            var scale = void 0;\n\n            for (var g = 0; g < windowGroups; g++) {\n                for (i = 0; i < maxSFB;) {\n                    if (HCB.INTENSITY_HCB === sfbCB[idx] || HCB.INTENSITY_HCB2 === sfbCB[idx]) {\n                        end = sectEnd[idx];\n                        for (; i < end; i++, idx++) {\n                            c = HCB.INTENSITY_HCB === sfbCB[idx] ? 1 : -1;\n\n                            if (cpe.isMSMaskPresent()) c *= cpe.isMSUsed(idx) ? -1 : 1;\n\n                            scale = c * scaleFactors[idx];\n\n                            for (w = 0; w < info.getWindowGroupLength(g); w++) {\n                                off = groupOff + w * 128 + offsets[i];\n                                for (j = 0; j < offsets[i + 1] - offsets[i]; j++) {\n                                    specR[off + j] = specL[off + j] * scale;\n                                }\n                            }\n                        }\n                    } else {\n                        end = sectEnd[idx];\n                        idx += end - i;\n                        i = end;\n                    }\n                }\n                groupOff += info.getWindowGroupLength(g) * 128;\n            }\n        }\n    }]);\n    return IS;\n}();\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HCB = __webpack_require__(47);\n\nmodule.exports = function () {\n    function MS() {\n        (0, _classCallCheck3.default)(this, MS);\n    }\n\n    (0, _createClass3.default)(MS, null, [{\n        key: 'process',\n        value: function process(cpe, specL, specR) {\n            var ics = cpe.getLeftChannel();\n\n            var info = ics.getInfo();\n\n            var offsets = info.getSWBOffsets();\n\n            var windowGroups = info.getWindowGroupCount();\n\n            var maxSFB = info.getMaxSFB();\n\n            var sfbCBl = ics.getSfbCB();\n\n            var sfbCBr = cpe.getRightChannel().getSfbCB();\n\n            var groupOff = 0,\n                g = void 0,\n                i = void 0,\n                w = void 0,\n                j = void 0,\n                idx = 0;\n\n            for (g = 0; g < windowGroups; g++) {\n                for (i = 0; i < maxSFB; i++, idx++) {\n                    if (cpe.isMSUsed(idx) && sfbCBl[idx] < HCB.NOISE_HCB && sfbCBr[idx] < HCB.NOISE_HCB) {\n                        for (w = 0; w < info.getWindowGroupLength(g); w++) {\n                            var off = groupOff + w * 128 + offsets[i];\n                            for (j = 0; j < offsets[i + 1] - offsets[i]; j++) {\n                                var t = specL[off + j] - specR[off + j];\n                                specL[off + j] += specR[off + j];\n                                specR[off + j] = t;\n                            }\n                        }\n                    }\n                }\n                groupOff += info.getWindowGroupLength(g) * 128;\n            }\n        }\n    }]);\n    return MS;\n}();\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Windows = __webpack_require__(147);\nvar Constants = __webpack_require__(26);\nvar MDCT = __webpack_require__(148);\n\n// todo: extract to enum\nvar ONLY_LONG_SEQUENCE = 0;\nvar LONG_START_SEQUENCE = 1;\nvar EIGHT_SHORT_SEQUENCE = 2;\nvar LONG_STOP_SEQUENCE = 3;\n\nmodule.exports = function () {\n    function FilterBank(smallFrames, channels) {\n        (0, _classCallCheck3.default)(this, FilterBank);\n\n        if (smallFrames) {\n            throw 'not implemented';\n        } else {\n            this.length = Constants.WINDOW_LEN_LONG;\n            this.shortLen = Constants.WINDOW_LEN_SHORT;\n            this.LONG_WINDOWS = [Windows.SINE_1024, Windows.KBD_1024];\n            this.SHORT_WINDOWS = [Windows.SINE_128, Windows.KBD_128];\n        }\n\n        this.mid = (this.length - this.shortLen) / 2;\n        this.trans = this.shortLen / 2;\n\n        this.mdctShort = new MDCT(this.shortLen * 2);\n        this.mdctLong = new MDCT(this.length * 2);\n\n        // private final float[][] overlaps = new float[channels][length];\n        this.overlaps = new Float32Array(channels * this.length);\n\n        // private final float[] buf = new float[2*length];\n        this.buf = new Float32Array(2 * this.length);\n    }\n\n    (0, _createClass3.default)(FilterBank, [{\n        key: 'process',\n        value: function process(windowSequence, windowShape, windowShapePrev, inp, out, channel) {\n            var i = void 0;\n\n            var mdctLong = this.mdctLong,\n                mdctShort = this.mdctShort;\n            var buf = this.buf,\n                overlap = this.overlaps;\n            var shortLen = this.shortLen,\n                length = this.length;\n            var mid = this.mid,\n                trans = this.trans;\n            var LONG_WINDOWS = this.LONG_WINDOWS,\n                SHORT_WINDOWS = this.SHORT_WINDOWS;\n\n            switch (windowSequence) {\n                case ONLY_LONG_SEQUENCE:\n\n                    mdctLong.process(inp, 0, buf, 0);\n\n                    //add second half output of previous frame to windowed output of current frame\n                    for (i = 0; i < length; i++) {\n                        out[i] = overlap[channel * length + i] + buf[i] * LONG_WINDOWS[windowShapePrev][i];\n                    }\n\n                    //window the second half and save as overlap for next frame\n                    for (i = 0; i < length; i++) {\n                        overlap[channel * length + i] = buf[length + i] * LONG_WINDOWS[windowShape][length - 1 - i];\n                    }\n\n                    break;\n\n                case LONG_START_SEQUENCE:\n\n                    mdctLong.process(inp, 0, buf, 0);\n\n                    //add second half output of previous frame to windowed output of current frame\n                    for (i = 0; i < length; i++) {\n                        out[i] = overlap[channel * length + i] + buf[i] * LONG_WINDOWS[windowShapePrev][i];\n                    }\n\n                    //window the second half and save as overlap for next frame\n                    for (i = 0; i < mid; i++) {\n                        overlap[channel * length + i] = buf[length + i];\n                    }\n\n                    for (i = 0; i < shortLen; i++) {\n                        overlap[channel * length + mid + i] = buf[length + mid + i] * SHORT_WINDOWS[windowShape][shortLen - i - 1];\n                    }\n\n                    for (i = 0; i < mid; i++) {\n                        overlap[channel * length + mid + shortLen + i] = 0;\n                    }\n\n                    break;\n\n                case EIGHT_SHORT_SEQUENCE:\n\n                    for (i = 0; i < 8; i++) {\n                        mdctShort.process(inp, i * shortLen, buf, 2 * i * shortLen);\n                    }\n\n                    //add second half output of previous frame to windowed output of current frame\n                    for (i = 0; i < mid; i++) {\n                        out[i] = overlap[channel * length + i];\n                    }\n\n                    for (i = 0; i < shortLen; i++) {\n                        out[mid + i] = overlap[channel * length + mid + i] + buf[i] * SHORT_WINDOWS[windowShapePrev][i];\n\n                        out[mid + 1 * shortLen + i] = overlap[channel * length + mid + shortLen * 1 + i] + buf[shortLen * 1 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 2 + i] * SHORT_WINDOWS[windowShape][i];\n                        out[mid + 2 * shortLen + i] = overlap[channel * length + mid + shortLen * 2 + i] + buf[shortLen * 3 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 4 + i] * SHORT_WINDOWS[windowShape][i];\n                        out[mid + 3 * shortLen + i] = overlap[channel * length + mid + shortLen * 3 + i] + buf[shortLen * 5 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 6 + i] * SHORT_WINDOWS[windowShape][i];\n                        if (i < trans) out[mid + 4 * shortLen + i] = overlap[channel * length + mid + shortLen * 4 + i] + buf[shortLen * 7 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 8 + i] * SHORT_WINDOWS[windowShape][i];\n                    }\n\n                    //window the second half and save as overlap for next frame\n                    for (i = 0; i < shortLen; i++) {\n                        if (i >= trans) overlap[channel * length + mid + 4 * shortLen + i - length] = buf[shortLen * 7 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 8 + i] * SHORT_WINDOWS[windowShape][i];\n                        overlap[channel * length + mid + 5 * shortLen + i - length] = buf[shortLen * 9 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 10 + i] * SHORT_WINDOWS[windowShape][i];\n                        overlap[channel * length + mid + 6 * shortLen + i - length] = buf[shortLen * 11 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 12 + i] * SHORT_WINDOWS[windowShape][i];\n                        overlap[channel * length + mid + 7 * shortLen + i - length] = buf[shortLen * 13 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i] + buf[shortLen * 14 + i] * SHORT_WINDOWS[windowShape][i];\n                        overlap[channel * length + mid + 8 * shortLen + i - length] = buf[shortLen * 15 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i];\n                    }\n\n                    for (i = 0; i < mid; i++) {\n                        overlap[channel * length + mid + shortLen + i] = 0;\n                    }\n\n                    break;\n\n                case LONG_STOP_SEQUENCE:\n                    mdctLong.process(inp, 0, buf, 0);\n\n                    //add second half output of previous frame to windowed output of current frame\n                    //construct first half window using padding with 1's and 0's\n                    for (i = 0; i < mid; i++) {\n                        out[i] = overlap[channel * length + i];\n                    }\n                    for (i = 0; i < shortLen; i++) {\n                        out[mid + i] = overlap[channel * length + mid + i] + buf[mid + i] * SHORT_WINDOWS[windowShapePrev][i];\n                    }\n                    for (i = 0; i < mid; i++) {\n                        out[mid + shortLen + i] = overlap[channel * length + mid + shortLen + i] + buf[mid + shortLen + i];\n                    }\n\n                    //window the second half and save as overlap for next frame\n                    for (i = 0; i < length; i++) {\n                        overlap[channel * length + i] = buf[length + i] * LONG_WINDOWS[windowShape][length - 1 - i];\n                    }\n\n                    break;\n            }\n        }\n    }]);\n    return FilterBank;\n}();\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Windows = function () {\n    function Windows() {\n        (0, _classCallCheck3.default)(this, Windows);\n    }\n\n    (0, _createClass3.default)(Windows, null, [{\n        key: \"generateSineWindow\",\n        value: function generateSineWindow(len) {\n            var d = new Float32Array(len);\n            for (var i = 0; i < len; i++) {\n                d[i] = Math.sin((i + 0.5) * (Math.PI / (2.0 * len)));\n            }\n            return d;\n        }\n    }, {\n        key: \"generateKBDWindow\",\n        value: function generateKBDWindow(alpha, len) {\n            var PIN = Math.PI / len,\n                out = new Float32Array(len),\n                f = new Float32Array(len),\n                alpha2 = alpha * PIN * (alpha * PIN);\n\n            var sum = 0;\n            for (var n = 0; n < len; n++) {\n                var tmp = n * (len - n) * alpha2,\n                    bessel = 1;\n\n                for (var j = 50; j > 0; j--) {\n                    bessel = bessel * tmp / (j * j) + 1;\n                }\n\n                sum += bessel;\n                f[n] = sum;\n            }\n\n            sum++;\n            for (var _n = 0; _n < len; _n++) {\n                out[_n] = Math.sqrt(f[_n] / sum);\n            }\n\n            return out;\n        }\n\n        //static get SINE_120()  { return SINE_120; }\n\n    }, {\n        key: \"SINE_128\",\n        get: function get() {\n            return SINE_128;\n        }\n        //static get SINE_960()  { return SINE_960; }\n\n    }, {\n        key: \"SINE_1024\",\n        get: function get() {\n            return SINE_1024;\n        }\n\n        //static get KBD_120()  { return KBD_120; }\n\n    }, {\n        key: \"KBD_128\",\n        get: function get() {\n            return KBD_128;\n        }\n        //static get KBD_960()  { return KBD_960; }\n\n    }, {\n        key: \"KBD_1024\",\n        get: function get() {\n            return KBD_1024;\n        }\n    }]);\n    return Windows;\n}();\n\n//const SINE_120  = Windows.generateSineWindow(120);\n\n\nvar SINE_128 = Windows.generateSineWindow(128);\n//const SINE_960  = Windows.generateSineWindow(960);\nvar SINE_1024 = Windows.generateSineWindow(1024);\n\n//const KBD_120  = Windows.generateKBDWindow(120);\nvar KBD_128 = Windows.generateKBDWindow(6, 128);\n//const KBD_960  = Windows.generateKBDWindow(960);\nvar KBD_1024 = Windows.generateKBDWindow(4, 1024);\n\nmodule.exports = Windows;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tables = __webpack_require__(149);\nvar FFT = __webpack_require__(150);\n\nmodule.exports = function () {\n    function MDCT(length) {\n        (0, _classCallCheck3.default)(this, MDCT);\n\n        this.N = length;\n        this.N2 = length >> 1;\n        this.N4 = length >> 2;\n        this.N8 = length >> 3;\n\n        switch (length) {\n            case 2048:\n                this.sincos = Tables.MDCT_TABLE_2048;\n                break;\n            case 256:\n                this.sincos = Tables.MDCT_TABLE_256;\n                break;\n            case 1920:\n                this.sincos = Tables.MDCT_TABLE_1920;\n                break;\n            case 240:\n                this.sincos = Tables.MDCT_TABLE_240;\n                break; // fixme: break needed?\n            default:\n                throw \"unsupported MDCT length: \" + length;\n        }\n\n        this.fft = new FFT(this.N4);\n\n        // private final float[][] buf = new float[N4][2];\n        this.buf = new Float32Array(this.N4 * 2);\n    }\n\n    (0, _createClass3.default)(MDCT, [{\n        key: 'process',\n        value: function process(inp, inOff, out, outOff) {\n            // if (this.processed) throw 'processed'; this.processed = true;\n            var k = void 0,\n                tmp0 = void 0,\n                tmp1 = void 0;\n\n            var N2 = this.N2,\n                N4 = this.N4,\n                N8 = this.N8,\n                buf = this.buf,\n                sincos = this.sincos;\n\n            //pre-IFFT complex multiplication\n            for (k = 0; k < N4; k++) {\n                buf[2 * k + 1] = inp[inOff + 2 * k] * sincos[k][0] + inp[inOff + N2 - 1 - 2 * k] * sincos[k][1];\n                buf[2 * k + 0] = inp[inOff + N2 - 1 - 2 * k] * sincos[k][0] - inp[inOff + 2 * k] * sincos[k][1];\n            }\n\n            //complex IFFT, non-scaling\n            this.fft.process(buf, false);\n\n            //post-IFFT complex multiplication\n            for (k = 0; k < N4; k++) {\n                tmp0 = buf[2 * k + 0];\n                tmp1 = buf[2 * k + 1];\n                buf[2 * k + 1] = tmp1 * sincos[k][0] + tmp0 * sincos[k][1];\n                buf[2 * k + 0] = tmp0 * sincos[k][0] - tmp1 * sincos[k][1];\n            }\n\n            //reordering\n            for (k = 0; k < N8; k += 2) {\n                out[outOff + 2 * k] = buf[2 * (N8 + k) + 1];\n                out[outOff + 2 + 2 * k] = buf[2 * (N8 + 1 + k) + 1];\n\n                out[outOff + 1 + 2 * k] = -buf[2 * (N8 - 1 - k) + 0];\n                out[outOff + 3 + 2 * k] = -buf[2 * (N8 - 2 - k) + 0];\n\n                out[outOff + N4 + 2 * k] = buf[2 * k + 0];\n                out[outOff + N4 + 2 + 2 * k] = buf[2 * (1 + k) + 0];\n\n                out[outOff + N4 + 1 + 2 * k] = -buf[2 * (N4 - 1 - k) + 1];\n                out[outOff + N4 + 3 + 2 * k] = -buf[2 * (N4 - 2 - k) + 1];\n\n                out[outOff + N2 + 2 * k] = buf[2 * (N8 + k) + 0];\n                out[outOff + N2 + 2 + 2 * k] = buf[2 * (N8 + 1 + k) + 0];\n\n                out[outOff + N2 + 1 + 2 * k] = -buf[2 * (N8 - 1 - k) + 1];\n                out[outOff + N2 + 3 + 2 * k] = -buf[2 * (N8 - 2 - k) + 1];\n\n                out[outOff + N2 + N4 + 2 * k] = -buf[2 * k + 1];\n                out[outOff + N2 + N4 + 2 + 2 * k] = -buf[2 * (1 + k) + 1];\n\n                out[outOff + N2 + N4 + 1 + 2 * k] = buf[2 * (N4 - 1 - k) + 0];\n                out[outOff + N2 + N4 + 3 + 2 * k] = buf[2 * (N4 - 2 - k) + 0];\n            }\n        }\n    }]);\n    return MDCT;\n}();\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n    function MDCTTables() {\n        (0, _classCallCheck3.default)(this, MDCTTables);\n    }\n\n    (0, _createClass3.default)(MDCTTables, null, [{\n        key: \"MDCT_TABLE_256\",\n        get: function get() {\n            return MDCT_TABLE_256;\n        }\n    }, {\n        key: \"MDCT_TABLE_240\",\n        get: function get() {\n            return MDCT_TABLE_240;\n        }\n    }, {\n        key: \"MDCT_TABLE_2048\",\n        get: function get() {\n            return MDCT_TABLE_2048;\n        }\n    }, {\n        key: \"MDCT_TABLE_1920\",\n        get: function get() {\n            return MDCT_TABLE_1920;\n        }\n    }]);\n    return MDCTTables;\n}();\n\nvar MDCT_TABLE_256 = [[0.088387931675923, 0.000271171628935], [0.088354655998507, 0.002440238387037], [0.088268158780110, 0.004607835236780], [0.088128492123423, 0.006772656498875], [0.087935740158418, 0.008933398165942], [0.087690018991670, 0.011088758687994], [0.087391476636423, 0.013237439756448], [0.087040292923427, 0.015378147086172], [0.086636679392621, 0.017509591195118], [0.086180879165703, 0.019630488181053], [0.085673166799686, 0.021739560494940], [0.085113848121515, 0.023835537710479], [0.084503260043847, 0.025917157289369], [0.083841770362110, 0.027983165341813], [0.083129777532952, 0.030032317381813], [0.082367710434230, 0.032063379076803], [0.081556028106671, 0.034075126991164], [0.080695219477356, 0.036066349323177], [0.079785803065216, 0.038035846634965], [0.078828326668693, 0.039982432574992], [0.077823367035766, 0.041904934592675], [0.076771529516540, 0.043802194644686], [0.075673447698606, 0.045673069892513], [0.074529783025390, 0.047516433390863], [0.073341224397728, 0.049331174766491], [0.072108487758894, 0.051116200887052], [0.070832315663343, 0.052870436519557], [0.069513476829429, 0.054592824978055], [0.068152765676348, 0.056282328760143], [0.066751001845620, 0.057937930171918], [0.065309029707361, 0.059558631940996], [0.063827717851668, 0.061143457817234], [0.062307958565413, 0.062691453160784], [0.060750667294763, 0.064201685517134], [0.059156782093749, 0.065673245178784], [0.057527263059216, 0.067105245733220], [0.055863091752499, 0.068496824596852], [0.054165270608165, 0.069847143534609], [0.052434822330188, 0.071155389164853], [0.050672789275903, 0.072420773449336], [0.048880232828135, 0.073642534167879], [0.047058232755862, 0.074819935377512], [0.045207886563797, 0.075952267855771], [0.043330308831298, 0.077038849527912], [0.041426630540984, 0.078079025877766], [0.039497998397473, 0.079072170341994], [0.037545574136653, 0.080017684687506], [0.035570533825892, 0.080914999371817], [0.033574067155622, 0.081763573886112], [0.031557376722714, 0.082562897080836], [0.029521677306074, 0.083312487473584], [0.027468195134911, 0.084011893539132], [0.025398167150101, 0.084660693981419], [0.023312840259098, 0.085258497987320], [0.021213470584847, 0.085804945462053], [0.019101322709138, 0.086299707246093], [0.016977668910873, 0.086742485313442], [0.014843788399692, 0.087133012951149], [0.012700966545425, 0.087471054919968], [0.010550494103830, 0.087756407596056], [0.008393666439096, 0.087988899093631], [0.006231782743558, 0.088168389368510], [0.004066145255116, 0.088294770302461], [0.001898058472816, 0.088367965768336]];\n\nvar MDCT_TABLE_240 = [[0.091286604111815, 0.000298735779793], [0.091247502481454, 0.002688238127538], [0.091145864370807, 0.005075898091152], [0.090981759437558, 0.007460079287760], [0.090755300151030, 0.009839147718664], [0.090466641715108, 0.012211472889198], [0.090115981961863, 0.014575428926191], [0.089703561215976, 0.016929395692256], [0.089229662130024, 0.019271759896156], [0.088694609490769, 0.021600916198470], [0.088098769996564, 0.023915268311810], [0.087442552006035, 0.026213230094844], [0.086726405258214, 0.028493226639351], [0.085950820564309, 0.030753695349588], [0.085116329471329, 0.032993087013213], [0.084223503897785, 0.035209866863042], [0.083272955741727, 0.037402515628894], [0.082265336461381, 0.039569530578832], [0.081201336628670, 0.041709426549053], [0.080081685455930, 0.043820736961749], [0.078907150296148, 0.045902014830227], [0.077678536117054, 0.047951833750597], [0.076396684949434, 0.049968788879362], [0.075062475310050, 0.051951497896226], [0.073676821599542, 0.053898601951466], [0.072240673475749, 0.055808766597225], [0.070755015202858, 0.057680682702068], [0.069220864976840, 0.059513067348201], [0.067639274227625, 0.061304664710718], [0.066011326898512, 0.063054246918278], [0.064338138703282, 0.064760614894630], [0.062620856361546, 0.066422599180399], [0.060860656812842, 0.068039060734572], [0.059058746410016, 0.069608891715145], [0.057216360092450, 0.071131016238378], [0.055334760539699, 0.072604391116154], [0.053415237306106, 0.074028006570930], [0.051459105937014, 0.075400886927784], [0.049467707067153, 0.076722091283096], [0.047442405501835, 0.077990714149396], [0.045384589281588, 0.079205886075941], [0.043295668730857, 0.080366774244592], [0.041177075491445, 0.081472583040586], [0.039030261541332, 0.082522554597810], [0.036856698199564, 0.083515969318206], [0.034657875117883, 0.084452146364948], [0.032435299259796, 0.085330444129049], [0.030190493867775, 0.086150260669096], [0.027924997419306, 0.086911034123781], [0.025640362572491, 0.087612243096981], [0.023338155101933, 0.088253407015092], [0.021019952825636, 0.088834086456390], [0.018687344523641, 0.089353883452193], [0.016341928849164, 0.089812441759604], [0.013985313232951, 0.090209447105664], [0.011619112781631, 0.090544627402740], [0.009244949170797, 0.090817752935000], [0.006864449533597, 0.091028636515846], [0.004479245345574, 0.091177133616206], [0.002090971306534, 0.091263142463585]];\n\nvarn\nvar MDCT_TABLE_1920 = [[0.032274858518097, 0.000013202404176], [0.032274642494505, 0.000118821372483], [0.032274080835421, 0.000224439068308], [0.032273173546860, 0.000330054360572], [0.032271920638538, 0.000435666118218], [0.032270322123873, 0.000541273210231], [0.032268378019984, 0.000646874505642], [0.032266088347691, 0.000752468873546], [0.032263453131514, 0.000858055183114], [0.032260472399674, 0.000963632303600], [0.032257146184092, 0.001069199104358], [0.032253474520390, 0.001174754454853], [0.032249457447888, 0.001280297224671], [0.032245095009606, 0.001385826283535], [0.032240387252262, 0.001491340501313], [0.032235334226272, 0.001596838748031], [0.032229935985750, 0.001702319893890], [0.032224192588507, 0.001807782809271], [0.032218104096050, 0.001913226364749], [0.032211670573582, 0.002018649431111], [0.032204892090000, 0.002124050879359], [0.032197768717898, 0.002229429580728], [0.032190300533560, 0.002334784406698], [0.032182487616965, 0.002440114229003], [0.032174330051782, 0.002545417919644], [0.032165827925374, 0.002650694350905], [0.032156981328790, 0.002755942395358], [0.032147790356771, 0.002861160925883], [0.032138255107744, 0.002966348815672], [0.032128375683825, 0.003071504938250], [0.032118152190814, 0.003176628167476], [0.032107584738196, 0.003281717377568], [0.032096673439141, 0.003386771443102], [0.032085418410500, 0.003491789239036], [0.032073819772804, 0.003596769640711], [0.032061877650267, 0.003701711523874], [0.032049592170778, 0.003806613764680], [0.032036963465906, 0.003911475239711], [0.032023991670893, 0.004016294825985], [0.032010676924657, 0.004121071400967], [0.031997019369789, 0.004225803842586], [0.031983019152549, 0.004330491029241], [0.031968676422869, 0.004435131839816], [0.031953991334348, 0.004539725153692], [0.031938964044252, 0.004644269850758], [0.031923594713510, 0.004748764811426], [0.031907883506716, 0.004853208916638], [0.031891830592124, 0.004957601047881], [0.031875436141648, 0.005061940087200], [0.031858700330859, 0.005166224917208], [0.031841623338985, 0.005270454421097], [0.031824205348907, 0.005374627482653], [0.031806446547156, 0.005478742986267], [0.031788347123916, 0.005582799816945], [0.031769907273017, 0.005686796860323], [0.031751127191935, 0.005790733002674], [0.031732007081789, 0.005894607130928], [0.031712547147340, 0.005998418132675], [0.031692747596989, 0.006102164896182], [0.031672608642773, 0.006205846310406], [0.031652130500364, 0.006309461265002], [0.031631313389067, 0.006413008650337], [0.031610157531816, 0.006516487357501], [0.031588663155172, 0.006619896278321], [0.031566830489325, 0.006723234305370], [0.031544659768083, 0.006826500331981], [0.031522151228878, 0.006929693252258], [0.031499305112758, 0.007032811961088], [0.031476121664387, 0.007135855354151], [0.031452601132040, 0.007238822327937], [0.031428743767604, 0.007341711779751], [0.031404549826572, 0.007444522607730], [0.031380019568042, 0.007547253710853], [0.031355153254712, 0.007649903988952], [0.031329951152882, 0.007752472342725], [0.031304413532445, 0.007854957673748], [0.031278540666888, 0.007957358884484], [0.031252332833290, 0.008059674878300], [0.031225790312316, 0.008161904559473], [0.031198913388214, 0.008264046833205], [0.031171702348814, 0.008366100605636], [0.031144157485525, 0.008468064783849], [0.031116279093331, 0.008569938275893], [0.031088067470786, 0.008671719990782], [0.031059522920014, 0.008773408838517], [0.031030645746705, 0.008875003730092], [0.031001436260110, 0.008976503577507], [0.030971894773039, 0.009077907293780], [0.030942021601857, 0.009179213792959], [0.030911817066483, 0.009280421990133], [0.030881281490382, 0.009381530801444], [0.030850415200566, 0.009482539144097], [0.030819218527589, 0.009583445936373], [0.030787691805541, 0.009684250097643], [0.030755835372048, 0.009784950548375], [0.030723649568268, 0.009885546210147], [0.030691134738883, 0.009986036005661], [0.030658291232103, 0.010086418858753], [0.030625119399655, 0.010186693694402], [0.030591619596781, 0.010286859438745], [0.030557792182239, 0.010386915019088], [0.030523637518292, 0.010486859363916], [0.030489155970710, 0.010586691402906], [0.030454347908763, 0.010686410066936], [0.030419213705216, 0.010786014288099], [0.030383753736329, 0.010885502999714], [0.030347968381849, 0.010984875136338], [0.030311858025010, 0.011084129633775], [0.030275423052523, 0.011183265429088], [0.030238663854579, 0.011282281460612], [0.030201580824838, 0.011381176667967], [0.030164174360430, 0.011479949992062], [0.030126444861948, 0.011578600375117], [0.030088392733446, 0.011677126760663], [0.030050018382430, 0.011775528093563], [0.030011322219859, 0.011873803320018], [0.029972304660138, 0.011971951387578], [0.029932966121114, 0.012069971245157], [0.029893307024070, 0.012167861843041], [0.029853327793724, 0.012265622132901], [0.029813028858222, 0.012363251067801], [0.029772410649132, 0.012460747602215], [0.029731473601443, 0.012558110692033], [0.029690218153558, 0.012655339294575], [0.029648644747289, 0.012752432368600], [0.029606753827855, 0.012849388874320], [0.029564545843872, 0.012946207773407], [0.029522021247356, 0.013042888029011], [0.029479180493710, 0.013139428605762], [0.029436024041725, 0.013235828469789], [0.029392552353570, 0.013332086588727], [0.029348765894794, 0.013428201931728], [0.029304665134313, 0.013524173469475], [0.029260250544412, 0.013620000174189], [0.029215522600735, 0.013715681019643], [0.029170481782283, 0.013811214981173], [0.029125128571406, 0.013906601035686], [0.029079463453801, 0.014001838161674], [0.029033486918505, 0.014096925339225], [0.028987199457889, 0.014191861550031], [0.028940601567655, 0.014286645777401], [0.028893693746829, 0.014381277006273], [0.028846476497755, 0.014475754223221], [0.028798950326094, 0.014570076416472], [0.028751115740811, 0.014664242575910], [0.028702973254178, 0.014758251693091], [0.028654523381760, 0.014852102761253], [0.028605766642418, 0.014945794775326], [0.028556703558297, 0.015039326731945], [0.028507334654823, 0.015132697629457], [0.028457660460698, 0.015225906467935], [0.028407681507891, 0.015318952249187], [0.028357398331639, 0.015411833976768], [0.028306811470432, 0.015504550655988], [0.028255921466016, 0.015597101293927], [0.028204728863381, 0.015689484899442], [0.028153234210760, 0.015781700483179], [0.028101438059619, 0.015873747057582], [0.028049340964652, 0.015965623636907], [0.027996943483779, 0.016057329237229], [0.027944246178133, 0.016148862876456], [0.027891249612061, 0.016240223574335], [0.027837954353113, 0.016331410352467], [0.027784360972039, 0.016422422234315], [0.027730470042780, 0.016513258245214], [0.027676282142466, 0.016603917412384], [0.027621797851405, 0.016694398764938], [0.027567017753080, 0.016784701333894], [0.027511942434143, 0.016874824152183], [0.027456572484404, 0.016964766254662], [0.027400908496833, 0.017054526678124], [0.027344951067546, 0.017144104461307], [0.027288700795801, 0.017233498644904], [0.027232158283994, 0.017322708271577], [0.027175324137651, 0.017411732385960], [0.027118198965418, 0.017500570034678], [0.027060783379060, 0.017589220266351], [0.027003077993454, 0.017677682131607], [0.026945083426576, 0.017765954683088], [0.026886800299502, 0.017854036975468], [0.026828229236397, 0.017941928065456], [0.026769370864511, 0.018029627011808], [0.026710225814170, 0.018117132875340], [0.026650794718768, 0.018204444718934], [0.026591078214767, 0.018291561607551], [0.026531076941680, 0.018378482608238], [0.026470791542075, 0.018465206790142], [0.026410222661558, 0.018551733224515], [0.026349370948775, 0.018638060984730], [0.026288237055398, 0.018724189146286], [0.026226821636121, 0.018810116786819], [0.026165125348656, 0.018895842986112], [0.026103148853718, 0.018981366826109], [0.026040892815028, 0.019066687390916], [0.025978357899296, 0.019151803766819], [0.025915544776223, 0.019236715042290], [0.025852454118485, 0.019321420307998], [0.025789086601733, 0.019405918656817], [0.025725442904582, 0.019490209183837], [0.025661523708606, 0.019574290986376], [0.025597329698327, 0.019658163163984], [0.025532861561211, 0.019741824818458], [0.025468119987662, 0.019825275053848], [0.025403105671008, 0.019908512976470], [0.025337819307501, 0.019991537694913], [0.025272261596305, 0.020074348320047], [0.025206433239491, 0.020156943965039], [0.025140334942028, 0.020239323745355], [0.025073967411776, 0.020321486778774], [0.025007331359476, 0.020403432185395], [0.024940427498748, 0.020485159087650], [0.024873256546079, 0.020566666610309], [0.024805819220816, 0.020647953880491], [0.024738116245157, 0.020729020027676], [0.024670148344147, 0.020809864183709], [0.024601916245669, 0.020890485482816], [0.024533420680433, 0.020970883061607], [0.024464662381971, 0.021051056059087], [0.024395642086630, 0.021131003616670], [0.024326360533561, 0.021210724878181], [0.024256818464715, 0.021290218989868], [0.024187016624830, 0.021369485100415], [0.024116955761430, 0.021448522360944], [0.024046636624808, 0.021527329925030], [0.023976059968027, 0.021605906948708], [0.023905226546906, 0.021684252590480], [0.023834137120014, 0.021762366011328], [0.023762792448662, 0.021840246374720], [0.023691193296893, 0.021917892846620], [0.023619340431478, 0.021995304595495], [0.023547234621902, 0.022072480792330], [0.023474876640361, 0.022149420610628], [0.023402267261751, 0.022226123226426], [0.023329407263659, 0.022302587818300], [0.023256297426359, 0.022378813567377], [0.023182938532797, 0.022454799657339], [0.023109331368588, 0.022530545274437], [0.023035476722006, 0.022606049607496], [0.022961375383975, 0.022681311847926], [0.022887028148061, 0.022756331189727], [0.022812435810462, 0.022831106829504], [0.022737599170003, 0.022905637966469], [0.022662519028125, 0.022979923802453], [0.022587196188874, 0.023053963541915], [0.022511631458899, 0.023127756391950], [0.022435825647437, 0.023201301562294], [0.022359779566306, 0.023274598265338], [0.022283494029900, 0.023347645716133], [0.022206969855176, 0.023420443132400], [0.022130207861645, 0.023492989734537], [0.022053208871367, 0.023565284745628], [0.021975973708940, 0.023637327391451], [0.021898503201489, 0.023709116900488], [0.021820798178663, 0.023780652503931], [0.021742859472618, 0.023851933435691], [0.021664687918017, 0.023922958932406], [0.021586284352013, 0.023993728233451], [0.021507649614247, 0.024064240580942], [0.021428784546832, 0.024134495219750], [0.021349689994350, 0.024204491397504], [0.021270366803840, 0.024274228364600], [0.021190815824791, 0.024343705374213], [0.021111037909128, 0.024412921682298], [0.021031033911210, 0.024481876547605], [0.020950804687815, 0.024550569231683], [0.020870351098134, 0.024618998998889], [0.020789674003759, 0.024687165116394], [0.020708774268678, 0.024755066854194], [0.020627652759262, 0.024822703485116], [0.020546310344257, 0.024890074284826], [0.020464747894775, 0.024957178531837], [0.020382966284284, 0.025024015507516], [0.020300966388600, 0.025090584496093], [0.020218749085876, 0.025156884784668], [0.020136315256592, 0.025222915663218], [0.020053665783549, 0.025288676424605], [0.019970801551857, 0.025354166364584], [0.019887723448925, 0.025419384781811], [0.019804432364452, 0.025484330977848], [0.019720929190419, 0.025549004257175], [0.019637214821078, 0.025613403927192], [0.019553290152943, 0.025677529298230], [0.019469156084779, 0.025741379683559], [0.019384813517595, 0.025804954399392], [0.019300263354632, 0.025868252764895], [0.019215506501354, 0.025931274102193], [0.019130543865439, 0.025994017736379], [0.019045376356769, 0.026056482995518], [0.018960004887419, 0.026118669210657], [0.018874430371648, 0.026180575715833], [0.018788653725892, 0.026242201848076], [0.018702675868750, 0.026303546947421], [0.018616497720974, 0.026364610356909], [0.018530120205464, 0.026425391422602], [0.018443544247254, 0.026485889493583], [0.018356770773502, 0.026546103921965], [0.018269800713483, 0.026606034062902], [0.018182634998576, 0.026665679274589], [0.018095274562256, 0.026725038918274], [0.018007720340083, 0.026784112358263], [0.017919973269692, 0.026842898961926], [0.017832034290785, 0.026901398099707], [0.017743904345116, 0.026959609145127], [0.017655584376488, 0.027017531474792], [0.017567075330734, 0.027075164468401], [0.017478378155718, 0.027132507508750], [0.017389493801313, 0.027189559981742], [0.017300423219401, 0.027246321276391], [0.017211167363854, 0.027302790784828], [0.017121727190533, 0.027358967902310], [0.017032103657269, 0.027414852027226], [0.016942297723858, 0.027470442561102], [0.016852310352050, 0.027525738908608], [0.016762142505537, 0.027580740477564], [0.016671795149944, 0.027635446678948], [0.016581269252819, 0.027689856926900], [0.016490565783622, 0.027743970638730], [0.016399685713714, 0.027797787234924], [0.016308630016347, 0.027851306139149], [0.016217399666655, 0.027904526778260], [0.016125995641641, 0.027957448582309], [0.016034418920170, 0.028010070984544], [0.015942670482954, 0.028062393421421], [0.015850751312545, 0.028114415332610], [0.015758662393324, 0.028166136160998], [0.015666404711489, 0.028217555352697], [0.015573979255046, 0.028268672357047], [0.015481387013797, 0.028319486626627], [0.015388628979331, 0.028369997617257], [0.015295706145012, 0.028420204788004], [0.015202619505968, 0.028470107601191], [0.015109370059084, 0.028519705522399], [0.015015958802984, 0.028568998020472], [0.014922386738030, 0.028617984567529], [0.014828654866302, 0.028666664638963], [0.014734764191593, 0.028715037713449], [0.014640715719398, 0.028763103272951], [0.014546510456900, 0.028810860802724], [0.014452149412962, 0.028858309791325], [0.014357633598114, 0.028905449730613], [0.014262964024545, 0.028952280115756], [0.014168141706090, 0.028998800445240], [0.014073167658220, 0.029045010220868], [0.013978042898030, 0.029090908947771], [0.013882768444231, 0.029136496134411], [0.013787345317136, 0.029181771292585], [0.013691774538648, 0.029226733937433], [0.013596057132255, 0.029271383587441], [0.013500194123014, 0.029315719764447], [0.013404186537539, 0.029359741993647], [0.013308035403995, 0.029403449803598], [0.013211741752084, 0.029446842726223], [0.013115306613032, 0.029489920296820], [0.013018731019584, 0.029532682054063], [0.012922016005985, 0.029575127540008], [0.012825162607977, 0.029617256300097], [0.012728171862781, 0.029659067883165], [0.012631044809089, 0.029700561841444], [0.012533782487056, 0.029741737730567], [0.012436385938281, 0.029782595109573], [0.012338856205805, 0.029823133540913], [0.012241194334091, 0.029863352590452], [0.012143401369021, 0.029903251827477], [0.012045478357878, 0.029942830824699], [0.011947426349339, 0.029982089158259], [0.011849246393462, 0.030021026407731], [0.011750939541676, 0.030059642156129], [0.011652506846768, 0.030097935989909], [0.011553949362874, 0.030135907498976], [0.011455268145464, 0.030173556276684], [0.011356464251335, 0.030210881919845], [0.011257538738598, 0.030247884028732], [0.011158492666665, 0.030284562207083], [0.011059327096240, 0.030320916062102], [0.010960043089307, 0.030356945204470], [0.010860641709118, 0.030392649248343], [0.010761124020182, 0.030428027811361], [0.010661491088253, 0.030463080514646], [0.010561743980319, 0.030497806982812], [0.010461883764593, 0.030532206843968], [0.010361911510496, 0.030566279729717], [0.010261828288652, 0.030600025275167], [0.010161635170872, 0.030633443118931], [0.010061333230142, 0.030666532903129], [0.009960923540617, 0.030699294273397], [0.009860407177603, 0.030731726878888], [0.009759785217550, 0.030763830372273], [0.009659058738038, 0.030795604409750], [0.009558228817767, 0.030827048651045], [0.009457296536545, 0.030858162759415], [0.009356262975275, 0.030888946401653], [0.009255129215945, 0.030919399248091], [0.009153896341616, 0.030949520972603], [0.009052565436412, 0.030979311252611], [0.008951137585505, 0.031008769769084], [0.008849613875105, 0.031037896206544], [0.008747995392451, 0.031066690253072], [0.008646283225794, 0.031095151600306], [0.008544478464390, 0.031123279943448], [0.008442582198486, 0.031151074981266], [0.008340595519310, 0.031178536416098], [0.008238519519057, 0.031205663953853], [0.008136355290878, 0.031232457304017], [0.008034103928871, 0.031258916179656], [0.007931766528065, 0.031285040297416], [0.007829344184412, 0.031310829377528], [0.007726837994772, 0.031336283143813], [0.007624249056906, 0.031361401323680], [0.007521578469457, 0.031386183648135], [0.007418827331946, 0.031410629851778], [0.007315996744755, 0.031434739672811], [0.007213087809115, 0.031458512853036], [0.007110101627101, 0.031481949137863], [0.007007039301610, 0.031505048276306], [0.006903901936357, 0.031527810020993], [0.006800690635862, 0.031550234128164], [0.006697406505433, 0.031572320357675], [0.006594050651161, 0.031594068473000], [0.006490624179905, 0.031615478241233], [0.006387128199278, 0.031636549433095], [0.006283563817639, 0.031657281822929], [0.006179932144080, 0.031677675188707], [0.006076234288412, 0.031697729312034], [0.005972471361157, 0.031717443978146], [0.005868644473532, 0.031736818975914], [0.005764754737440, 0.031755854097848], [0.005660803265456, 0.031774549140098], [0.005556791170816, 0.031792903902453], [0.005452719567407, 0.031810918188350], [0.005348589569753, 0.031828591804869], [0.005244402293001, 0.031845924562742], [0.005140158852914, 0.031862916276347], [0.005035860365855, 0.031879566763717], [0.004931507948778, 0.031895875846539], [0.004827102719212, 0.031911843350155], [0.004722645795254, 0.031927469103567], [0.004618138295554, 0.031942752939435], [0.004513581339303, 0.031957694694082], [0.004408976046222, 0.031972294207493], [0.004304323536549, 0.031986551323320], [0.004199624931030, 0.032000465888879], [0.004094881350902, 0.032014037755158], [0.003990093917884, 0.032027266776813], [0.003885263754166, 0.032040152812170], [0.003780391982394, 0.032052695723232], [0.003675479725661, 0.032064895375674], [0.003570528107494, 0.032076751638847], [0.003465538251839, 0.032088264385780], [0.003360511283053, 0.032099433493181], [0.003255448325892, 0.032110258841438], [0.003150350505494, 0.032120740314619], [0.003045218947373, 0.032130877800478], [0.002940054777404, 0.032140671190449], [0.002834859121810, 0.032150120379653], [0.002729633107153, 0.032159225266897], [0.002624377860318, 0.032167985754674], [0.002519094508504, 0.032176401749168], [0.002413784179212, 0.032184473160250], [0.002308448000231, 0.032192199901481], [0.002203087099626, 0.032199581890114], [0.002097702605728, 0.032206619047093], [0.001992295647121, 0.032213311297057], [0.001886867352628, 0.032219658568338], [0.001781418851302, 0.032225660792960], [0.001675951272410, 0.032231317906644], [0.001570465745428, 0.032236629848809], [0.001464963400018, 0.032241596562566], [0.001359445366028, 0.032246217994727], [0.001253912773470, 0.032250494095799], [0.001148366752513, 0.032254424819990], [0.001042808433471, 0.032258010125204], [0.000937238946789, 0.032261249973045], [0.000831659423030, 0.032264144328817], [0.000726070992868, 0.032266693161525], [0.000620474787068, 0.032268896443871], [0.000514871936481, 0.032270754152261], [0.000409263572030, 0.032272266266801], [0.000303650824695, 0.032273432771295], [0.000198034825504, 0.032274253653254], [0.000092416705518, 0.032274728903884]];\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tables = __webpack_require__(151);\n\nmodule.exports = function () {\n    function FFT(length) {\n        (0, _classCallCheck3.default)(this, FFT);\n\n        this.length = length;\n\n        switch (length) {\n            case 64:\n                this.roots = Tables.FFT_TABLE_64;\n                this.tabln = 2;\n                break;\n            case 512:\n                this.roots = Tables.FFT_TABLE_512;\n                this.tabln = 3;\n                break;\n            case 60:\n                this.roots = Tables.FFT_TABLE_60;\n                this.tabln = 2;\n                break;\n            case 480:\n                this.roots = Tables.FFT_TABLE_480;\n                this.tabln = 3;\n                break;\n            default:\n                throw \"unexpected FFT length: \" + length;\n        }\n    }\n\n    (0, _createClass3.default)(FFT, [{\n        key: \"process\",\n        value: function process(inp, forward) {\n            var imOff = forward ? 2 : 1;\n            var len = this.length; //N4 of MDCT\n            var scale = forward ? len : 1;\n            var rev = new Float32Array(len * 2);\n\n            //bit-reversal\n            var ii = 0;\n            for (var i = 0; i < len; i++) {\n                rev[i * 2 + 0] = inp[2 * ii + 0];\n                rev[i * 2 + 1] = inp[2 * ii + 1];\n                var k = len >> 1;\n                while (ii >= k && k > 0) {\n                    ii -= k;\n                    k >>= 1;\n                }\n                ii += k;\n            }\n            for (var _i = 0; _i < len; _i++) {\n                inp[2 * _i + 0] = rev[_i * 2 + 0];\n                inp[2 * _i + 1] = rev[_i * 2 + 1];\n            }\n\n            //bottom base-4 round\n            for (var _i2 = 0; _i2 < len; _i2 += 4) {\n                var a0 = inp[2 * _i2 + 0] + inp[2 * (_i2 + 1) + 0];\n                var a1 = inp[2 * _i2 + 1] + inp[2 * (_i2 + 1) + 1];\n                var b0 = inp[2 * (_i2 + 2) + 0] + inp[2 * (_i2 + 3) + 0];\n                var b1 = inp[2 * (_i2 + 2) + 1] + inp[2 * (_i2 + 3) + 1];\n                var c0 = inp[2 * _i2 + 0] - inp[2 * (_i2 + 1) + 0];\n                var c1 = inp[2 * _i2 + 1] - inp[2 * (_i2 + 1) + 1];\n                var d0 = inp[2 * (_i2 + 2) + 0] - inp[2 * (_i2 + 3) + 0];\n                var d1 = inp[2 * (_i2 + 2) + 1] - inp[2 * (_i2 + 3) + 1];\n\n                inp[2 * _i2 + 0] = a0 + b0;\n                inp[2 * _i2 + 1] = a1 + b1;\n                inp[2 * (_i2 + 2) + 0] = a0 - b0;\n                inp[2 * (_i2 + 2) + 1] = a1 - b1;\n\n                var e1_0 = c0 - d1;\n                var e1_1 = c1 + d0;\n                var e2_0 = c0 + d1;\n                var e2_1 = c1 - d0;\n\n                if (forward) {\n                    inp[2 * (_i2 + 1) + 0] = e2_0;\n                    inp[2 * (_i2 + 1) + 1] = e2_1;\n                    inp[2 * (_i2 + 3) + 0] = e1_0;\n                    inp[2 * (_i2 + 3) + 1] = e1_1;\n                } else {\n                    inp[2 * (_i2 + 1) + 0] = e1_0;\n                    inp[2 * (_i2 + 1) + 1] = e1_1;\n                    inp[2 * (_i2 + 3) + 0] = e2_0;\n                    inp[2 * (_i2 + 3) + 1] = e2_1;\n                }\n            }\n\n            //iterations from bottom to top\n            var shift = void 0,\n                m = void 0,\n                km = void 0;\n            var rootRe = void 0,\n                rootIm = void 0,\n                zRe = void 0,\n                zIm = void 0;\n\n            for (var _i3 = 4; _i3 < len; _i3 <<= 1) {\n                shift = _i3 << 1;\n                m = len / shift;\n                for (var j = 0; j < len; j += shift) {\n                    for (var _k = 0; _k < _i3; _k++) {\n                        km = _k * m;\n                        rootRe = this.roots[this.tabln * km + 0];\n                        rootIm = this.roots[this.tabln * km + imOff];\n                        zRe = inp[2 * (_i3 + j + _k) + 0] * rootRe - inp[2 * (_i3 + j + _k) + 1] * rootIm;\n                        zIm = inp[2 * (_i3 + j + _k) + 0] * rootIm + inp[2 * (_i3 + j + _k) + 1] * rootRe;\n\n                        inp[2 * (_i3 + j + _k) + 0] = (inp[2 * (j + _k) + 0] - zRe) * scale;\n                        inp[2 * (_i3 + j + _k) + 1] = (inp[2 * (j + _k) + 1] - zIm) * scale;\n                        inp[2 * (j + _k) + 0] = (inp[2 * (j + _k) + 0] + zRe) * scale;\n                        inp[2 * (j + _k) + 1] = (inp[2 * (j + _k) + 1] + zIm) * scale;\n                    }\n                }\n            }\n        }\n    }]);\n    return FFT;\n}();\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _classCallCheck2 = __webpack_require__(0);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(1);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FFTTables = function () {\n    function FFTTables() {\n        (0, _classCallCheck3.default)(this, FFTTables);\n    }\n\n    (0, _createClass3.default)(FFTTables, null, [{\n        key: \"generateShortTable\",\n        value: function generateShortTable(len) {\n            var t = 2 * Math.PI / len,\n                cosT = Math.cos(t),\n                sinT = Math.sin(t);\n\n            var f = new Float32Array(len * 2);\n\n            f[2 * 0 + 0] = 1;\n            f[2 * 0 + 1] = 0;\n\n            var lastImag = 0;\n\n            for (var i = 1; i < len; i++) {\n                f[2 * i + 0] = f[2 * (i - 1) + 0] * cosT + lastImag * sinT;\n                lastImag = lastImag * cosT - f[2 * (i - 1) + 0] * sinT;\n                f[2 * i + 1] = -lastImag;\n            }\n\n            return f;\n        }\n    }, {\n        key: \"generateLongTable\",\n        value: function generateLongTable(len) {\n            var t = 2 * Math.PI / len,\n                cosT = Math.cos(t),\n                sinT = Math.sin(t);\n\n            var f = new Float32Array(len * 3);\n\n            f[3 * 0 + 0] = 1;\n            f[3 * 0 + 1] = 0;\n            f[3 * 0 + 2] = 0;\n\n            for (var i = 1; i < len; i++) {\n                f[3 * i + 0] = f[3 * (i - 1) + 0] * cosT + f[3 * (i - 1) + 2] * sinT;\n                f[3 * i + 2] = f[3 * (i - 1) + 2] * cosT - f[3 * (i - 1) + 0] * sinT;\n                f[3 * i + 1] = -f[3 * i + 2];\n            }\n\n            return f;\n        }\n    }, {\n        key: \"FFT_TABLE_512\",\n        get: function get() {\n            return FFT_TABLE_512;\n        }\n    }, {\n        key: \"FFT_TABLE_480\",\n        get: function get() {\n            return FFT_TABLE_480;\n        }\n    }, {\n        key: \"FFT_TABLE_60\",\n        get: function get() {\n            return FFT_TABLE_60;\n        }\n    }, {\n        key: \"FFT_TABLE_64\",\n        get: function get() {\n            return FFT_TABLE_64;\n        }\n    }]);\n    return FFTTables;\n}();\n\nvar FFT_TABLE_64 = FFTTables.generateShortTable(64);\n\nvar FFT_TABLE_60 = FFTTables.generateShortTable(60);\n\nvar FFT_TABLE_480 = FFTTables.generateLongTable(480);\n\nvar FFT_TABLE_512 = FFTTables.generateLongTable(512);\n\nmodule.exports = FFTTables;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// browser.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 69);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 565e19fd46db9787f590","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = 1\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 2\n// module chunks = 0","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = 3\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-prototype-of.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/inherits.js\n// module id = 6\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 7\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = 8\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = 9\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = 10\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = 11\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-browserify/index.js\n// module id = 12\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = 13\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = 14\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = 15\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = 16\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = 17\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 18\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = 19\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 20\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-util-is/lib/util.js\n// module id = 21\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = 22\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 23\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_duplex.js\n// module id = 24\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/browser.js\n// module id = 25\n// module chunks = 0","module.exports = {\n    elements: {\n        SCE: 0,\n        CPE: 1,\n        CCE: 2,\n        LFE: 3,\n        DSE: 4,\n        PCE: 5,\n        FIL: 6,\n        END: 7,\n    },\n\n    MAX_ELEMENTS: 16,\n    MAX_SECTIONS: 120,\n    MAX_MS_MASK: 128,\n\n    WINDOW_LEN_LONG: 1024,\n    WINDOW_LEN_SHORT: 128,\n    WINDOW_SMALL_LEN_LONG: 960,\n    WINDOW_SMALL_LEN_SHORT: 120\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/constants.js","const PCM = require('../pcm_format');\n\nmodule.exports = class AACFrame extends PCM {\n    constructor() {\n        super();\n\n        this.profile = null;\n\n        this.samplingIndex = null;\n\n        this.channelConfig = null;\n\n        this.hasCrc = null;\n\n        this.length = null;\n    }\n\n    get frameLength() {\n        // For AAC-LC its 1024 for long windows and 128 for short windows and its fixed\n        return 1024;\n    }\n\n    get dataLength() {\n        return this.length - (this.hasCrc ? 9 : 7);\n    }\n\n    // pcm getters\n\n    get channels() {\n        switch (this.channelConfig) {\n            case 2:\n                return this.channelConfig;\n            default:\n                throw 'Fixme: unsupported channelConfig';\n        }\n    }\n\n    get sampleRate() {\n        switch (this.samplingIndex) {\n            case  3: return 48000;\n            case  4: return 44100;\n            case  7: return 22050;\n            case 10: return 11025;\n            default:\n                throw 'Fixme: unsupported samplingIndex';\n        }\n    }\n\n    get bitsPerSample() {\n        return 16;\n    }\n\n    // decoder config getters\n\n    isErrorResilientProfile() {\n        return this.profile > 16;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/frame.js","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = 28\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 29\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = 30\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = 31\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = 32\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = 33\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = 34\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = 35\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = 36\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = 37\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = 38\n// module chunks = 0","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-ext.js\n// module id = 39\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-define.js\n// module id = 40\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-pie.js\n// module id = 41\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_writable.js\n// module id = 42\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_transform.js\n// module id = 43\n// module chunks = 0","/**\n * @property {Number} channels\n * @property {Number} sampleRate\n * @property {Number} bitsPerSample\n * @type {PCMFormat}\n */\nmodule.exports = class PCMFormat\n{\n    /**\n     * bytes per second\n     * @returns {Number}\n     */\n    get byteRate()\n    {\n        const byteRate = this.bitsPerSample * this.channels * this.sampleRate / 8;\n        console.assert(Number.isInteger(byteRate));\n        return byteRate;\n    }\n\n    /**\n     * bytes per single sample\n     * @returns {number}\n     */\n    get blockAlign()\n    {\n        const blockAlign = this.bitsPerSample * this.channels / 8;\n        console.assert(Number.isInteger(blockAlign));\n        return blockAlign;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/pcm_format.js","const BYTE = 8;\nconst READ = 'readUInt8';\n\nmodule.exports = class BitStream\n{\n    constructor(buffer)\n    {\n        this.buffer         = buffer;\n        this.bitPosition    = 0;\n        this.maxPosition    = buffer.length * BYTE;\n    }\n\n    available()\n    {\n        return this.maxPosition - this.bitPosition;\n    }\n\n    skipBit() {\n        return this.skipBits(1);\n    }\n\n    skipBits(bits) {\n        if (this.available() < bits)\n            throw 'Unable to skipBitspast the end of stream';\n        this.bitPosition += bits;\n        return this;\n    }\n\n    readBit()\n    {\n        return this.readBits(1);\n    }\n\n    readBits(bits)\n    {\n        let res = 0;\n\n        if (this.available() < bits)\n            throw 'Unable to readBits past the end of stream';\n\n        while(bits) {\n            let pow = BYTE - 1 - this.bitPosition  % BYTE;\n            let int = this.buffer[READ]((this.bitPosition / BYTE) ^ 0);\n\n            res = (res << 1) | ((int & (1 << pow)) >> pow);\n\n            this.bitPosition++;\n            bits--;\n        }\n\n        return res;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/bitstream.js","module.exports = class Element\n{\n    constructor() {\n        this.instanceTag = null;\n        this.sbr = null;\n    }\n\n    readInstanceTag(bitStream) {\n        this.instanceTag = bitStream.readBits(4);\n    }\n\n    getInstanceTag() {\n        return this.instanceTag;\n    }\n\n    decodeSBR(bitStream, sf, count, stereo, crc, downSampled, smallFrames) {\n        throw 'not implemented';\n    }\n\n    isSBRPresent() {\n        return this.sbr != null;\n    }\n\n    getSBR() {\n        return this.sbr;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/element.js","module.exports = class HCB\n{\n    static get ZERO_HCB() { return 0; }\n    static get ESCAPE_HCB() { return 11; }\n    static get NOISE_HCB() { return 13; }\n    static get INTENSITY_HCB2() { return 14; }\n    static get INTENSITY_HCB() { return 15; }\n    //\n    static get FIRST_PAIR_HCB() { return 5; }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/huffman/hcb.js","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 48\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = 49\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = 50\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = 51\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = 52\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = 53\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/typeof.js\n// module id = 54\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = 55\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 56\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = 57\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = 58\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gops.js\n// module id = 59\n// module chunks = 0","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = 60\n// module chunks = 0","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopd.js\n// module id = 61\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 62\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_readable.js\n// module id = 63\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string_decoder/index.js\n// module id = 64\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_passthrough.js\n// module id = 65\n// module chunks = 0","const Element = require('./element');\nconst ICStream  = require('./icstream');\nconst AACFrame = require('../frame');\nconst MSMask = require('../tools/msmask');\nconst Constants = require('../constants');\n\nmodule.exports = class CPE extends Element\n{\n    constructor(frame) {\n        super();\n\n        console.assert(frame instanceof AACFrame);\n        this.frame = frame;\n\n        this.msMask = null;\n\n        // private boolean[] msUsed;\n        this.msUsed = new Uint8Array(Constants.MAX_MS_MASK);\n\n        this.commonWindow = null;\n\n        this.icsL = new ICStream(frame);\n        this.icsR = new ICStream(frame);\n    }\n\n    decode(bitStream) {\n        this.readInstanceTag(bitStream);\n\n        this.commonWindow = bitStream.readBits(1);\n\n        const info = this.icsL.getInfo();\n\n        if(this.commonWindow) {\n            info.decode(bitStream, this.commonWindow);\n\n            this.icsR.getInfo().setData(info);\n\n            this.msMask = MSMask.forInt(bitStream.readBits(2));\n\n            if(MSMask.TYPE_USED === this.msMask) {\n                const maxSFB            = info.getMaxSFB();\n                const windowGroupCount  = info.getWindowGroupCount();\n\n                for (let idx = 0; idx < windowGroupCount*maxSFB; idx++) {\n                    this.msUsed[idx] = bitStream.readBit();\n                }\n            }\n            else if (MSMask.TYPE_ALL_1 === this.msMask) {\n                this.msUsed.fill(1);\n            }\n            else if (MSMask.TYPE_ALL_0 === this.msMask) {\n                this.msUsed.fill(0);\n            }\n            else {\n                throw \"reserved MS mask type used\";\n            }\n        } else {\n            this.msMask = MSMask.TYPE_ALL_0;\n            this.msUsed.fill(0);\n        }\n\n        if (this.frame.isErrorResilientProfile()) {\n            throw 'not implemented';\n        }\n\n        this.icsL.decode(bitStream, this.commonWindow);\n\n        this.icsR.decode(bitStream, this.commonWindow);\n\n        return this;\n    }\n\n    isCommonWindow()\n    {\n        return !!this.commonWindow;\n    }\n\n    getLeftChannel() {\n        return this.icsL;\n    }\n\n    getRightChannel() {\n        return this.icsR;\n    }\n\n    isMSMaskPresent() {\n        return MSMask.TYPE_ALL_0 !== this.msMask;\n    }\n\n    isMSUsed(off) {\n        return !!this.msUsed[off];\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/cpe.js","const ICSInfo = require('./icsinfo');\nconst AACFrame = require('../frame');\nconst Constants = require('../constants');\nconst HCB = require('../huffman/hcb');\nconst Huffman = require('../huffman');\nconst SFT = require('../tools/sft');\nconst TNS = require('../tools/tns');\nconst IQT = require('../tools/iqt');\n\nconst SF_DELTA  = 60;\nconst SF_OFFSET = 200;\n\nmodule.exports = class ICStream\n{\n    constructor(frame) {\n        console.assert(frame instanceof AACFrame);\n        this.frame = frame;\n\n        this.info = new ICSInfo(frame);\n\n        // private final int[] sfbCB;\n        this.sfbCB = new Int32Array(Constants.MAX_SECTIONS);\n\n        // private final int[] sectEnd;\n        this.sectEnd = new Int32Array(Constants.MAX_SECTIONS);\n\n        // private final float[] data;\n        this.data = new Float32Array(frame.frameLength);\n\n        // private final float[] scaleFactors;\n        this.scaleFactors = new Float32Array(Constants.MAX_SECTIONS);\n\n        this.globalGain = null;\n        this.pulseDataPresent = null;\n        this.tnsDataPresent = null;\n        this.gainControlPresent = null;\n\n        this.randomState = 0x1F2E3D4C;\n    }\n\n    decode(bitStream, commonWindow) {\n        const er = this.frame.isErrorResilientProfile();\n        if (er) {\n            throw 'errorResilientProfile not implemented';\n        }\n\n        this.globalGain = bitStream.readBits(8);\n\n        if (!commonWindow) {\n            this.info.decode(bitStream, commonWindow);\n        }\n\n        this.decodeSectionData(bitStream /* fixme: conf.isSectionDataResilienceUsed() */);\n\n        this.decodeScaleFactors(bitStream);\n\n        this.pulseDataPresent = !!bitStream.readBit();\n\n        if (this.pulseDataPresent) {\n            if (this.info.isEightShortFrame())\n                throw \"pulse data not allowed for short frames\";\n            // fixme: decodePulseData(in);\n            throw 'decodePulseData(in)';\n        }\n\n        this.tnsDataPresent = !!bitStream.readBit();\n        if (this.tnsDataPresent && !er) {\n            if(!this.tns)\n                this.tns = new TNS();\n            this.tns.decode(bitStream, this.info);\n        }\n\n        this.gainControlPresent = !!bitStream.readBit();\n        if(this.gainControlPresent) {\n            throw 'gainControl.decode(in, info.getWindowSequence())';\n        }\n\n        // fixme: conf.isSpectralDataResilienceUsed()\n\n        this.decodeSpectralData(bitStream);\n    }\n\n    decodeSectionData(bitStream, sectionDataResilienceUsed) {\n\n        this.sfbCB.fill(0);\n        this.sectEnd.fill(0);\n\n        const bits = this.info.isEightShortFrame() ? 3 : 5;\n        const escVal = (1 << bits) - 1;\n\n        const windowGroupCount = this.info.getWindowGroupCount();\n        const maxSFB = this.info.getMaxSFB();\n\n        let end, cb, incr, idx = 0;\n\n        for (let g = 0; g < windowGroupCount; g++) {\n            let k = 0;\n\n            while(k < maxSFB) {\n                end = k, cb = bitStream.readBits(4);\n\n                if (12 === cb)\n                    throw \"invalid huffman codebook: 12\";\n\n                while((incr = bitStream.readBits(bits)) === escVal) {\n                    end += incr;\n                }\n\n                end += incr;\n\n                if (end > maxSFB)\n                    throw \"too many bands: \" + end + \", allowed: \" + maxSFB;\n\n                for(; k < end; k++) {\n                    this.sfbCB[idx]         = cb;\n                    this.sectEnd[idx++]     = end;\n                }\n            }\n        }\n    }\n\n    decodeScaleFactors(bitStream) {\n        const windowGroups = this.info.getWindowGroupCount();\n        const maxSFB = this.info.getMaxSFB();\n\n        //0: spectrum, 1: noise, 2: intensity\n        const offset = [this.globalGain, this.globalGain - 90, 0];\n\n        let tmp, noiseFlag = true;\n\n        let sfb, idx = 0;\n\n        for (let g = 0; g < windowGroups; g++) {\n            for(sfb = 0; sfb < maxSFB; ) {\n                let end = this.sectEnd[idx];\n\n                switch(this.sfbCB[idx]) {\n                    case HCB.ZERO_HCB:\n                        for(; sfb < end; sfb++, idx++) {\n                            this.scaleFactors[idx] = 0;\n                        }\n                        break;\n                    case HCB.INTENSITY_HCB:\n                    case HCB.INTENSITY_HCB2:\n                        for(; sfb < end; sfb++, idx++) {\n                            offset[2] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                            tmp = Math.min(Math.max(offset[2], -155), 100);\n                            this.scaleFactors[idx] = SFT.SCALEFACTOR_TABLE[-tmp + SF_OFFSET];\n                        }\n                        break;\n                    case HCB.NOISE_HCB:\n                        throw 'not implemented';\n                        // for(; sfb < end; sfb++, idx++) {\n                        //     if(noiseFlag) {\n                        //         offset[1] += bitStream.readBits(9) - 256;\n                        //         noiseFlag = false;\n                        //     }\n                        //     else offset[1] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                        //     tmp = Math.min(Math.max(offset[1], -100), 155);\n                         //    this.scaleFactors[idx] = -SCALEFACTOR_TABLE[tmp+SF_OFFSET];\n                        // }\n                        // break;\n                    default:\n                        for (; sfb < end; sfb++, idx++) {\n                            offset[0] += Huffman.decodeScaleFactor(bitStream) - SF_DELTA;\n                            if (offset[0] > 255)\n                                throw \"scalefactor out of range: \" + offset[0];\n                            this.scaleFactors[idx] = SFT.SCALEFACTOR_TABLE[offset[0] - 100 + SF_OFFSET];\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    decodeSpectralData(bitStream) {\n\n        this.data.fill(0);\n\n        const maxSFB = this.info.getMaxSFB();\n\n        const windowGroups = this.info.getWindowGroupCount();\n\n        const offsets = this.info.getSWBOffsets();\n\n        // final int[] buf = new int[4];\n        const buf = new Int32Array(4);\n\n        let sfb, j, k, w, hcb, off, width, num;\n\n        let groupOff = 0, idx = 0;\n\n        for (let g = 0; g < windowGroups; g++) {\n            let groupLen = this.info.getWindowGroupLength(g);\n\n            for(sfb = 0; sfb < maxSFB; sfb++, idx++) {\n                hcb     = this.sfbCB[idx];\n                off     = groupOff + offsets[sfb];\n                width   = offsets[sfb + 1] - offsets[sfb];\n\n                if(hcb === HCB.ZERO_HCB || hcb === HCB.INTENSITY_HCB || hcb === HCB.INTENSITY_HCB2) {\n                    for (w = 0; w < groupLen; w++, off += 128) {\n                        this.data.fill(off, off + width, 0);\n                    }\n                }\n                else if(hcb === HCB.NOISE_HCB) {\n                    throw 'not implemented';\n                    //apply PNS: fill with random values\n                    for (w = 0; w < groupLen; w++, off += 128) {\n                        let energy = 0.0;\n\n                        for(k = 0; k < width; k++) {\n                            // fixme: uint math overflow\n                            this.randomState *= 1664525+1013904223;\n                            this.data[off + k] = this.randomState;\n                            energy += this.data[off + k] * data[off + k];\n                        }\n\n                        const scale = this.scaleFactors[idx] / Math.sqrt(energy);\n\n                        for(k = 0; k < width; k++) {\n                            this.data[off + k] *= scale;\n                        }\n                    }\n                }\n                else {\n                    for (w = 0; w < groupLen; w++, off += 128) {\n                        num = (hcb >= HCB.FIRST_PAIR_HCB) ? 2 : 4;\n                        for(k = 0; k < width; k += num) {\n                            Huffman.decodeSpectralData(bitStream, hcb, buf, 0);\n\n                            //inverse quantization & scaling\n                            for(j = 0; j < num; j++) {\n                                this.data[off + k + j]  = (buf[j] > 0) ? IQT.IQ_TABLE[ buf[j] ] : -IQT.IQ_TABLE[ -buf[j] ];\n                                this.data[off + k + j] *= this.scaleFactors[idx];\n                            }\n                        }\n                    }\n                }\n            }\n            groupOff += groupLen << 7;\n        }\n    }\n\n    getInfo() {\n        return this.info;\n    }\n\n    getInvQuantData() {\n        return this.data;\n    }\n\n    getSfbCB() {\n        return this.sfbCB;\n    }\n\n    getSectEnd() {\n        return this.sectEnd;\n    }\n\n    getScaleFactors() {\n        return this.scaleFactors;\n    }\n\n    getTNS() {\n        return this.tns;\n    }\n\n    isTNSDataPresent() {\n        return this.tnsDataPresent;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/icstream.js","const Element = require('./element');\nconst ICStream  = require('./icstream');\n\nmodule.exports = class SCE_LFE extends Element\n{\n    constructor(frame) {\n        super();\n\n        this.ics = new ICStream(this.frame = frame);\n    }\n\n    decode(bitStream) {\n        this.readInstanceTag(bitStream);\n        this.ics.decode(bitStream, false);\n    }\n\n    getICStream() {\n        return this.ics;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/sce_lfe.js","module.exports = class Decoders {\n    static get WAV() {\n        return require('./src/wav');\n    }\n\n    static get MP3() {\n        return require('./src/mp3');\n    }\n\n    static get AAC() {\n        return require('./src/aac');\n    }\n\n    static factory(type) {\n        type = type.toLowerCase();\n        if ('.' === type[0]) // extension?\n            type = type.substring(1);\n\n        switch (type) {\n            case 'mp3': return new Decoders.MP3;\n            case 'aac': return new Decoders.AAC;\n            case 'wav': return new Decoders.WAV;\n        }\n\n        return null;\n    }\n\n    static Buffer(...args) {\n        return new Buffer(...args);\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./index.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 70\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 71\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 72\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 73\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 74\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = 75\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = 76\n// module chunks = 0","const stream = require('stream');\nconst debug  = require('debug')('wav');\n\n// todo: may contain (id3) metadata, should limit the size of data section being piped\n\nconst Header = require('./header');\n\nclass Demuxer extends stream.Transform {\n    constructor() {\n        super();\n\n        this.bytes = new Buffer(0);\n        this.pendingBytes = 0;\n        this.pendingCb = null;\n        this.header = new Header();\n\n        debug('initialized');\n\n        this._bytes(4, this._processChunkId);\n    }\n\n    _transform(data, enc, callback) {\n        this.bytes = Buffer.concat([this.bytes, data]);\n\n        debug('_transform: received %d bytes', data.length);\n\n        while(this.pendingBytes) {\n            if (this.bytes.length < this.pendingBytes) {\n                return callback();\n            }\n\n            const bytes = new Buffer(this.pendingBytes);\n            const remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n            this.bytes.copy(bytes, 0, 0, bytes.length);\n            this.bytes.copy(remnd, 0, this.pendingBytes);\n            this.bytes = remnd;\n\n            const pendingCb = this.pendingCb;\n            const pendingBt = this.pendingBytes;\n            this.pendingCb = null;\n            this.pendingBytes = null;\n\n            pendingCb.call(this, pendingBt, bytes);\n        }\n\n        debug('_transform: piping %d bytes of pcm data', this.bytes.length);\n\n        // push bytes aligned to header's blockAlign\n\n        let size = this.bytes.length - (this.bytes.length % this.header.blockAlign);\n        const bytes = new Buffer(size);\n        const remnd = new Buffer(this.bytes.length - size);\n\n        this.bytes.copy(bytes, 0, 0, bytes.length);\n        this.bytes.copy(remnd, 0, size);\n\n        this.push(bytes); callback();\n        this.bytes = remnd;\n    }\n\n    _bytes(bytes, callback) {\n        if (bytes <= 0 || !callback) {\n            throw \"Invalid arguments\";\n        }\n\n        if (this.pendingCb) {\n            throw \"There is already pending callback\";\n        }\n\n        this.pendingBytes = bytes;\n        this.pendingCb    = callback;\n    }\n\n    _processChunkId(size, data) {\n        const chunkId = this.header.chunkId = data.toString('ascii');\n\n        if ('RIFF' !== chunkId)\n            throw 'Expected chunkId to be \"RIFF\"';\n\n        this._bytes(4, this._processChunkSize);\n    }\n\n    _processChunkSize(size, data) {\n        this.header.chunkSize = data['readUInt32' + this.header.order](0);\n        this._bytes(4, this._processFormat);\n    }\n\n    _processFormat(size, data) {\n        const format = this.header.format = data.toString('ascii');\n\n        if ('WAVE' !== format)\n            throw 'Expected format to be \"WAVE\"';\n\n        this._bytes(8, this._processSubchunkHeader);\n    }\n\n    _processSubchunkHeader(size, data) {\n        const subchunkId = data.slice(0, 4).toString('ascii');\n        const subchunkSz = data.slice(4, 8)['readUInt32' + this.header.order](0);\n\n        switch (subchunkId) {\n            case \"fmt \":\n                this.header.subchunk1Id     = subchunkId;\n                this.header.subchunk1Size   = subchunkSz;\n                this._bytes(subchunkSz, this._processFmtChunk);\n                break;\n            case \"data\":\n                this.header.subchunk2Id     = subchunkId;\n                this.header.subchunk2Size   = subchunkSz;\n                this.emit('header', this.header);\n                break;\n            default:\n                throw \"Unsupported subchunk - \" + subchunkId;\n        }\n    }\n\n    _processFmtChunk(size, data) {\n        const audioFormat = this.header.audioFormat = data['readUInt16' + this.header.order](0);\n        data = data.slice(2);\n\n        if (1 !== audioFormat)\n            throw 'Expected audioFormat to be 1 (PCM)';\n\n        this.header.channels = data['readUInt16' + this.header.order](0);\n        data = data.slice(2);\n\n        this.header.sampleRate = data['readUInt32' + this.header.order](0);\n        data = data.slice(4);\n\n        const byteRate = data['readUInt32' + this.header.order](0);\n        data = data.slice(4);\n\n        const blockAlign = data['readUInt16' + this.header.order](0);\n        data = data.slice(2);\n\n        this.header.bitsPerSample = data['readUInt16' + this.header.order](0);\n\n        console.assert(this.header.byteRate === byteRate);\n        console.assert(this.header.blockAlign === blockAlign);\n\n        this._bytes(8, this._processSubchunkHeader);\n    }\n}\n\nmodule.exports = Demuxer;\n\n\n// WEBPACK FOOTER //\n// ./src/wav/index.js","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-prototype-of.js\n// module id = 78\n// module chunks = 0","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js\n// module id = 79\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = 80\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/symbol/iterator.js\n// module id = 81\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/symbol/iterator.js\n// module id = 82\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = 83\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = 84\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 85\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = 86\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = 87\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = 88\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = 89\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = 90\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = 91\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = 92\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = 93\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 94\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = 95\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/symbol.js\n// module id = 96\n// module chunks = 0","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/symbol/index.js\n// module id = 97\n// module chunks = 0","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.symbol.js\n// module id = 98\n// module chunks = 0","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_meta.js\n// module id = 99\n// module chunks = 0","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-keys.js\n// module id = 100\n// module chunks = 0","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array.js\n// module id = 101\n// module chunks = 0","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = 102\n// module chunks = 0","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 104\n// module chunks = 0","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.observable.js\n// module id = 105\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/set-prototype-of.js\n// module id = 106\n// module chunks = 0","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/set-prototype-of.js\n// module id = 107\n// module chunks = 0","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.set-prototype-of.js\n// module id = 108\n// module chunks = 0","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-proto.js\n// module id = 109\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/create.js\n// module id = 110\n// module chunks = 0","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/create.js\n// module id = 111\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.create.js\n// module id = 112\n// module chunks = 0","var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/readable.js\n// module id = 113\n// module chunks = 0","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/writable.js\n// module id = 114\n// module chunks = 0","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/duplex.js\n// module id = 115\n// module chunks = 0","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/transform.js\n// module id = 116\n// module chunks = 0","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/passthrough.js\n// module id = 117\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debug/src/debug.js\n// module id = 118\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ms/index.js\n// module id = 119\n// module chunks = 0","const PCM = require('../pcm_format');\n\nmodule.exports = class Header extends PCM {\n    constructor() {\n        super();\n\n        // 4 bytes, RIFF\n        this.chunkId = null;\n\n        // 4 bytes, length of rest of file\n        this.chunkSize = null;\n\n        // 4 bytes, WAVE\n        this.format = null;\n\n        // 4 bytes, \"fmt \"\n        this.subchunk1Id = null;\n\n        // 4 bytes, length of rest of fmt section\n        this.subchunk1Size = null;\n\n        // 2 bytes, 1 = PCM\n        this.audioFormat = null;\n\n        // 4 bytes, \"data\"\n        this.subchunk2Id = null;\n\n        // 4 bytes, length of rest of data section\n        this.subchunk2Size = null;\n    }\n\n    get isLE() {\n        return this.chunkId === 'RIFF';\n    }\n\n    get isBE() {\n        return this.chunkId === 'RIFX';\n    }\n\n    get order() {\n        if (this.isLE) return 'LE';\n        if (this.isBE) return 'BE';\n        throw 'Neither BE or LE';\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/wav/header.js","module.exports = { \"default\": require(\"core-js/library/fn/number/is-integer\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/number/is-integer.js\n// module id = 121\n// module chunks = 0","require('../../modules/es6.number.is-integer');\nmodule.exports = require('../../modules/_core').Number.isInteger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/number/is-integer.js\n// module id = 122\n// module chunks = 0","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.number.is-integer.js\n// module id = 123\n// module chunks = 0","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-integer.js\n// module id = 124\n// module chunks = 0","const stream = require('stream');\nconst Util = require('./util');\nconst Decoder = require('./decoder');\n\nclass Demuxer extends stream.Transform {\n\n    constructor() {\n        super();\n\n        this.bytes = new Buffer(0);\n        this.pendingBytes = 0;\n        this.pendingCb = null;\n\n        this.frstFrame = null;\n        this.currFrame = null;\n\n        this.decoder   = new Decoder();\n\n        this.syncword  = 0xFFE00000;\n        this.rawId3v2  = null;\n\n        this._bytes(10, this._read_id3_header);\n    }\n\n    _transform(data, enc, callback) {\n        this.bytes = Buffer.concat([this.bytes, data]);\n\n        while(this.pendingBytes) {\n            if (this.bytes.length < this.pendingBytes) {\n                return callback();\n            }\n\n            const bytes = new Buffer(this.pendingBytes);\n            const remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n            this.bytes.copy(bytes, 0, 0, bytes.length);\n            this.bytes.copy(remnd, 0, this.pendingBytes);\n            this.bytes = remnd;\n\n            const pendingCb = this.pendingCb;\n            const pendingBt = this.pendingBytes;\n            this.pendingCb = null;\n            this.pendingBytes = null;\n\n            pendingCb.call(this, pendingBt, bytes);\n        }\n\n        throw 'decoding out of sync';\n    }\n\n    _bytes(bytes, callback) {\n        if (bytes <= 0 || !callback) {\n            throw \"Invalid arguments\";\n        }\n\n        if (this.pendingCb) {\n            throw \"There is already pending callback\";\n        }\n\n        this.pendingBytes = bytes;\n        this.pendingCb    = callback;\n    }\n\n    _read_id3_header(size, data) {\n        if ('ID3' === data.toString('ascii', 0, 3)) {\n            size = Util.getSizeFromID3v2Header(data);\n            if (size)\n                this._bytes(size, this._read_id3v2_data);\n            else\n                this._bytes(4, this._read_frame_header);\n        } else {\n            this.bytes = Buffer.concat([data, this.bytes]);\n            this._bytes(4, this._read_frame_header);\n        }\n    }\n\n    _read_id3v2_data(size, data) {\n        this.rawId3v2 = data;\n        this._bytes(4, this._read_frame_header)\n    }\n\n    _read_frame_header(size, data) {\n        let syncword = (data.readUInt32BE(0) & this.syncword);\n        if (syncword < 0)\n            syncword = 0xFFFFFFFF + syncword + 1;\n\n        if (syncword !== this.syncword)\n            throw 'lost sync';\n\n        const frame = Util.makeFrameHeader(data);\n\n        if (!this.frstFrame) {\n            this.syncword       = syncword;     // expect strict frame header now\n            this.frstFrame      = frame;\n            this.emit('header', frame);\n        }\n\n        this.currFrame = frame;\n\n        this._bytes(this.currFrame.frameSize, this._read_frame_data);\n    }\n\n    _read_frame_data(size, data) {\n        this.push(\n            this.decoder.decodeFrame(this.currFrame, data)\n        );\n\n        if (this.currFrame.bProtect) {\n            this._bytes(2, this._read_frame_crc);\n        } else {\n            this._bytes(4, this._read_frame_header)\n        }\n    }\n\n    _read_frame_crc(size, data) {\n        // todo: validate crc16\n        this._bytes(4, this._read_frame_header)\n    }\n}\n\nmodule.exports = Demuxer;\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/index.js","const Bitstream = require('../bitstream');\nconst FrameHeader = require('./frame');\n\nmodule.exports = class Util\n{\n    /**\n     * @param {Buffer} data\n     */\n    static getSizeFromID3v2Header(data) {\n        if (10 !== data.length)\n            throw 'Expected ID3v2 header buffer length to be 10';\n\n        const flags = data[5];\n        if (flags !== 0)\n            throw 'Expected no ID3 header flags set';\n\n        return (data[6] << 21) + (data[7] << 14) + (data[8] << 7) + (data[9]);\n    }\n\n    /**\n     *\n     * @param {Buffer} data\n     */\n    static makeFrameHeader(data)\n    {\n        const bitStream     = new Bitstream(data);\n        const frame         = new FrameHeader();\n\n        if (bitStream.readBits(11) !== 0x7FF)\n            throw 'invalid syncword';\n\n        frame.version       = bitStream.readBits(2);\n        frame.layer         = bitStream.readBits(2);\n        frame.bProtect      = 0 === bitStream.readBit();\n        frame.bitrate       = bitStream.readBits(4);\n        frame.freq          = bitStream.readBits(2);\n        frame.bPadding      = 1 === bitStream.readBit();\n        frame.bPrivate      = 1 === bitStream.readBit();\n        frame.mode          = bitStream.readBits(2);\n        frame.extension     = bitStream.readBits(2);\n        frame.bCopyright    = 1 === bitStream.readBit();\n        frame.bOriginal     = 1 === bitStream.readBit();\n        frame.emphasis      = bitStream.readBits(2);\n\n        return frame;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/util.js","const PCMFrame = require('../pcm_format');\n\nconst MPEG1             = 0b11;\nconst MPEG2             = 0b10;\nconst MPEG25            = 0b00;\nconst MPEG25_LSF        = 0b00;\n\nconst LAYER3            = 0b01;\n\nconst SINGLE_CHANNEL    = 0b11;\nconst STEREO            = 0b00;\nconst JOINT_STEREO      = 0b01;\nconst DUAL_MONO         = 0b10;\n\nmodule.exports = class MP3Frame extends PCMFrame\n{\n    constructor() {\n        super();\n\n        this.version       = null;\n        this.layer         = null;\n        this.bitrate       = null;\n        this.freq          = null;\n        this.mode          = null;\n\n        this.extension     = null;\n        this.emphasis      = null;\n\n        this.bProtect      = null;\n        this.bPadding      = null;\n        this.bPrivate      = null;\n        this.bCopyright    = null;\n        this.bOriginal     = null;\n    }\n\n    get MPEG1()             { return MPEG1;  }\n    get LAYER3()            { return LAYER3; }\n    get SINGLE_CHANNEL()    { return SINGLE_CHANNEL; }\n    get MPEG25_LSF()        { return MPEG25_LSF; }\n    get JOINT_STEREO()      { return JOINT_STEREO; }\n\n    get channels() {\n        switch(this.mode) {\n            case STEREO:\n            case JOINT_STEREO:\n            case DUAL_MONO:\n                return 2;\n            case SINGLE_CHANNEL:\n                return 1;\n            default:\n                throw 'invalid channels mode';\n        }\n    }\n\n    get sampleRate() {\n        switch (this.version) {\n            case MPEG1: // 1\n                switch (this.freq) {\n                    case 0b00: return 44100;\n                    case 0b01: return 48000;\n                    case 0b10: return 32000;\n                    default:\n                        throw 'unsupported sample rate';\n                }\n            default:\n                throw 'unsupported mpeg version';\n        }\n    }\n\n    get bitsPerSample() {\n        return 16;\n    }\n\n    get bitRate() {\n        switch (this.version) {\n            case MPEG1:\n                switch (this.layer) {\n                    case LAYER3:\n                        switch (this.bitrate) {\n                            case 0b0111: return 96;\n                            case 0b1000: return 112;\n                            case 0b1001: return 128;\n                            default:\n                                throw 'unsupported bitrate';\n                        }\n                    default:\n                        throw 'unsupported layer';\n                }\n            default:\n                throw 'unsupported mpeg version';\n        }\n    }\n\n    get frameSize() {\n        const bitrates      = [0, 32000, 40000, 48000, 56000, 64000, 80000, 96000, 112000, 128000, 160000, 192000, 224000, 256000, 320000, 0];\n        const frequencies   = [44100, 48000, 32000, 1];\n\n        let framesize = (144 * bitrates[this.bitrate] / frequencies[this.freq]) ^0;\n\n        if (this.bPadding) framesize++;\n\n        framesize -= 4;\n\n        return framesize;\n    }\n\n    slots() {\n        let nSlots = this.frameSize - ((this.mode === SINGLE_CHANNEL) ? 17 : 32) // side info size\n            -  ((!this.bProtect) ? 0 : 2); // crc size\n\n        return nSlots;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/frame.js","const Layer3 = require('./layer3');\nconst FltOut = require('./fltout');\n\nmodule.exports = class Decoder\n{\n    constructor() {\n        this.bInitialized   = false;\n        this.layer3         = null;\n    }\n\n    decodeFrame(header, data) {\n        if (!this.bInitialized) {\n            this.initialize(header);\n        }\n\n        this.output.clear();\n\n        this.retrieveDecoder(header)\n            .decodeFrame(header, data);\n\n        return this.output.asBuffer();\n    }\n\n    initialize(header) {\n        const scalefactor = 32700.0;\n        const channels  = header.channels;\n\n        this.output     = new FltOut.SampleBuffer(header.sampleRate, channels);\n        this.filter1    = new FltOut.SynthesisFilter(0, scalefactor);\n        this.filter2    = new FltOut.SynthesisFilter(1, scalefactor);\n\n        this.bInitialized = true;\n    }\n\n    retrieveDecoder(header) {\n        let decoder = null;\n\n        switch (header.layer) {\n            case header.LAYER3:\n                if (null === this.layer3) {\n                    this.layer3 = new Layer3(header, this.filter1, this.filter2, this.output);\n                }\n\n                decoder = this.layer3;\n                break;\n        }\n\n        if (null === decoder)\n            throw 'unsupported layer';\n\n        return decoder;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/decoder.js","const huffcodetab = require('./huffcodetab');\nconst BitReserve = require('./bitreserve');\nconst BitStream = require('../bitstream');\nconst debug = require('debug')('mp3:layer3');\n\nmodule.exports = class Layer3 {\n\n    constructor(header0, filtera, filterb, buffer0) {\n\n        this.CheckSumHuff = 0;\n        this.part2_start = null;\n\n        this.x = [0];\n        this.y = [0];\n        this.v = [0];\n        this.w = [0];\n\n        // int[] is_pos = new int[576];\n        this.is_pos = (new Int32Array(576)).fill(0);\n        // float[] is_ratio = new float[576];\n        this.is_ratio = (new Float32Array(576)).fill(0);\n\n        // private float[] samples1 = new float[32];\n        this.samples1 = (new Float32Array(32)).fill(0);\n        // private float[] samples2 = new float[32];\n        this.samples2 = (new Float32Array(32)).fill(0);\n\n        // float[] tsOutCopy = new float[18];\n        this.tsOutCopy = (new Float32Array(18)).fill(0);\n        // float[] rawout = new float[36];\n        this.rawout = (new Float32Array(36)).fill(0.0);\n\n        huffcodetab.inithuff();\n\n        // private int[] is_1d;\n        this.is_1d = new Int32Array(SBLIMIT * SSLIMIT + 4).fill(0);\n\n        // private float[][][] ro;\n        this.ro = (new Array(2)).fill().map(() => {\n            return (new Array(SBLIMIT)).fill().map(() => {\n                return (new Float32Array(SSLIMIT)).fill(0)\n            })\n        });\n\n        // private float[][][] lr;\n        this.lr = (new Array(2)).fill().map(() => {\n            return (new Array(SBLIMIT)).fill().map(() => {\n                return (new Float32Array(SSLIMIT)).fill(0)\n            })\n        });\n        // private float[] out_1d;\n        this.out_1d = (new Float32Array(SBLIMIT * SSLIMIT)).fill(0);\n        // private float[][] prevblck;\n        this.prevblck = (new Array(2)).fill().map(() => {\n            return (new Float32Array(SBLIMIT * SSLIMIT)).fill(0)\n        });\n        /*this.k = (new Array(2)).fill().map(() => {\n            return (new Array(SBLIMIT * SSLIMIT)).fill(0)\n        });*/\n        // private int[] nonzero;\n        this.nonzero = (new Int32Array(2)).fill(576);\n\n        this.scalefac = [new temporaire2(), new temporaire2()];\n\n        this.sfBandIndex = new Array(9);\n        // SZD: MPEG2.5 +3 indices\n        const l0 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        const s0 = [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192];\n        const l1 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 330, 394, 464, 540, 576];\n        const s1 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192];\n        const l2 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        const s2 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n\n        const l3 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576];\n        const s3 = [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192];\n        const l4 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576];\n        const s4 = [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192];\n        const l5 = [0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576];\n        const s5 = [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192];\n        // SZD: MPEG2.5\n        const l6 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        const s6 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n        const l7 = [0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576];\n        const s7 = [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192];\n        const l8 = [0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570, 572, 574, 576];\n        const s8 = [0, 8, 16, 24, 36, 52, 72, 96, 124, 160, 162, 164, 166, 192];\n\n        this.sfBandIndex[0] = new SBI(l0, s0);\n        this.sfBandIndex[1] = new SBI(l1, s1);\n        this.sfBandIndex[2] = new SBI(l2, s2);\n\n        this.sfBandIndex[3] = new SBI(l3, s3);\n        this.sfBandIndex[4] = new SBI(l4, s4);\n        this.sfBandIndex[5] = new SBI(l5, s5);\n        //SZD: MPEG2.5\n        this.sfBandIndex[6] = new SBI(l6, s6);\n        this.sfBandIndex[7] = new SBI(l7, s7);\n        this.sfBandIndex[8] = new SBI(l8, s8);\n        // END OF L3TABLE INIT\n\n        // private static /*final*/ int reorder_table[][]\n        if (null === reorder_table) {\n            reorder_table = new Array(9);\n            for (let i = 0; i < 9; i++)\n                reorder_table[i] = reorder(this.sfBandIndex[i].s);\n        }\n\n        this.filter1 = filtera;\n        this.filter2 = filterb;\n        this.buffer = buffer0;\n\n        this.frame_start = 0;\n        this.channels = (header0.mode === header0.SINGLE_CHANNEL) ? 1 : 2;\n        this.max_gr = (header0.version === header0.MPEG1) ? 2 : 1;\n\n        this.sfreq = header0.freq +\n            ((header0.version === header0.MPEG1) ? 3 :\n                (header0.version === header0.MPEG25_LSF) ? 6 : 0);\n\n        this.br = new BitReserve();\n        this.si = new III_side_info_t();\n    }\n\n    decodeFrame(header, data) {\n        let nSlots = header.slots();\n        let flush_main;\n        let gr, ch, ss, sb, sb18;\n        let main_data_end;\n        let bytes_to_discard;\n        let i;\n\n        const bitStream = new BitStream(data);\n\n        this.get_side_info(header, bitStream);\n\n        for (i = 0; i < nSlots; i++)\n            this.br.hputbuf(bitStream.readBits(8));\n\n        main_data_end = this.br.hsstell() >>> 3; // of previous frame // fixme\n\n        if ((flush_main = (this.br.hsstell() & 7)) !== 0) {\n            this.br.hgetbits(8 - flush_main);\n            main_data_end++;\n        }\n\n        bytes_to_discard = this.frame_start - main_data_end\n            - this.si.main_data_begin;\n\n        this.frame_start += nSlots;\n\n        if (bytes_to_discard < 0)\n            return;\n\n        if (main_data_end > 4096) {\n            this.frame_start -= 4096;\n            this.br.rewindNbytes(4096);\n        }\n\n        for (; bytes_to_discard > 0; bytes_to_discard--)\n            this.br.hgetbits(8);\n\n        for (gr = 0; gr < this.max_gr; gr++) {\n            for (ch = 0; ch < this.channels; ch++) {\n                this.part2_start = this.br.hsstell();\n\n                if (header.version === header.MPEG1)\n                    this.get_scale_factors(ch, gr);\n                else {\n                    throw 'not implemented';\n                }\n\n                this.huffman_decode(ch, gr);\n\n                this.dequantize_sample(this.ro[ch], ch, gr);\n            }\n\n            this.stereo(header, gr);\n\n            // shortcuts\n            const lr = this.lr;\n\n            for (ch = 0; ch < this.channels; ch++) {\n\n                this.reorder(lr[ch], ch, gr);\n                this.antialias(ch, gr);\n                this.hybrid(ch, gr);\n\n                for (sb18 = 18; sb18 < 576; sb18 += 36) // Frequency inversion\n                    for (ss = 1; ss < SSLIMIT; ss += 2)\n                        this.out_1d[sb18 + ss] = -this.out_1d[sb18 + ss];\n\n                if (ch === 0) {\n                    for (ss = 0; ss < SSLIMIT; ss++) { // Polyphase synthesis\n                        sb = 0;\n                        for (sb18 = 0; sb18 < 576; sb18 += 18) {\n                            this.samples1[sb] = this.out_1d[sb18 + ss];\n                            sb++;\n                        }\n                        this.filter1.input_samples(this.samples1);\n                        this.filter1.calculate_pcm_samples(this.buffer);\n                    }\n                } else {\n                    for (ss = 0; ss < SSLIMIT; ss++) { // Polyphase synthesis\n                        sb = 0;\n                        for (sb18 = 0; sb18 < 576; sb18 += 18) {\n                            this.samples2[sb] = this.out_1d[sb18 + ss];\n                            sb++;\n                        }\n                        this.filter2.input_samples(this.samples2);\n                        this.filter2.calculate_pcm_samples(this.buffer);\n                    }\n\n                }\n            } // channels\n        }\n    }\n\n    get_side_info(header, bitStream) {\n        let ch, gr;\n\n        if (header.version === header.MPEG1) {\n            this.si.main_data_begin = bitStream.readBits(9);\n\n            if (this.channels === 1)\n                this.si.private_bits = bitStream.readBits(5);\n            else\n                this.si.private_bits = bitStream.readBits(3);\n\n            for (ch = 0; ch < this.channels; ch++) {\n                this.si.ch[ch].scfsi[0] = bitStream.readBits(1);\n                this.si.ch[ch].scfsi[1] = bitStream.readBits(1);\n                this.si.ch[ch].scfsi[2] = bitStream.readBits(1);\n                this.si.ch[ch].scfsi[3] = bitStream.readBits(1);\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < this.channels; ch++) {\n                    this.si.ch[ch].gr[gr].part2_3_length = bitStream.readBits(12);\n                    this.si.ch[ch].gr[gr].big_values = bitStream.readBits(9);\n                    this.si.ch[ch].gr[gr].global_gain = bitStream.readBits(8);\n                    this.si.ch[ch].gr[gr].scalefac_compress = bitStream.readBits(4);\n                    this.si.ch[ch].gr[gr].window_switching_flag = bitStream.readBits(1);\n\n                    if ((this.si.ch[ch].gr[gr].window_switching_flag) !== 0) {\n                        this.si.ch[ch].gr[gr].block_type = bitStream.readBits(2);\n                        this.si.ch[ch].gr[gr].mixed_block_flag = bitStream.readBits(1);\n\n                        this.si.ch[ch].gr[gr].table_select[0] = bitStream.readBits(5);\n                        this.si.ch[ch].gr[gr].table_select[1] = bitStream.readBits(5);\n\n                        this.si.ch[ch].gr[gr].subblock_gain[0] = bitStream.readBits(3);\n                        this.si.ch[ch].gr[gr].subblock_gain[1] = bitStream.readBits(3);\n                        this.si.ch[ch].gr[gr].subblock_gain[2] = bitStream.readBits(3);\n\n                        // Set region_count parameters since they are implicit inp this case.\n\n                        if (this.si.ch[ch].gr[gr].block_type === 0) { // Side info bad: block_type == 0 inp split block\n                            return false;\n                        } else if (this.si.ch[ch].gr[gr].block_type === 2 && this.si.ch[ch].gr[gr].mixed_block_flag === 0) {\n                            this.si.ch[ch].gr[gr].region0_count = 8;\n                        } else {\n                            this.si.ch[ch].gr[gr].region0_count = 7;\n                        }\n\n                        this.si.ch[ch].gr[gr].region1_count = 20 -\n                            this.si.ch[ch].gr[gr].region0_count;\n                    } else {\n                        this.si.ch[ch].gr[gr].table_select[0] = bitStream.readBits(5);\n                        this.si.ch[ch].gr[gr].table_select[1] = bitStream.readBits(5);\n                        this.si.ch[ch].gr[gr].table_select[2] = bitStream.readBits(5);\n                        this.si.ch[ch].gr[gr].region0_count = bitStream.readBits(4);\n                        this.si.ch[ch].gr[gr].region1_count = bitStream.readBits(3);\n                        this.si.ch[ch].gr[gr].block_type = 0;\n                    }\n\n                    this.si.ch[ch].gr[gr].preflag = bitStream.readBits(1);\n                    this.si.ch[ch].gr[gr].scalefac_scale = bitStream.readBits(1);\n                    this.si.ch[ch].gr[gr].count1table_select = bitStream.readBits(1);\n                }\n            }\n        } else {\n            throw 'not implemented';\n        }\n\n        return true;\n    }\n\n    get_scale_factors(ch, gr) {\n        let gr_info = this.si.ch[ch].gr[gr];\n        let scale_comp = gr_info.scalefac_compress;\n        let length0 = slen[0][scale_comp];\n        let length1 = slen[1][scale_comp];\n\n        if ((gr_info.window_switching_flag !== 0) && (gr_info.block_type === 2)) {\n            if ((gr_info.mixed_block_flag) !== 0) { // MIXED\n\n                throw 'not implemented';\n\n            } else {  // SHORT\n                this.scalefac[ch].s[0][0] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][0] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][0] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][1] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][1] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][1] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][2] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][2] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][2] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][3] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][3] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][3] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][4] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][4] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][4] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][5] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[1][5] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[2][5] = this.br.hgetbits(length0);\n                this.scalefac[ch].s[0][6] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][6] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][6] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][7] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][7] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][7] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][8] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][8] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][8] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][9] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][9] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][9] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][10] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][10] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][10] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][11] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[1][11] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[2][11] = this.br.hgetbits(length1);\n                this.scalefac[ch].s[0][12] = 0;\n                this.scalefac[ch].s[1][12] = 0;\n                this.scalefac[ch].s[2][12] = 0;\n            } // SHORT\n        } else {   // LONG types 0,1,3\n            if ((this.si.ch[ch].scfsi[0] === 0) || (gr === 0)) {\n                this.scalefac[ch].l[0] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[1] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[2] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[3] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[4] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[5] = this.br.hgetbits(length0);\n            }\n            if ((this.si.ch[ch].scfsi[1] === 0) || (gr === 0)) {\n                this.scalefac[ch].l[6] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[7] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[8] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[9] = this.br.hgetbits(length0);\n                this.scalefac[ch].l[10] = this.br.hgetbits(length0);\n            }\n            if ((this.si.ch[ch].scfsi[2] === 0) || (gr === 0)) {\n                this.scalefac[ch].l[11] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[12] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[13] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[14] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[15] = this.br.hgetbits(length1);\n            }\n            if ((this.si.ch[ch].scfsi[3] === 0) || (gr === 0)) {\n                this.scalefac[ch].l[16] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[17] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[18] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[19] = this.br.hgetbits(length1);\n                this.scalefac[ch].l[20] = this.br.hgetbits(length1);\n            }\n\n            this.scalefac[ch].l[21] = 0;\n            this.scalefac[ch].l[22] = 0;\n        }\n    }\n\n    huffman_decode(ch, gr) {\n        const x = this.x, y = this.y, v = this.v, w = this.w, si = this.si;\n\n        x[0] = 0;\n        y[0] = 0;\n        v[0] = 0;\n        w[0] = 0;\n\n        let part2_3_end = this.part2_start + si.ch[ch].gr[gr].part2_3_length;\n        let num_bits, region1Start, region2Start;\n        let index, buf, buf1, h;\n\n        // Find region boundary for short block case\n\n        if (((si.ch[ch].gr[gr].window_switching_flag) !== 0) && (si.ch[ch].gr[gr].block_type === 2)) {\n            // Region2.\n            // MS: Extrahandling for 8KHZ\n            region1Start = (this.sfreq === 8) ? 72 : 36;    // sfb[9/3]*3=36 or inp case 8KHZ = 72\n            region2Start = 576;                             // No Region2 for short block case\n        } else {\n            // Find region boundary for long block case\n            buf = si.ch[ch].gr[gr].region0_count + 1;\n            buf1 = buf + si.ch[ch].gr[gr].region1_count + 1;\n\n            if (buf1 > this.sfBandIndex[this.sfreq].l.length - 1)\n                buf1 = this.sfBandIndex[this.sfreq].l.length - 1;\n\n            region1Start = this.sfBandIndex[this.sfreq].l[buf];\n            region2Start = this.sfBandIndex[this.sfreq].l[buf1];\n        }\n\n        index = 0;\n\n        // Read bigvalues area\n        for (let i = 0; i < (si.ch[ch].gr[gr].big_values << 1); i += 2) {\n            if (i < region1Start) h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[0]];\n            else if (i < region2Start) h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[1]];\n            else h = huffcodetab.ht[si.ch[ch].gr[gr].table_select[2]];\n\n            huffcodetab.huffman_decoder(h, x, y, v, w, this.br);\n\n            this.is_1d[index++] = x[0];\n            this.is_1d[index++] = y[0];\n\n            this.CheckSumHuff = this.CheckSumHuff + x[0] + y[0];\n        }\n\n        // Read count1 area\n        h = huffcodetab.ht[si.ch[ch].gr[gr].count1table_select + 32];\n        num_bits = this.br.hsstell();\n\n        while ((num_bits < part2_3_end) && (index < 576)) {\n            huffcodetab.huffman_decoder(h, x, y, v, w, this.br);\n\n            this.is_1d[index++] = v[0];\n            this.is_1d[index++] = w[0];\n            this.is_1d[index++] = x[0];\n            this.is_1d[index++] = y[0];\n\n            this.CheckSumHuff = this.CheckSumHuff + v[0] + w[0] + x[0] + y[0];\n            num_bits = this.br.hsstell();\n        }\n\n        if (num_bits > part2_3_end) {\n            this.br.rewindNbits(num_bits - part2_3_end);\n            index -= 4;\n        }\n\n        num_bits = this.br.hsstell();\n\n        // Dismiss stuffing bits\n        if (num_bits < part2_3_end)\n            this.br.hgetbits(part2_3_end - num_bits);\n\n        // Zero out rest\n\n        if (index < 576)\n            this.nonzero[ch] = index;\n        else\n            this.nonzero[ch] = 576;\n\n        if (index < 0) index = 0;\n\n        // may not be necessary\n        for (; index < 576; index++)\n            this.is_1d[index] = 0;\n    }\n\n    dequantize_sample(xr, ch, gr) {\n        const xr_1d = xr;\n        const gr_info = this.si.ch[ch].gr[gr];\n\n        let cb = 0, cb_begin = 0, cb_width = 0, next_cb_boundary;\n        let index = 0, t_index, j, g_gain;\n\n        // choose correct scalefactor band per block type, initalize boundary\n        if ((gr_info.window_switching_flag !== 0) && (gr_info.block_type === 2)) {\n            if (gr_info.mixed_block_flag !== 0)\n                next_cb_boundary = this.sfBandIndex[this.sfreq].l[1];  // LONG blocks: 0,1,3\n            else {\n                cb_width = this.sfBandIndex[this.sfreq].s[1];\n                next_cb_boundary = (cb_width << 2) - cb_width;\n                cb_begin = 0;\n            }\n        } else {\n            next_cb_boundary = this.sfBandIndex[this.sfreq].l[1];  // LONG blocks: 0,1,3\n        }\n\n        // Compute overall (global) scaling.\n\n        g_gain = Math.pow(2.0, (0.25 * (gr_info.global_gain - 210.0)));\n\n        for (j = 0; j < this.nonzero[ch]; j++) {\n            // Modif E.B 02/22/99\n            let reste = j % SSLIMIT;\n            let quotien = ((j - reste) / SSLIMIT);\n\n            if (this.is_1d[j] === 0)\n                xr_1d[quotien][reste] = 0.0;\n            else {\n                let abv = this.is_1d[j];\n                if (abv < t_43.length) {\n                    if (this.is_1d[j] > 0)\n                        xr_1d[quotien][reste] = g_gain * t_43[abv];\n                    else {\n                        if (-abv < t_43.length)\n                            xr_1d[quotien][reste] = -g_gain * t_43[-abv];\n                        else\n                            xr_1d[quotien][reste] = -g_gain * Math.pow(-abv, d43);\n                    }\n                } else {\n                    if (this.is_1d[j] > 0)\n                        xr_1d[quotien][reste] = g_gain * Math.pow(abv, d43);\n                    else\n                        xr_1d[quotien][reste] = -g_gain * Math.pow(-abv, d43);\n                }\n            }\n        }\n\n        // apply formula per block type\n        for (j = 0; j < this.nonzero[ch]; j++) {\n            // Modif E.B 02/22/99\n            let reste = j % SSLIMIT;\n            let quotien = ((j - reste) / SSLIMIT);\n\n            if (index === next_cb_boundary) { /* Adjust critical band boundary */\n                if ((gr_info.window_switching_flag !== 0) && (gr_info.block_type === 2)) {\n                    if (gr_info.mixed_block_flag !== 0) {\n\n                        if (index === this.sfBandIndex[this.sfreq].l[8]) {\n                            next_cb_boundary = this.sfBandIndex[this.sfreq].s[4];\n                            next_cb_boundary = (next_cb_boundary << 2) -\n                                next_cb_boundary;\n                            cb = 3;\n                            cb_width = this.sfBandIndex[this.sfreq].s[4] -\n                                this.sfBandIndex[this.sfreq].s[3];\n\n                            cb_begin = this.sfBandIndex[this.sfreq].s[3];\n                            cb_begin = (cb_begin << 2) - cb_begin;\n\n                        } else if (index < this.sfBandIndex[this.sfreq].l[8]) {\n\n                            next_cb_boundary = this.sfBandIndex[this.sfreq].l[(++cb) + 1];\n\n                        } else {\n\n                            next_cb_boundary = this.sfBandIndex[this.sfreq].s[(++cb) + 1];\n                            next_cb_boundary = (next_cb_boundary << 2) -\n                                next_cb_boundary;\n\n                            cb_begin = this.sfBandIndex[this.sfreq].s[cb];\n                            cb_width = this.sfBandIndex[this.sfreq].s[cb + 1] -\n                                cb_begin;\n                            cb_begin = (cb_begin << 2) - cb_begin;\n                        }\n\n                    } else {\n\n                        next_cb_boundary = this.sfBandIndex[this.sfreq].s[(++cb) + 1];\n                        next_cb_boundary = (next_cb_boundary << 2) -\n                            next_cb_boundary;\n\n                        cb_begin = this.sfBandIndex[this.sfreq].s[cb];\n                        cb_width = this.sfBandIndex[this.sfreq].s[cb + 1] -\n                            cb_begin;\n                        cb_begin = (cb_begin << 2) - cb_begin;\n                    }\n\n                } else { // long blocks\n                    next_cb_boundary = this.sfBandIndex[this.sfreq].l[(++cb) + 1];\n                }\n            }\n\n            // Do long/short dependent scaling operations\n\n            if ((gr_info.window_switching_flag !== 0) &&\n                (((gr_info.block_type === 2) && (gr_info.mixed_block_flag === 0)) ||\n                    ((gr_info.block_type === 2) && (gr_info.mixed_block_flag !== 0) && (j >= 36)))) {\n\n                t_index = ((index - cb_begin) / cb_width) ^ 0;\n\n                let idx = this.scalefac[ch].s[t_index][cb] << gr_info.scalefac_scale;\n                idx += (gr_info.subblock_gain[t_index] << 2);\n\n                xr_1d[quotien][reste] *= two_to_negative_half_pow[idx];\n\n            } else {   // LONG block types 0,1,3 & 1st 2 subbands of switched blocks\n\n                let idx = this.scalefac[ch].l[cb];\n\n                if (gr_info.preflag !== 0)\n                    idx += pretab[cb];\n\n                idx = idx << gr_info.scalefac_scale;\n                xr_1d[quotien][reste] *= two_to_negative_half_pow[idx];\n            }\n            index++;\n        }\n\n        for (j = this.nonzero[ch]; j < 576; j++) {\n            let reste = j % SSLIMIT;\n            let quotien = ((j - reste) / SSLIMIT);\n\n            if (reste < 0) reste = 0;\n            if (quotien < 0) quotien = 0;\n\n            xr_1d[quotien][reste] = 0.0;\n        }\n    }\n\n    stereo(header, gr) {\n        let sb, ss, i = 0;\n\n        const lr = this.lr, ro = this.ro, si = this.si;\n        const is_pos = this.is_pos, is_ratio = this.is_ratio;\n\n        if (this.channels === 1)\n            throw 'not implemented';\n\n        const mode_ext = header.extension;\n\n        // MS Stereo\n        const ms_stereo     = ((header.mode === header.JOINT_STEREO) && ((mode_ext & 0x2) !== 0));\n        // Intensity Stereo\n        const i_stereo      = ((header.mode === header.JOINT_STEREO) && ((mode_ext & 0x1) !== 0));\n\n        if (i_stereo)\n            throw 'not implemented';\n\n        // initialization\n        is_pos.fill(7); is_ratio.fill(0.0);\n\n        for (sb = 0; sb < SBLIMIT; sb++)\n        for (ss = 0; ss < SSLIMIT; ss++) {\n            if (is_pos[i] === 7) {\n                if (ms_stereo) {\n                    lr[0][sb][ss] = (ro[0][sb][ss] + ro[1][sb][ss]) * 0.707106781;\n                    lr[1][sb][ss] = (ro[0][sb][ss] - ro[1][sb][ss]) * 0.707106781;\n                } else {\n                    lr[0][sb][ss] = ro[0][sb][ss];\n                    lr[1][sb][ss] = ro[1][sb][ss];\n                }\n            }\n            i++;\n        }\n    }\n\n    reorder(xr, ch, gr) {\n        let gr_info = this.si.ch[ch].gr[gr];\n        let freq, freq3;\n        let index;\n        let sfb, sfb_start, sfb_lines;\n        let src_line, des_line;\n        const xr_1d = xr;\n\n        const sfBandIndex = this.sfBandIndex, sfreq = this.sfreq;\n        const out_1d = this.out_1d;\n\n\n        if ((gr_info.window_switching_flag !== 0) && (gr_info.block_type === 2)) {\n            for (index = 0; index < 576; index++)\n                out_1d[index] = 0.0;\n\n            if (gr_info.mixed_block_flag !== 0) {\n                // NO REORDER FOR LOW 2 SUBBANDS\n                for (index = 0; index < 36; index++) {\n                    // Modif E.B 02/22/99\n                    let reste = index % SSLIMIT;\n                    let quotien = ((index - reste) / SSLIMIT);\n                    out_1d[index] = xr_1d[quotien][reste];\n                }\n\n                // REORDERING FOR REST SWITCHED SHORT\n                for (sfb = 3; sfb < 13; sfb++) {\n                    sfb_start = sfBandIndex[sfreq].s[sfb];\n                    sfb_lines = sfBandIndex[sfreq].s[sfb + 1] - sfb_start;\n\n                    let sfb_start3 = (sfb_start << 2) - sfb_start;\n\n                    for (freq = 0, freq3 = 0; freq < sfb_lines; freq++, freq3 += 3) {\n                        src_line = sfb_start3 + freq;\n                        des_line = sfb_start3 + freq3;\n                        // Modif E.B 02/22/99\n                        let reste = src_line % SSLIMIT;\n                        let quotien = ((src_line - reste) / SSLIMIT);\n\n                        out_1d[des_line] = xr_1d[quotien][reste];\n                        src_line += sfb_lines;\n                        des_line++;\n\n                        reste = src_line % SSLIMIT;\n                        quotien = ((src_line - reste) / SSLIMIT);\n\n                        out_1d[des_line] = xr_1d[quotien][reste];\n                        src_line += sfb_lines;\n                        des_line++;\n\n                        reste = src_line % SSLIMIT;\n                        quotien = ((src_line - reste) / SSLIMIT);\n\n                        out_1d[des_line] = xr_1d[quotien][reste];\n                    }\n                }\n            } else {  // pure short\n                for (index = 0; index < 576; index++) {\n                    let j = reorder_table[sfreq][index];\n                    let reste = j % SSLIMIT;\n                    let quotien = ((j - reste) / SSLIMIT);\n                    out_1d[index] = xr_1d[quotien][reste];\n                }\n            }\n        }\n        else {   // long blocks\n            for (index = 0; index < 576; index++) {\n                // Modif E.B 02/22/99\n                let reste = index % SSLIMIT;\n                let quotien = ((index - reste) / SSLIMIT);\n                out_1d[index] = xr_1d[quotien][reste];\n            }\n        }\n    }\n\n    antialias(ch, gr) {\n        let sb18, ss, sb18lim;\n        let gr_info = this.si.ch[ch].gr[gr];\n\n        // 31 alias-reduction operations between each pair of sub-bands\n        // with 8 butterflies between each pair\n\n        if ((gr_info.window_switching_flag !== 0) && (gr_info.block_type === 2) && !(gr_info.mixed_block_flag !== 0))\n            return;\n\n        if ((gr_info.window_switching_flag !== 0) && (gr_info.mixed_block_flag !== 0) && (gr_info.block_type === 2)) {\n            sb18lim = 18;\n        } else {\n            sb18lim = 558;\n        }\n\n        const out_1d = this.out_1d;\n\n        for (sb18 = 0; sb18 < sb18lim; sb18 += 18) {\n            for (ss = 0; ss < 8; ss++) {\n                let src_idx1 = sb18 + 17 - ss;\n                let src_idx2 = sb18 + 18 + ss;\n                let bu = out_1d[src_idx1];\n                let bd = out_1d[src_idx2];\n                out_1d[src_idx1] = (bu * cs[ss]) - (bd * ca[ss]);\n                out_1d[src_idx2] = (bd * cs[ss]) + (bu * ca[ss]);\n            }\n        }\n    }\n\n    hybrid(ch, gr) {\n        let bt;\n        let sb18;\n        let gr_info = (this.si.ch[ch].gr[gr]);\n        let tsOut;\n\n        const out_1d = this.out_1d;\n        const tsOutCopy = this.tsOutCopy;\n\n        for (sb18 = 0; sb18 < 576; sb18 += 18) {\n            bt = ((gr_info.window_switching_flag !== 0) && (gr_info.mixed_block_flag !== 0) &&\n                (sb18 < 36)) ? 0 : gr_info.block_type;\n\n            tsOut = out_1d;\n            // Modif E.B 02/22/99\n            for (let cc = 0; cc < 18; cc++)\n                tsOutCopy[cc] = tsOut[cc + sb18];\n\n            this.inv_mdct(tsOutCopy, this.rawout, bt);\n\n            for (let cc = 0; cc < 18; cc++)\n                tsOut[cc + sb18] = tsOutCopy[cc];\n            // Fin Modif\n\n            // overlap addition\n            const prvblk = this.prevblck;\n            const rawout = this.rawout;\n\n            tsOut[sb18] = rawout[0] + prvblk[ch][sb18];\n            prvblk[ch][sb18] = rawout[18];\n            tsOut[1 + sb18] = rawout[1] + prvblk[ch][sb18 + 1];\n            prvblk[ch][sb18 + 1] = rawout[19];\n            tsOut[2 + sb18] = rawout[2] + prvblk[ch][sb18 + 2];\n            prvblk[ch][sb18 + 2] = rawout[20];\n            tsOut[3 + sb18] = rawout[3] + prvblk[ch][sb18 + 3];\n            prvblk[ch][sb18 + 3] = rawout[21];\n            tsOut[4 + sb18] = rawout[4] + prvblk[ch][sb18 + 4];\n            prvblk[ch][sb18 + 4] = rawout[22];\n            tsOut[5 + sb18] = rawout[5] + prvblk[ch][sb18 + 5];\n            prvblk[ch][sb18 + 5] = rawout[23];\n            tsOut[6 + sb18] = rawout[6] + prvblk[ch][sb18 + 6];\n            prvblk[ch][sb18 + 6] = rawout[24];\n            tsOut[7 + sb18] = rawout[7] + prvblk[ch][sb18 + 7];\n            prvblk[ch][sb18 + 7] = rawout[25];\n            tsOut[8 + sb18] = rawout[8] + prvblk[ch][sb18 + 8];\n            prvblk[ch][sb18 + 8] = rawout[26];\n            tsOut[9 + sb18] = rawout[9] + prvblk[ch][sb18 + 9];\n            prvblk[ch][sb18 + 9] = rawout[27];\n            tsOut[10 + sb18] = rawout[10] + prvblk[ch][sb18 + 10];\n            prvblk[ch][sb18 + 10] = rawout[28];\n            tsOut[11 + sb18] = rawout[11] + prvblk[ch][sb18 + 11];\n            prvblk[ch][sb18 + 11] = rawout[29];\n            tsOut[12 + sb18] = rawout[12] + prvblk[ch][sb18 + 12];\n            prvblk[ch][sb18 + 12] = rawout[30];\n            tsOut[13 + sb18] = rawout[13] + prvblk[ch][sb18 + 13];\n            prvblk[ch][sb18 + 13] = rawout[31];\n            tsOut[14 + sb18] = rawout[14] + prvblk[ch][sb18 + 14];\n            prvblk[ch][sb18 + 14] = rawout[32];\n            tsOut[15 + sb18] = rawout[15] + prvblk[ch][sb18 + 15];\n            prvblk[ch][sb18 + 15] = rawout[33];\n            tsOut[16 + sb18] = rawout[16] + prvblk[ch][sb18 + 16];\n            prvblk[ch][sb18 + 16] = rawout[34];\n            tsOut[17 + sb18] = rawout[17] + prvblk[ch][sb18 + 17];\n            prvblk[ch][sb18 + 17] = rawout[35];\n        }\n    }\n\n    inv_mdct(inp, out, block_type) {\n        let win_bt;\n        let i;\n\n        let tmpf_0, tmpf_1, tmpf_2, tmpf_3, tmpf_4, tmpf_5, tmpf_6, tmpf_7, tmpf_8, tmpf_9;\n        let tmpf_10, tmpf_11, tmpf_12, tmpf_13, tmpf_14, tmpf_15, tmpf_16, tmpf_17;\n\n        tmpf_0 = tmpf_1 = tmpf_2 = tmpf_3 = tmpf_4 = tmpf_5 = tmpf_6 = tmpf_7 = tmpf_8 = tmpf_9 =\n            tmpf_10 = tmpf_11 = tmpf_12 = tmpf_13 = tmpf_14 = tmpf_15 = tmpf_16 = tmpf_17 = 0.0;\n\n        if (block_type === 2) {\n\n            out[0] = 0.0;\n            out[1] = 0.0;\n            out[2] = 0.0;\n            out[3] = 0.0;\n            out[4] = 0.0;\n            out[5] = 0.0;\n            out[6] = 0.0;\n            out[7] = 0.0;\n            out[8] = 0.0;\n            out[9] = 0.0;\n            out[10] = 0.0;\n            out[11] = 0.0;\n            out[12] = 0.0;\n            out[13] = 0.0;\n            out[14] = 0.0;\n            out[15] = 0.0;\n            out[16] = 0.0;\n            out[17] = 0.0;\n            out[18] = 0.0;\n            out[19] = 0.0;\n            out[20] = 0.0;\n            out[21] = 0.0;\n            out[22] = 0.0;\n            out[23] = 0.0;\n            out[24] = 0.0;\n            out[25] = 0.0;\n            out[26] = 0.0;\n            out[27] = 0.0;\n            out[28] = 0.0;\n            out[29] = 0.0;\n            out[30] = 0.0;\n            out[31] = 0.0;\n            out[32] = 0.0;\n            out[33] = 0.0;\n            out[34] = 0.0;\n            out[35] = 0.0;\n\n            let six_i = 0;\n\n            for (i = 0; i < 3; i++) {\n                // 12 point IMDCT\n                // Begin 12 point IDCT\n                // Input aliasing for 12 pt IDCT\n                inp[15 + i] += inp[12 + i];\n                inp[12 + i] += inp[9 + i];\n                inp[9 + i] += inp[6 + i];\n                inp[6 + i] += inp[3 + i];\n                inp[3 + i] += inp[i];\n\n                // Input aliasing on odd indices (for 6 point IDCT)\n                inp[15 + i] += inp[9 + i];\n                inp[9 + i] += inp[3 + i];\n\n                // 3 point IDCT on even indices\n                let pp1, pp2, sum;\n                pp2 = inp[12 + i] * 0.500000000;\n                pp1 = inp[6 + i] * 0.866025403;\n                sum = inp[i] + pp2;\n                tmpf_1 = inp[i] - inp [12 + i];\n                tmpf_0 = sum + pp1;\n                tmpf_2 = sum - pp1;\n\n                // End 3 point IDCT on even indices\n                // 3 point IDCT on odd indices (for 6 point IDCT)\n                pp2 = inp[15 + i] * 0.500000000;\n                pp1 = inp[9 + i] * 0.866025403;\n                sum = inp[3 + i] + pp2;\n                tmpf_4 = inp[3 + i] - inp [15 + i];\n                tmpf_5 = sum + pp1;\n                tmpf_3 = sum - pp1;\n                // End 3 point IDCT on odd indices\n                // Twiddle factors on odd indices (for 6 point IDCT)\n\n                tmpf_3 *= 1.931851653;\n                tmpf_4 *= 0.707106781;\n                tmpf_5 *= 0.517638090;\n\n                // Output butterflies on 2 3 point IDCT's (for 6 point IDCT)\n                let save = tmpf_0;\n                tmpf_0 += tmpf_5;\n                tmpf_5 = save - tmpf_5;\n                save = tmpf_1;\n                tmpf_1 += tmpf_4;\n                tmpf_4 = save - tmpf_4;\n                save = tmpf_2;\n                tmpf_2 += tmpf_3;\n                tmpf_3 = save - tmpf_3;\n\n                // End 6 point IDCT\n                // Twiddle factors on indices (for 12 point IDCT)\n\n                tmpf_0 *= 0.504314480;\n                tmpf_1 *= 0.541196100;\n                tmpf_2 *= 0.630236207;\n                tmpf_3 *= 0.821339815;\n                tmpf_4 *= 1.306562965;\n                tmpf_5 *= 3.830648788;\n\n                // End 12 point IDCT\n\n                // Shift to 12 point modified IDCT, multiply by window type 2\n                tmpf_8 = -tmpf_0 * 0.793353340;\n                tmpf_9 = -tmpf_0 * 0.608761429;\n                tmpf_7 = -tmpf_1 * 0.923879532;\n                tmpf_10 = -tmpf_1 * 0.382683432;\n                tmpf_6 = -tmpf_2 * 0.991444861;\n                tmpf_11 = -tmpf_2 * 0.130526192;\n\n                tmpf_0 = tmpf_3;\n                tmpf_1 = tmpf_4 * 0.382683432;\n                tmpf_2 = tmpf_5 * 0.608761429;\n\n                tmpf_3 = -tmpf_5 * 0.793353340;\n                tmpf_4 = -tmpf_4 * 0.923879532;\n                tmpf_5 = -tmpf_0 * 0.991444861;\n\n                tmpf_0 *= 0.130526192;\n\n                out[six_i + 6] += tmpf_0;\n                out[six_i + 7] += tmpf_1;\n                out[six_i + 8] += tmpf_2;\n                out[six_i + 9] += tmpf_3;\n                out[six_i + 10] += tmpf_4;\n                out[six_i + 11] += tmpf_5;\n                out[six_i + 12] += tmpf_6;\n                out[six_i + 13] += tmpf_7;\n                out[six_i + 14] += tmpf_8;\n                out[six_i + 15] += tmpf_9;\n                out[six_i + 16] += tmpf_10;\n                out[six_i + 17] += tmpf_11;\n\n                six_i += 6;\n            }\n        }\n        else {\n            // 36 point IDCT\n            // input aliasing for 36 point IDCT\n            inp[17] += inp[16];\n            inp[16] += inp[15];\n            inp[15] += inp[14];\n            inp[14] += inp[13];\n            inp[13] += inp[12];\n            inp[12] += inp[11];\n            inp[11] += inp[10];\n            inp[10] += inp[9];\n            inp[9] += inp[8];\n            inp[8] += inp[7];\n            inp[7] += inp[6];\n            inp[6] += inp[5];\n            inp[5] += inp[4];\n            inp[4] += inp[3];\n            inp[3] += inp[2];\n            inp[2] += inp[1];\n            inp[1] += inp[0];\n\n            // 18 point IDCT for odd indices\n            // input aliasing for 18 point IDCT\n            inp[17] += inp[15];\n            inp[15] += inp[13];\n            inp[13] += inp[11];\n            inp[11] += inp[9];\n            inp[9] += inp[7];\n            inp[7] += inp[5];\n            inp[5] += inp[3];\n            inp[3] += inp[1];\n\n            let tmp0, tmp1, tmp2, tmp3, tmp4, tmp0_, tmp1_, tmp2_, tmp3_;\n            let tmp0o, tmp1o, tmp2o, tmp3o, tmp4o, tmp0_o, tmp1_o, tmp2_o, tmp3_o;\n\n            // Fast 9 Point Inverse Discrete Cosine Transform\n            //\n            // By  Francois-Raymond Boyer\n            //         mailto:boyerf@iro.umontreal.ca\n            //         http://www.iro.umontreal.ca/~boyerf\n            //\n            // The code has been optimized for Intel processors\n            //  (takes a lot of time to convert float to and from iternal FPU representation)\n            //\n            // It is a simple \"factorization\" of the IDCT matrix.\n\n            // 9 point IDCT on even indices\n\n            // 5 points on odd indices (not realy an IDCT)\n            let i00 = inp[0] + inp[0];\n            let iip12 = i00 + inp[12];\n\n            tmp0 = iip12 + inp[4] * 1.8793852415718 + inp[8] * 1.532088886238 + inp[16] * 0.34729635533386;\n            tmp1 = i00 + inp[4] - inp[8] - inp[12] - inp[12] - inp[16];\n            tmp2 = iip12 - inp[4] * 0.34729635533386 - inp[8] * 1.8793852415718 + inp[16] * 1.532088886238;\n            tmp3 = iip12 - inp[4] * 1.532088886238 + inp[8] * 0.34729635533386 - inp[16] * 1.8793852415718;\n            tmp4 = inp[0] - inp[4] + inp[8] - inp[12] + inp[16];\n\n            // 4 points on even indices\n            let i66_ = inp[6] * 1.732050808;\t\t// Sqrt[3]\n            tmp0_ = inp[2] * 1.9696155060244 + i66_ + inp[10] * 1.2855752193731 + inp[14] * 0.68404028665134;\n            tmp1_ = (inp[2] - inp[10] - inp[14]) * 1.732050808;\n            tmp2_ = inp[2] * 1.2855752193731 - i66_ - inp[10] * 0.68404028665134 + inp[14] * 1.9696155060244;\n            tmp3_ = inp[2] * 0.68404028665134 - i66_ + inp[10] * 1.9696155060244 - inp[14] * 1.2855752193731;\n\n            // 9 point IDCT on odd indices\n            // 5 points on odd indices (not realy an IDCT)\n            let i0 = inp[1] + inp[1];\n            let i0p12 = i0 + inp[12 + 1];\n\n            tmp0o = i0p12 + inp[4 + 1] * 1.8793852415718 + inp[9] * 1.532088886238 + inp[17] * 0.34729635533386;\n            tmp1o = i0 + inp[4 + 1] - inp[8 + 1] - inp[12 + 1] - inp[12 + 1] - inp[16 + 1];\n            tmp2o = i0p12 - inp[4 + 1] * 0.34729635533386 - inp[8 + 1] * 1.8793852415718 + inp[16 + 1] * 1.532088886238;\n            tmp3o = i0p12 - inp[4 + 1] * 1.532088886238 + inp[8 + 1] * 0.34729635533386 - inp[16 + 1] * 1.8793852415718;\n            tmp4o = (inp[0 + 1] - inp[4 + 1] + inp[8 + 1] - inp[12 + 1] + inp[16 + 1]) * 0.707106781; // Twiddled\n\n            // 4 points on even indices\n            let i6_ = inp[6 + 1] * 1.732050808;\t\t// Sqrt[3]\n\n            tmp0_o = inp[2 + 1] * 1.9696155060244 + i6_ + inp[10 + 1] * 1.2855752193731 + inp[14 + 1] * 0.68404028665134;\n            tmp1_o = (inp[2 + 1] - inp[10 + 1] - inp[14 + 1]) * 1.732050808;\n            tmp2_o = inp[2 + 1] * 1.2855752193731 - i6_ - inp[10 + 1] * 0.68404028665134 + inp[14 + 1] * 1.9696155060244;\n            tmp3_o = inp[2 + 1] * 0.68404028665134 - i6_ + inp[10 + 1] * 1.9696155060244 - inp[14 + 1] * 1.2855752193731;\n\n            // Twiddle factors on odd indices\n            // and\n            // Butterflies on 9 point IDCT's\n            // and\n            // twiddle factors for 36 point IDCT\n\n            let e, o;\n            e = tmp0 + tmp0_;\n            o = (tmp0o + tmp0_o) * 0.501909918;\n            tmpf_0 = e + o;\n            tmpf_17 = e - o;\n            e = tmp1 + tmp1_;\n            o = (tmp1o + tmp1_o) * 0.517638090;\n            tmpf_1 = e + o;\n            tmpf_16 = e - o;\n            e = tmp2 + tmp2_;\n            o = (tmp2o + tmp2_o) * 0.551688959;\n            tmpf_2 = e + o;\n            tmpf_15 = e - o;\n            e = tmp3 + tmp3_;\n            o = (tmp3o + tmp3_o) * 0.610387294;\n            tmpf_3 = e + o;\n            tmpf_14 = e - o;\n            tmpf_4 = tmp4 + tmp4o;\n            tmpf_13 = tmp4 - tmp4o;\n            e = tmp3 - tmp3_;\n            o = (tmp3o - tmp3_o) * 0.871723397;\n            tmpf_5 = e + o;\n            tmpf_12 = e - o;\n            e = tmp2 - tmp2_;\n            o = (tmp2o - tmp2_o) * 1.183100792;\n            tmpf_6 = e + o;\n            tmpf_11 = e - o;\n            e = tmp1 - tmp1_;\n            o = (tmp1o - tmp1_o) * 1.931851653;\n            tmpf_7 = e + o;\n            tmpf_10 = e - o;\n            e = tmp0 - tmp0_;\n            o = (tmp0o - tmp0_o) * 5.736856623;\n            tmpf_8 = e + o;\n            tmpf_9 = e - o;\n\n            // end 36 point IDCT */\n            // shift to modified IDCT\n            win_bt = win[block_type];\n\n            out[0] = -tmpf_9 * win_bt[0];\n            out[1] = -tmpf_10 * win_bt[1];\n            out[2] = -tmpf_11 * win_bt[2];\n            out[3] = -tmpf_12 * win_bt[3];\n            out[4] = -tmpf_13 * win_bt[4];\n            out[5] = -tmpf_14 * win_bt[5];\n            out[6] = -tmpf_15 * win_bt[6];\n            out[7] = -tmpf_16 * win_bt[7];\n            out[8] = -tmpf_17 * win_bt[8];\n            out[9] = tmpf_17 * win_bt[9];\n            out[10] = tmpf_16 * win_bt[10];\n            out[11] = tmpf_15 * win_bt[11];\n            out[12] = tmpf_14 * win_bt[12];\n            out[13] = tmpf_13 * win_bt[13];\n            out[14] = tmpf_12 * win_bt[14];\n            out[15] = tmpf_11 * win_bt[15];\n            out[16] = tmpf_10 * win_bt[16];\n            out[17] = tmpf_9 * win_bt[17];\n            out[18] = tmpf_8 * win_bt[18];\n            out[19] = tmpf_7 * win_bt[19];\n            out[20] = tmpf_6 * win_bt[20];\n            out[21] = tmpf_5 * win_bt[21];\n            out[22] = tmpf_4 * win_bt[22];\n            out[23] = tmpf_3 * win_bt[23];\n            out[24] = tmpf_2 * win_bt[24];\n            out[25] = tmpf_1 * win_bt[25];\n            out[26] = tmpf_0 * win_bt[26];\n            out[27] = tmpf_0 * win_bt[27];\n            out[28] = tmpf_1 * win_bt[28];\n            out[29] = tmpf_2 * win_bt[29];\n            out[30] = tmpf_3 * win_bt[30];\n            out[31] = tmpf_4 * win_bt[31];\n            out[32] = tmpf_5 * win_bt[32];\n            out[33] = tmpf_6 * win_bt[33];\n            out[34] = tmpf_7 * win_bt[34];\n            out[35] = tmpf_8 * win_bt[35];\n        }\n    }\n\n};\n\nfunction reorder(scalefac_band) {\n    let j = 0;\n    const ix = new Int32Array(576); //int[576];\n    for (let sfb = 0; sfb < 13; sfb++) {\n        const start = scalefac_band[sfb];\n        const end = scalefac_band[sfb + 1];\n        for (let window = 0; window < 3; window++)\n            for (let i = start; i < end; i++)\n                ix[3 * i + window] = j++;\n    }\n    return ix;\n}\n\nclass gr_info_s {\n    constructor() {\n        this.part2_3_length = 0;\n        this.big_values = 0;\n        this.global_gain = 0;\n        this.scalefac_compress = 0;\n        this.window_switching_flag = 0;\n        this.block_type = 0;\n        this.mixed_block_flag = 0;\n        this.region0_count = 0;\n        this.region1_count = 0;\n        this.preflag = 0;\n        this.scalefac_scale = 0;\n        this.count1table_select = 0;\n        // public int[] table_select;\n        this.table_select = (new Int32Array(3)).fill(0);\n        // public int[] subblock_gain;\n        this.subblock_gain = (new Int32Array(3)).fill(0);\n    }\n}\n\nclass temporaire {\n    constructor() {\n        // public int[] scfsi;\n        this.scfsi = (new Int32Array(4)).fill(0);\n        this.gr = [new gr_info_s(), new gr_info_s()];\n    }\n}\n\nclass III_side_info_t {\n    constructor() {\n        this.main_data_begin = 0;\n        this.private_bits = 0;\n        this.ch = [new temporaire(), new temporaire()]\n    }\n}\n\nclass temporaire2 {\n    constructor() {\n        // public int[] l;\n        this.l = (new Int32Array(23)).fill(0);\n        // public int[][] s;\n        this.s = (new Array(3)).fill().map(() => {\n            return (new Int32Array(13)).fill(0);\n        })\n    }\n}\n\nclass SBI {\n    constructor(thel = null, thes = null) {\n        // public int[] l;\n        this.l = thel || (new Int32Array(23)).fill(0);\n        // public int[] s;\n        this.s = thes || (new Int32Array(14)).fill(0);\n    }\n}\n\nconst d43 = (4 / 3);\nconst SSLIMIT = 18;\nconst SBLIMIT = 32;\n\n// private static /*final*/ int reorder_table[][]\nlet reorder_table = null;\n\nconst slen = [\n    [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4],\n    [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3]\n];\n\nconst t_43 = (() => {\n    // float[] t43 = new float[8192];\n    const t43 = (new Float32Array(8192)).fill(0.0);\n    const d43 = 4.0 / 3.0;\n\n    for (let i = 0; i < 8192; i++) {\n        t43[i] = Math.pow(i, d43);\n    }\n    return t43;\n})();\n\nconst two_to_negative_half_pow = [\n    1.0000000000E+00, 7.0710678119E-01, 5.0000000000E-01, 3.5355339059E-01,\n    2.5000000000E-01, 1.7677669530E-01, 1.2500000000E-01, 8.8388347648E-02,\n    6.2500000000E-02, 4.4194173824E-02, 3.1250000000E-02, 2.2097086912E-02,\n    1.5625000000E-02, 1.1048543456E-02, 7.8125000000E-03, 5.5242717280E-03,\n    3.9062500000E-03, 2.7621358640E-03, 1.9531250000E-03, 1.3810679320E-03,\n    9.7656250000E-04, 6.9053396600E-04, 4.8828125000E-04, 3.4526698300E-04,\n    2.4414062500E-04, 1.7263349150E-04, 1.2207031250E-04, 8.6316745750E-05,\n    6.1035156250E-05, 4.3158372875E-05, 3.0517578125E-05, 2.1579186438E-05,\n    1.5258789062E-05, 1.0789593219E-05, 7.6293945312E-06, 5.3947966094E-06,\n    3.8146972656E-06, 2.6973983047E-06, 1.9073486328E-06, 1.3486991523E-06,\n    9.5367431641E-07, 6.7434957617E-07, 4.7683715820E-07, 3.3717478809E-07,\n    2.3841857910E-07, 1.6858739404E-07, 1.1920928955E-07, 8.4293697022E-08,\n    5.9604644775E-08, 4.2146848511E-08, 2.9802322388E-08, 2.1073424255E-08,\n    1.4901161194E-08, 1.0536712128E-08, 7.4505805969E-09, 5.2683560639E-09,\n    3.7252902985E-09, 2.6341780319E-09, 1.8626451492E-09, 1.3170890160E-09,\n    9.3132257462E-10, 6.5854450798E-10, 4.6566128731E-10, 3.2927225399E-10\n];\n\nconst pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0];\n\nconst cs = [\n    0.857492925712, 0.881741997318, 0.949628649103, 0.983314592492,\n    0.995517816065, 0.999160558175, 0.999899195243, 0.999993155067\n];\n\nconst ca = [\n    -0.5144957554270, -0.4717319685650, -0.3133774542040, -0.1819131996110,\n    -0.0945741925262, -0.0409655828852, -0.0141985685725, -0.00369997467375\n];\n\nconst win =\n    [\n        [-1.6141214951E-02, -5.3603178919E-02, -1.0070713296E-01, -1.6280817573E-01,\n            -4.9999999679E-01, -3.8388735032E-01, -6.2061144372E-01, -1.1659756083E+00,\n            -3.8720752656E+00, -4.2256286556E+00, -1.5195289984E+00, -9.7416483388E-01,\n            -7.3744074053E-01, -1.2071067773E+00, -5.1636156596E-01, -4.5426052317E-01,\n            -4.0715656898E-01, -3.6969460527E-01, -3.3876269197E-01, -3.1242222492E-01,\n            -2.8939587111E-01, -2.6880081906E-01, -5.0000000266E-01, -2.3251417468E-01,\n            -2.1596714708E-01, -2.0004979098E-01, -1.8449493497E-01, -1.6905846094E-01,\n            -1.5350360518E-01, -1.3758624925E-01, -1.2103922149E-01, -2.0710679058E-01,\n            -8.4752577594E-02, -6.4157525656E-02, -4.1131172614E-02, -1.4790705759E-02],\n\n        [-1.6141214951E-02, -5.3603178919E-02, -1.0070713296E-01, -1.6280817573E-01,\n            -4.9999999679E-01, -3.8388735032E-01, -6.2061144372E-01, -1.1659756083E+00,\n            -3.8720752656E+00, -4.2256286556E+00, -1.5195289984E+00, -9.7416483388E-01,\n            -7.3744074053E-01, -1.2071067773E+00, -5.1636156596E-01, -4.5426052317E-01,\n            -4.0715656898E-01, -3.6969460527E-01, -3.3908542600E-01, -3.1511810350E-01,\n            -2.9642226150E-01, -2.8184548650E-01, -5.4119610000E-01, -2.6213228100E-01,\n            -2.5387916537E-01, -2.3296291359E-01, -1.9852728987E-01, -1.5233534808E-01,\n            -9.6496400054E-02, -3.3423828516E-02, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00],\n\n        [-4.8300800645E-02, -1.5715656932E-01, -2.8325045177E-01, -4.2953747763E-01,\n            -1.2071067795E+00, -8.2426483178E-01, -1.1451749106E+00, -1.7695290101E+00,\n            -4.5470225061E+00, -3.4890531002E+00, -7.3296292804E-01, -1.5076514758E-01,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00],\n\n        [0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00, 0.0000000000E+00,\n            0.0000000000E+00, 0.0000000000E+00, -1.5076513660E-01, -7.3296291107E-01,\n            -3.4890530566E+00, -4.5470224727E+00, -1.7695290031E+00, -1.1451749092E+00,\n            -8.3137738100E-01, -1.3065629650E+00, -5.4142014250E-01, -4.6528974900E-01,\n            -4.1066990750E-01, -3.7004680800E-01, -3.3876269197E-01, -3.1242222492E-01,\n            -2.8939587111E-01, -2.6880081906E-01, -5.0000000266E-01, -2.3251417468E-01,\n            -2.1596714708E-01, -2.0004979098E-01, -1.8449493497E-01, -1.6905846094E-01,\n            -1.5350360518E-01, -1.3758624925E-01, -1.2103922149E-01, -2.0710679058E-01,\n            -8.4752577594E-02, -6.4157525656E-02, -4.1131172614E-02, -1.4790705759E-02]\n    ];\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/layer3.js","const MXOFF = 250;\nconst HTN   = 34;\n\nlet ht      = null;\n\nclass Huffman {\n\n    static get ht() { return Huffman.inithuff(); }\n\n    constructor() {\n        this.tablename0 = ' ';\n        this.tablename1 = ' ';\n        this.tablename2 = ' ';\n\n        this.xlen = null;\n        this.ylen = null;\n        this.linbits = null;\n        this.linmax = null;\n        this.ref = null;\n        this.table = null;\n        this.hlen = null;\n        this.val = null;\n        this.treelen = null;\n    }\n\n    static inithuff() {\n        if (ht != null)\n            return ht;\n\n        // public static huffcodetab[]  ht = null;\n        ht = new Array(HTN);\n\n        ht[ 0] = huffcodetab(\"0  \",0,0,0,0,-1,null,null,ValTab0,0);\n        ht[ 1] = huffcodetab(\"1  \",2,2,0,0,-1,null,null,ValTab1,7);\n        ht[ 2] = huffcodetab(\"2  \",3,3,0,0,-1,null,null,ValTab2,17);\n        ht[ 3] = huffcodetab(\"3  \",3,3,0,0,-1,null,null,ValTab3,17);\n        ht[ 4] = huffcodetab(\"4  \",0,0,0,0,-1,null,null,ValTab4,0);\n        ht[ 5] = huffcodetab(\"5  \",4,4,0,0,-1,null,null,ValTab5,31);\n        ht[ 6] = huffcodetab(\"6  \",4,4,0,0,-1,null,null,ValTab6,31);\n        ht[ 7] = huffcodetab(\"7  \",6,6,0,0,-1,null,null,ValTab7,71);\n        ht[ 8] = huffcodetab(\"8  \",6,6,0,0,-1,null,null,ValTab8,71);\n        ht[ 9] = huffcodetab(\"9  \",6,6,0,0,-1,null,null,ValTab9,71);\n        ht[10] = huffcodetab(\"10 \",8,8,0,0,-1,null,null,ValTab10,127);\n        ht[11] = huffcodetab(\"11 \",8,8,0,0,-1,null,null,ValTab11,127);\n        ht[12] = huffcodetab(\"12 \",8,8,0,0,-1,null,null,ValTab12,127);\n        ht[13] = huffcodetab(\"13 \",16,16,0,0,-1,null,null,ValTab13,511);\n        ht[14] = huffcodetab(\"14 \",0,0,0,0,-1,null,null,ValTab14,0);\n        ht[15] = huffcodetab(\"15 \",16,16,0,0,-1,null,null,ValTab15,511);\n        ht[16] = huffcodetab(\"16 \",16,16,1,1,-1,null,null,ValTab16,511);\n        ht[17] = huffcodetab(\"17 \",16,16,2,3,16,null,null,ValTab16,511);\n        ht[18] = huffcodetab(\"18 \",16,16,3,7,16,null,null,ValTab16,511);\n        ht[19] = huffcodetab(\"19 \",16,16,4,15,16,null,null,ValTab16,511);\n        ht[20] = huffcodetab(\"20 \",16,16,6,63,16,null,null,ValTab16,511);\n        ht[21] = huffcodetab(\"21 \",16,16,8,255,16,null,null,ValTab16,511);\n        ht[22] = huffcodetab(\"22 \",16,16,10,1023,16,null,null,ValTab16,511);\n        ht[23] = huffcodetab(\"23 \",16,16,13,8191,16,null,null,ValTab16,511);\n        ht[24] = huffcodetab(\"24 \",16,16,4,15,-1,null,null,ValTab24,512);\n        ht[25] = huffcodetab(\"25 \",16,16,5,31,24,null,null,ValTab24,512);\n        ht[26] = huffcodetab(\"26 \",16,16,6,63,24,null,null,ValTab24,512);\n        ht[27] = huffcodetab(\"27 \",16,16,7,127,24,null,null,ValTab24,512);\n        ht[28] = huffcodetab(\"28 \",16,16,8,255,24,null,null,ValTab24,512);\n        ht[29] = huffcodetab(\"29 \",16,16,9,511,24,null,null,ValTab24,512);\n        ht[30] = huffcodetab(\"30 \",16,16,11,2047,24,null,null,ValTab24,512);\n        ht[31] = huffcodetab(\"31 \",16,16,13,8191,24,null,null,ValTab24,512);\n        ht[32] = huffcodetab(\"32 \",1,16,0,0,-1,null,null,ValTab32,31);\n        ht[33] = huffcodetab(\"33 \",1,16,0,0,-1,null,null,ValTab33,31);\n\n        return ht;\n    }\n\n    static huffman_decoder(h, x, y, v, w, br)\n    {\n        const dmask = 1 << ((4 * 8) - 1);\n        const hs    = 4 * 8;\n\n        let level = dmask, point = 0, error = 1;\n\n        if (h.val == null)\n            return 2;\n\n        /* table 0 needs no bits */\n        if ( h.treelen === 0) {\n            x[0] = y[0] = 0;\n            return 0;\n        }\n\n        // Lookup in Huffman table.\n\n        do {\n            if (h.val[point][0] === 0) { // end of tree\n                x[0] = h.val[point][1] >>> 4;\n                y[0] = h.val[point][1] & 0xf;\n                error = 0;\n                break;\n            }\n\n            if (br.hget1bit() !== 0)\n            {\n                while (h.val[point][1] >= MXOFF) point += h.val[point][1];\n                point += h.val[point][1];\n            }\n            else\n            {\n                while (h.val[point][0] >= MXOFF) point += h.val[point][0];\n                point += h.val[point][0];\n            }\n\n            level >>>= 1; // fixme\n        } while ((level !==0 )  || (point < 0 /*ht[0].treelen*/) );\n\n        // Process sign encodings for quadruples tables.\n\n        if (h.tablename0 === '3' && (h.tablename1 === '2' || h.tablename1 === '3'))\n        {\n            v[0] = (y[0]>>3) & 1;\n            w[0] = (y[0]>>2) & 1;\n            x[0] = (y[0]>>1) & 1;\n            y[0] = y[0] & 1;\n\n            if (v[0] !== 0)\n                if (br.hget1bit() !== 0) v[0] = -v[0];\n            if (w[0] !== 0)\n                if (br.hget1bit() !== 0) w[0] = -w[0];\n            if (x[0] !== 0)\n                if (br.hget1bit() !== 0) x[0] = -x[0];\n            if (y[0] !== 0)\n                if (br.hget1bit() !== 0) y[0] = -y[0];\n        }\n        else\n        {\n            if (h.linbits !== 0)\n                if ((h.xlen - 1) === x[0])\n                    x[0] += br.hgetbits(h.linbits);\n            if (x[0] !== 0)\n                if (br.hget1bit() !== 0) x[0] = -x[0];\n            if (h.linbits !== 0)\n                if ((h.ylen - 1) === y[0])\n                    y[0] += br.hgetbits(h.linbits);\n            if (y[0] !== 0)\n                if (br.hget1bit() !== 0) y[0] = -y[0];\n        }\n\n        return error;\n    }\n\n}\n\nfunction huffcodetab(S,XLEN,YLEN,LINBITS,LINMAX,REF,TABLE,HLEN,VAL,TREELEN)\n{\n    const inst = new Huffman();\n\n    inst.tablename0     = S[0];\n    inst.tablename1     = S[1];\n    inst.tablename2     = S[2];\n    inst.xlen           = XLEN;\n    inst. ylen          = YLEN;\n    inst.linbits        = LINBITS;\n    inst.linmax         = LINMAX;\n    inst.ref            = REF;\n    inst.table          = TABLE;\n    inst.hlen           = HLEN;\n    inst.val            = VAL;\n    inst.treelen        = TREELEN;\n\n    return inst;\n}\n\nconst ValTab0 = [[0,0]];    // dummy\n\nconst ValTab1 = [\n    [2,1],[0,0],[2,1],[0,16],[2,1],[0,1],[0,17],\n];\n\nconst ValTab2 = [\n    [2,1],[0,0],[4,1],[2,1],[0,16],[0,1],[2,1],[0,17],[4,1],[2,1],\n    [0,32],[0,33],[2,1],[0,18],[2,1],[0,2],[0,34],\n];\n\nconst ValTab3 = [\n    [4,1],[2,1],[0,0],[0,1],[2,1],[0,17],[2,1],[0,16],[4,1],[2,1],\n    [0,32],[0,33],[2,1],[0,18],[2,1],[0,2],[0,34],\n];\n\nconst ValTab4 = [[0,0]];\t// dummy\n\nconst ValTab5 = [\n    [2,1],[0,0],[4,1],[2,1],[0,16],[0,1],[2,1],[0,17],[8,1],[4,1],\n    [2,1],[0,32],[0,2],[2,1],[0,33],[0,18],[8,1],[4,1],[2,1],[0,34],\n    [0,48],[2,1],[0,3],[0,19],[2,1],[0,49],[2,1],[0,50],[2,1],[0,35],\n    [0,51],\n];\n\nconst ValTab6 = [\n    [6,1],[4,1],[2,1],[0,0],[0,16],[0,17],[6,1],[2,1],[0,1],[2,1],\n    [0,32],[0,33],[6,1],[2,1],[0,18],[2,1],[0,2],[0,34],[4,1],[2,1],\n    [0,49],[0,19],[4,1],[2,1],[0,48],[0,50],[2,1],[0,35],[2,1],[0,3],\n    [0,51],\n];\n\nconst ValTab7 = [\n    [2,1],[0,0],[4,1],[2,1],[0,16],[0,1],[8,1],[2,1],[0,17],[4,1],\n    [2,1],[0,32],[0,2],[0,33],[18,1],[6,1],[2,1],[0,18],[2,1],[0,34],\n    [0,48],[4,1],[2,1],[0,49],[0,19],[4,1],[2,1],[0,3],[0,50],[2,1],\n    [0,35],[0,4],[10,1],[4,1],[2,1],[0,64],[0,65],[2,1],[0,20],[2,1],\n    [0,66],[0,36],[12,1],[6,1],[4,1],[2,1],[0,51],[0,67],[0,80],[4,1],\n    [2,1],[0,52],[0,5],[0,81],[6,1],[2,1],[0,21],[2,1],[0,82],[0,37],\n    [4,1],[2,1],[0,68],[0,53],[4,1],[2,1],[0,83],[0,84],[2,1],[0,69],\n    [0,85],\n];\n\nconst ValTab8 = [\n    [6,1],[2,1],[0,0],[2,1],[0,16],[0,1],[2,1],[0,17],[4,1],[2,1],\n    [0,33],[0,18],[14,1],[4,1],[2,1],[0,32],[0,2],[2,1],[0,34],[4,1],\n    [2,1],[0,48],[0,3],[2,1],[0,49],[0,19],[14,1],[8,1],[4,1],[2,1],\n    [0,50],[0,35],[2,1],[0,64],[0,4],[2,1],[0,65],[2,1],[0,20],[0,66],\n    [12,1],[6,1],[2,1],[0,36],[2,1],[0,51],[0,80],[4,1],[2,1],[0,67],\n    [0,52],[0,81],[6,1],[2,1],[0,21],[2,1],[0,5],[0,82],[6,1],[2,1],\n    [0,37],[2,1],[0,68],[0,53],[2,1],[0,83],[2,1],[0,69],[2,1],[0,84],\n    [0,85],\n];\n\nconst ValTab9 = [\n    [8,1],[4,1],[2,1],[0,0],[0,16],[2,1],[0,1],[0,17],[10,1],[4,1],\n    [2,1],[0,32],[0,33],[2,1],[0,18],[2,1],[0,2],[0,34],[12,1],[6,1],\n    [4,1],[2,1],[0,48],[0,3],[0,49],[2,1],[0,19],[2,1],[0,50],[0,35],\n    [12,1],[4,1],[2,1],[0,65],[0,20],[4,1],[2,1],[0,64],[0,51],[2,1],\n    [0,66],[0,36],[10,1],[6,1],[4,1],[2,1],[0,4],[0,80],[0,67],[2,1],\n    [0,52],[0,81],[8,1],[4,1],[2,1],[0,21],[0,82],[2,1],[0,37],[0,68],\n    [6,1],[4,1],[2,1],[0,5],[0,84],[0,83],[2,1],[0,53],[2,1],[0,69],\n    [0,85],\n];\n\nconst ValTab10 = [\n    [2,1],[0,0],[4,1],[2,1],[0,16],[0,1],[10,1],[2,1],[0,17],[4,1],\n    [2,1],[0,32],[0,2],[2,1],[0,33],[0,18],[28,1],[8,1],[4,1],[2,1],\n    [0,34],[0,48],[2,1],[0,49],[0,19],[8,1],[4,1],[2,1],[0,3],[0,50],\n    [2,1],[0,35],[0,64],[4,1],[2,1],[0,65],[0,20],[4,1],[2,1],[0,4],\n    [0,51],[2,1],[0,66],[0,36],[28,1],[10,1],[6,1],[4,1],[2,1],[0,80],\n    [0,5],[0,96],[2,1],[0,97],[0,22],[12,1],[6,1],[4,1],[2,1],[0,67],\n    [0,52],[0,81],[2,1],[0,21],[2,1],[0,82],[0,37],[4,1],[2,1],[0,38],\n    [0,54],[0,113],[20,1],[8,1],[2,1],[0,23],[4,1],[2,1],[0,68],[0,83],\n    [0,6],[6,1],[4,1],[2,1],[0,53],[0,69],[0,98],[2,1],[0,112],[2,1],\n    [0,7],[0,100],[14,1],[4,1],[2,1],[0,114],[0,39],[6,1],[2,1],[0,99],\n    [2,1],[0,84],[0,85],[2,1],[0,70],[0,115],[8,1],[4,1],[2,1],[0,55],\n    [0,101],[2,1],[0,86],[0,116],[6,1],[2,1],[0,71],[2,1],[0,102],[0,117],\n    [4,1],[2,1],[0,87],[0,118],[2,1],[0,103],[0,119],\n];\n\nconst ValTab11 = [\n    [6,1],[2,1],[0,0],[2,1],[0,16],[0,1],[8,1],[2,1],[0,17],[4,1],\n    [2,1],[0,32],[0,2],[0,18],[24,1],[8,1],[2,1],[0,33],[2,1],[0,34],\n    [2,1],[0,48],[0,3],[4,1],[2,1],[0,49],[0,19],[4,1],[2,1],[0,50],\n    [0,35],[4,1],[2,1],[0,64],[0,4],[2,1],[0,65],[0,20],[30,1],[16,1],\n    [10,1],[4,1],[2,1],[0,66],[0,36],[4,1],[2,1],[0,51],[0,67],[0,80],\n    [4,1],[2,1],[0,52],[0,81],[0,97],[6,1],[2,1],[0,22],[2,1],[0,6],\n    [0,38],[2,1],[0,98],[2,1],[0,21],[2,1],[0,5],[0,82],[16,1],[10,1],\n    [6,1],[4,1],[2,1],[0,37],[0,68],[0,96],[2,1],[0,99],[0,54],[4,1],\n    [2,1],[0,112],[0,23],[0,113],[16,1],[6,1],[4,1],[2,1],[0,7],[0,100],\n    [0,114],[2,1],[0,39],[4,1],[2,1],[0,83],[0,53],[2,1],[0,84],[0,69],\n    [10,1],[4,1],[2,1],[0,70],[0,115],[2,1],[0,55],[2,1],[0,101],[0,86],\n    [10,1],[6,1],[4,1],[2,1],[0,85],[0,87],[0,116],[2,1],[0,71],[0,102],\n    [4,1],[2,1],[0,117],[0,118],[2,1],[0,103],[0,119],\n];\n\nconst ValTab12 = [\n    [12,1],[4,1],[2,1],[0,16],[0,1],[2,1],[0,17],[2,1],[0,0],[2,1],\n    [0,32],[0,2],[16,1],[4,1],[2,1],[0,33],[0,18],[4,1],[2,1],[0,34],\n    [0,49],[2,1],[0,19],[2,1],[0,48],[2,1],[0,3],[0,64],[26,1],[8,1],\n    [4,1],[2,1],[0,50],[0,35],[2,1],[0,65],[0,51],[10,1],[4,1],[2,1],\n    [0,20],[0,66],[2,1],[0,36],[2,1],[0,4],[0,80],[4,1],[2,1],[0,67],\n    [0,52],[2,1],[0,81],[0,21],[28,1],[14,1],[8,1],[4,1],[2,1],[0,82],\n    [0,37],[2,1],[0,83],[0,53],[4,1],[2,1],[0,96],[0,22],[0,97],[4,1],\n    [2,1],[0,98],[0,38],[6,1],[4,1],[2,1],[0,5],[0,6],[0,68],[2,1],\n    [0,84],[0,69],[18,1],[10,1],[4,1],[2,1],[0,99],[0,54],[4,1],[2,1],\n    [0,112],[0,7],[0,113],[4,1],[2,1],[0,23],[0,100],[2,1],[0,70],[0,114],\n    [10,1],[6,1],[2,1],[0,39],[2,1],[0,85],[0,115],[2,1],[0,55],[0,86],\n    [8,1],[4,1],[2,1],[0,101],[0,116],[2,1],[0,71],[0,102],[4,1],[2,1],\n    [0,117],[0,87],[2,1],[0,118],[2,1],[0,103],[0,119],\n];\n\nconst ValTab13 = [\n    [2,1],[0,0],[6,1],[2,1],[0,16],[2,1],[0,1],[0,17],[28,1],[8,1],\n    [4,1],[2,1],[0,32],[0,2],[2,1],[0,33],[0,18],[8,1],[4,1],[2,1],\n    [0,34],[0,48],[2,1],[0,3],[0,49],[6,1],[2,1],[0,19],[2,1],[0,50],\n    [0,35],[4,1],[2,1],[0,64],[0,4],[0,65],[70,1],[28,1],[14,1],[6,1],\n    [2,1],[0,20],[2,1],[0,51],[0,66],[4,1],[2,1],[0,36],[0,80],[2,1],\n    [0,67],[0,52],[4,1],[2,1],[0,81],[0,21],[4,1],[2,1],[0,5],[0,82],\n    [2,1],[0,37],[2,1],[0,68],[0,83],[14,1],[8,1],[4,1],[2,1],[0,96],\n    [0,6],[2,1],[0,97],[0,22],[4,1],[2,1],[0,128],[0,8],[0,129],[16,1],\n    [8,1],[4,1],[2,1],[0,53],[0,98],[2,1],[0,38],[0,84],[4,1],[2,1],\n    [0,69],[0,99],[2,1],[0,54],[0,112],[6,1],[4,1],[2,1],[0,7],[0,85],\n    [0,113],[2,1],[0,23],[2,1],[0,39],[0,55],[72,1],[24,1],[12,1],[4,1],\n    [2,1],[0,24],[0,130],[2,1],[0,40],[4,1],[2,1],[0,100],[0,70],[0,114],\n    [8,1],[4,1],[2,1],[0,132],[0,72],[2,1],[0,144],[0,9],[2,1],[0,145],\n    [0,25],[24,1],[14,1],[8,1],[4,1],[2,1],[0,115],[0,101],[2,1],[0,86],\n    [0,116],[4,1],[2,1],[0,71],[0,102],[0,131],[6,1],[2,1],[0,56],[2,1],\n    [0,117],[0,87],[2,1],[0,146],[0,41],[14,1],[8,1],[4,1],[2,1],[0,103],\n    [0,133],[2,1],[0,88],[0,57],[2,1],[0,147],[2,1],[0,73],[0,134],[6,1],\n    [2,1],[0,160],[2,1],[0,104],[0,10],[2,1],[0,161],[0,26],[68,1],[24,1],\n    [12,1],[4,1],[2,1],[0,162],[0,42],[4,1],[2,1],[0,149],[0,89],[2,1],\n    [0,163],[0,58],[8,1],[4,1],[2,1],[0,74],[0,150],[2,1],[0,176],[0,11],\n    [2,1],[0,177],[0,27],[20,1],[8,1],[2,1],[0,178],[4,1],[2,1],[0,118],\n    [0,119],[0,148],[6,1],[4,1],[2,1],[0,135],[0,120],[0,164],[4,1],[2,1],\n    [0,105],[0,165],[0,43],[12,1],[6,1],[4,1],[2,1],[0,90],[0,136],[0,179],\n    [2,1],[0,59],[2,1],[0,121],[0,166],[6,1],[4,1],[2,1],[0,106],[0,180],\n    [0,192],[4,1],[2,1],[0,12],[0,152],[0,193],[60,1],[22,1],[10,1],[6,1],\n    [2,1],[0,28],[2,1],[0,137],[0,181],[2,1],[0,91],[0,194],[4,1],[2,1],\n    [0,44],[0,60],[4,1],[2,1],[0,182],[0,107],[2,1],[0,196],[0,76],[16,1],\n    [8,1],[4,1],[2,1],[0,168],[0,138],[2,1],[0,208],[0,13],[2,1],[0,209],\n    [2,1],[0,75],[2,1],[0,151],[0,167],[12,1],[6,1],[2,1],[0,195],[2,1],\n    [0,122],[0,153],[4,1],[2,1],[0,197],[0,92],[0,183],[4,1],[2,1],[0,29],\n    [0,210],[2,1],[0,45],[2,1],[0,123],[0,211],[52,1],[28,1],[12,1],[4,1],\n    [2,1],[0,61],[0,198],[4,1],[2,1],[0,108],[0,169],[2,1],[0,154],[0,212],\n    [8,1],[4,1],[2,1],[0,184],[0,139],[2,1],[0,77],[0,199],[4,1],[2,1],\n    [0,124],[0,213],[2,1],[0,93],[0,224],[10,1],[4,1],[2,1],[0,225],[0,30],\n    [4,1],[2,1],[0,14],[0,46],[0,226],[8,1],[4,1],[2,1],[0,227],[0,109],\n    [2,1],[0,140],[0,228],[4,1],[2,1],[0,229],[0,186],[0,240],[38,1],[16,1],\n    [4,1],[2,1],[0,241],[0,31],[6,1],[4,1],[2,1],[0,170],[0,155],[0,185],\n    [2,1],[0,62],[2,1],[0,214],[0,200],[12,1],[6,1],[2,1],[0,78],[2,1],\n    [0,215],[0,125],[2,1],[0,171],[2,1],[0,94],[0,201],[6,1],[2,1],[0,15],\n    [2,1],[0,156],[0,110],[2,1],[0,242],[0,47],[32,1],[16,1],[6,1],[4,1],\n    [2,1],[0,216],[0,141],[0,63],[6,1],[2,1],[0,243],[2,1],[0,230],[0,202],\n    [2,1],[0,244],[0,79],[8,1],[4,1],[2,1],[0,187],[0,172],[2,1],[0,231],\n    [0,245],[4,1],[2,1],[0,217],[0,157],[2,1],[0,95],[0,232],[30,1],[12,1],\n    [6,1],[2,1],[0,111],[2,1],[0,246],[0,203],[4,1],[2,1],[0,188],[0,173],\n    [0,218],[8,1],[2,1],[0,247],[4,1],[2,1],[0,126],[0,127],[0,142],[6,1],\n    [4,1],[2,1],[0,158],[0,174],[0,204],[2,1],[0,248],[0,143],[18,1],[8,1],\n    [4,1],[2,1],[0,219],[0,189],[2,1],[0,234],[0,249],[4,1],[2,1],[0,159],\n    [0,235],[2,1],[0,190],[2,1],[0,205],[0,250],[14,1],[4,1],[2,1],[0,221],\n    [0,236],[6,1],[4,1],[2,1],[0,233],[0,175],[0,220],[2,1],[0,206],[0,251],\n    [8,1],[4,1],[2,1],[0,191],[0,222],[2,1],[0,207],[0,238],[4,1],[2,1],\n    [0,223],[0,239],[2,1],[0,255],[2,1],[0,237],[2,1],[0,253],[2,1],[0,252],\n    [0,254],\n];\n\nconst ValTab14 = [[0,0]];\t// dummy\n\nconst ValTab15 = [\n    [16,1],[6,1],[2,1],[0,0],[2,1],[0,16],[0,1],[2,1],[0,17],[4,1],\n    [2,1],[0,32],[0,2],[2,1],[0,33],[0,18],[50,1],[16,1],[6,1],[2,1],\n    [0,34],[2,1],[0,48],[0,49],[6,1],[2,1],[0,19],[2,1],[0,3],[0,64],\n    [2,1],[0,50],[0,35],[14,1],[6,1],[4,1],[2,1],[0,4],[0,20],[0,65],\n    [4,1],[2,1],[0,51],[0,66],[2,1],[0,36],[0,67],[10,1],[6,1],[2,1],\n    [0,52],[2,1],[0,80],[0,5],[2,1],[0,81],[0,21],[4,1],[2,1],[0,82],\n    [0,37],[4,1],[2,1],[0,68],[0,83],[0,97],[90,1],[36,1],[18,1],[10,1],\n    [6,1],[2,1],[0,53],[2,1],[0,96],[0,6],[2,1],[0,22],[0,98],[4,1],\n    [2,1],[0,38],[0,84],[2,1],[0,69],[0,99],[10,1],[6,1],[2,1],[0,54],\n    [2,1],[0,112],[0,7],[2,1],[0,113],[0,85],[4,1],[2,1],[0,23],[0,100],\n    [2,1],[0,114],[0,39],[24,1],[16,1],[8,1],[4,1],[2,1],[0,70],[0,115],\n    [2,1],[0,55],[0,101],[4,1],[2,1],[0,86],[0,128],[2,1],[0,8],[0,116],\n    [4,1],[2,1],[0,129],[0,24],[2,1],[0,130],[0,40],[16,1],[8,1],[4,1],\n    [2,1],[0,71],[0,102],[2,1],[0,131],[0,56],[4,1],[2,1],[0,117],[0,87],\n    [2,1],[0,132],[0,72],[6,1],[4,1],[2,1],[0,144],[0,25],[0,145],[4,1],\n    [2,1],[0,146],[0,118],[2,1],[0,103],[0,41],[92,1],[36,1],[18,1],[10,1],\n    [4,1],[2,1],[0,133],[0,88],[4,1],[2,1],[0,9],[0,119],[0,147],[4,1],\n    [2,1],[0,57],[0,148],[2,1],[0,73],[0,134],[10,1],[6,1],[2,1],[0,104],\n    [2,1],[0,160],[0,10],[2,1],[0,161],[0,26],[4,1],[2,1],[0,162],[0,42],\n    [2,1],[0,149],[0,89],[26,1],[14,1],[6,1],[2,1],[0,163],[2,1],[0,58],\n    [0,135],[4,1],[2,1],[0,120],[0,164],[2,1],[0,74],[0,150],[6,1],[4,1],\n    [2,1],[0,105],[0,176],[0,177],[4,1],[2,1],[0,27],[0,165],[0,178],[14,1],\n    [8,1],[4,1],[2,1],[0,90],[0,43],[2,1],[0,136],[0,151],[2,1],[0,179],\n    [2,1],[0,121],[0,59],[8,1],[4,1],[2,1],[0,106],[0,180],[2,1],[0,75],\n    [0,193],[4,1],[2,1],[0,152],[0,137],[2,1],[0,28],[0,181],[80,1],[34,1],\n    [16,1],[6,1],[4,1],[2,1],[0,91],[0,44],[0,194],[6,1],[4,1],[2,1],\n    [0,11],[0,192],[0,166],[2,1],[0,167],[0,122],[10,1],[4,1],[2,1],[0,195],\n    [0,60],[4,1],[2,1],[0,12],[0,153],[0,182],[4,1],[2,1],[0,107],[0,196],\n    [2,1],[0,76],[0,168],[20,1],[10,1],[4,1],[2,1],[0,138],[0,197],[4,1],\n    [2,1],[0,208],[0,92],[0,209],[4,1],[2,1],[0,183],[0,123],[2,1],[0,29],\n    [2,1],[0,13],[0,45],[12,1],[4,1],[2,1],[0,210],[0,211],[4,1],[2,1],\n    [0,61],[0,198],[2,1],[0,108],[0,169],[6,1],[4,1],[2,1],[0,154],[0,184],\n    [0,212],[4,1],[2,1],[0,139],[0,77],[2,1],[0,199],[0,124],[68,1],[34,1],\n    [18,1],[10,1],[4,1],[2,1],[0,213],[0,93],[4,1],[2,1],[0,224],[0,14],\n    [0,225],[4,1],[2,1],[0,30],[0,226],[2,1],[0,170],[0,46],[8,1],[4,1],\n    [2,1],[0,185],[0,155],[2,1],[0,227],[0,214],[4,1],[2,1],[0,109],[0,62],\n    [2,1],[0,200],[0,140],[16,1],[8,1],[4,1],[2,1],[0,228],[0,78],[2,1],\n    [0,215],[0,125],[4,1],[2,1],[0,229],[0,186],[2,1],[0,171],[0,94],[8,1],\n    [4,1],[2,1],[0,201],[0,156],[2,1],[0,241],[0,31],[6,1],[4,1],[2,1],\n    [0,240],[0,110],[0,242],[2,1],[0,47],[0,230],[38,1],[18,1],[8,1],[4,1],\n    [2,1],[0,216],[0,243],[2,1],[0,63],[0,244],[6,1],[2,1],[0,79],[2,1],\n    [0,141],[0,217],[2,1],[0,187],[0,202],[8,1],[4,1],[2,1],[0,172],[0,231],\n    [2,1],[0,126],[0,245],[8,1],[4,1],[2,1],[0,157],[0,95],[2,1],[0,232],\n    [0,142],[2,1],[0,246],[0,203],[34,1],[18,1],[10,1],[6,1],[4,1],[2,1],\n    [0,15],[0,174],[0,111],[2,1],[0,188],[0,218],[4,1],[2,1],[0,173],[0,247],\n    [2,1],[0,127],[0,233],[8,1],[4,1],[2,1],[0,158],[0,204],[2,1],[0,248],\n    [0,143],[4,1],[2,1],[0,219],[0,189],[2,1],[0,234],[0,249],[16,1],[8,1],\n    [4,1],[2,1],[0,159],[0,220],[2,1],[0,205],[0,235],[4,1],[2,1],[0,190],\n    [0,250],[2,1],[0,175],[0,221],[14,1],[6,1],[4,1],[2,1],[0,236],[0,206],\n    [0,251],[4,1],[2,1],[0,191],[0,237],[2,1],[0,222],[0,252],[6,1],[4,1],\n    [2,1],[0,207],[0,253],[0,238],[4,1],[2,1],[0,223],[0,254],[2,1],[0,239],\n    [0,255],\n];\n\nconst ValTab16 = [\n    [2,1],[0,0],[6,1],[2,1],[0,16],[2,1],[0,1],[0,17],[42,1],[8,1],\n    [4,1],[2,1],[0,32],[0,2],[2,1],[0,33],[0,18],[10,1],[6,1],[2,1],\n    [0,34],[2,1],[0,48],[0,3],[2,1],[0,49],[0,19],[10,1],[4,1],[2,1],\n    [0,50],[0,35],[4,1],[2,1],[0,64],[0,4],[0,65],[6,1],[2,1],[0,20],\n    [2,1],[0,51],[0,66],[4,1],[2,1],[0,36],[0,80],[2,1],[0,67],[0,52],\n    [138,1],[40,1],[16,1],[6,1],[4,1],[2,1],[0,5],[0,21],[0,81],[4,1],\n    [2,1],[0,82],[0,37],[4,1],[2,1],[0,68],[0,53],[0,83],[10,1],[6,1],\n    [4,1],[2,1],[0,96],[0,6],[0,97],[2,1],[0,22],[0,98],[8,1],[4,1],\n    [2,1],[0,38],[0,84],[2,1],[0,69],[0,99],[4,1],[2,1],[0,54],[0,112],\n    [0,113],[40,1],[18,1],[8,1],[2,1],[0,23],[2,1],[0,7],[2,1],[0,85],\n    [0,100],[4,1],[2,1],[0,114],[0,39],[4,1],[2,1],[0,70],[0,101],[0,115],\n    [10,1],[6,1],[2,1],[0,55],[2,1],[0,86],[0,8],[2,1],[0,128],[0,129],\n    [6,1],[2,1],[0,24],[2,1],[0,116],[0,71],[2,1],[0,130],[2,1],[0,40],\n    [0,102],[24,1],[14,1],[8,1],[4,1],[2,1],[0,131],[0,56],[2,1],[0,117],\n    [0,132],[4,1],[2,1],[0,72],[0,144],[0,145],[6,1],[2,1],[0,25],[2,1],\n    [0,9],[0,118],[2,1],[0,146],[0,41],[14,1],[8,1],[4,1],[2,1],[0,133],\n    [0,88],[2,1],[0,147],[0,57],[4,1],[2,1],[0,160],[0,10],[0,26],[8,1],\n    [2,1],[0,162],[2,1],[0,103],[2,1],[0,87],[0,73],[6,1],[2,1],[0,148],\n    [2,1],[0,119],[0,134],[2,1],[0,161],[2,1],[0,104],[0,149],[220,1],[126,1],\n    [50,1],[26,1],[12,1],[6,1],[2,1],[0,42],[2,1],[0,89],[0,58],[2,1],\n    [0,163],[2,1],[0,135],[0,120],[8,1],[4,1],[2,1],[0,164],[0,74],[2,1],\n    [0,150],[0,105],[4,1],[2,1],[0,176],[0,11],[0,177],[10,1],[4,1],[2,1],\n    [0,27],[0,178],[2,1],[0,43],[2,1],[0,165],[0,90],[6,1],[2,1],[0,179],\n    [2,1],[0,166],[0,106],[4,1],[2,1],[0,180],[0,75],[2,1],[0,12],[0,193],\n    [30,1],[14,1],[6,1],[4,1],[2,1],[0,181],[0,194],[0,44],[4,1],[2,1],\n    [0,167],[0,195],[2,1],[0,107],[0,196],[8,1],[2,1],[0,29],[4,1],[2,1],\n    [0,136],[0,151],[0,59],[4,1],[2,1],[0,209],[0,210],[2,1],[0,45],[0,211],\n    [18,1],[6,1],[4,1],[2,1],[0,30],[0,46],[0,226],[6,1],[4,1],[2,1],\n    [0,121],[0,152],[0,192],[2,1],[0,28],[2,1],[0,137],[0,91],[14,1],[6,1],\n    [2,1],[0,60],[2,1],[0,122],[0,182],[4,1],[2,1],[0,76],[0,153],[2,1],\n    [0,168],[0,138],[6,1],[2,1],[0,13],[2,1],[0,197],[0,92],[4,1],[2,1],\n    [0,61],[0,198],[2,1],[0,108],[0,154],[88,1],[86,1],[36,1],[16,1],[8,1],\n    [4,1],[2,1],[0,139],[0,77],[2,1],[0,199],[0,124],[4,1],[2,1],[0,213],\n    [0,93],[2,1],[0,224],[0,14],[8,1],[2,1],[0,227],[4,1],[2,1],[0,208],\n    [0,183],[0,123],[6,1],[4,1],[2,1],[0,169],[0,184],[0,212],[2,1],[0,225],\n    [2,1],[0,170],[0,185],[24,1],[10,1],[6,1],[4,1],[2,1],[0,155],[0,214],\n    [0,109],[2,1],[0,62],[0,200],[6,1],[4,1],[2,1],[0,140],[0,228],[0,78],\n    [4,1],[2,1],[0,215],[0,229],[2,1],[0,186],[0,171],[12,1],[4,1],[2,1],\n    [0,156],[0,230],[4,1],[2,1],[0,110],[0,216],[2,1],[0,141],[0,187],[8,1],\n    [4,1],[2,1],[0,231],[0,157],[2,1],[0,232],[0,142],[4,1],[2,1],[0,203],\n    [0,188],[0,158],[0,241],[2,1],[0,31],[2,1],[0,15],[0,47],[66,1],[56,1],\n    [2,1],[0,242],[52,1],[50,1],[20,1],[8,1],[2,1],[0,189],[2,1],[0,94],\n    [2,1],[0,125],[0,201],[6,1],[2,1],[0,202],[2,1],[0,172],[0,126],[4,1],\n    [2,1],[0,218],[0,173],[0,204],[10,1],[6,1],[2,1],[0,174],[2,1],[0,219],\n    [0,220],[2,1],[0,205],[0,190],[6,1],[4,1],[2,1],[0,235],[0,237],[0,238],\n    [6,1],[4,1],[2,1],[0,217],[0,234],[0,233],[2,1],[0,222],[4,1],[2,1],\n    [0,221],[0,236],[0,206],[0,63],[0,240],[4,1],[2,1],[0,243],[0,244],[2,1],\n    [0,79],[2,1],[0,245],[0,95],[10,1],[2,1],[0,255],[4,1],[2,1],[0,246],\n    [0,111],[2,1],[0,247],[0,127],[12,1],[6,1],[2,1],[0,143],[2,1],[0,248],\n    [0,249],[4,1],[2,1],[0,159],[0,250],[0,175],[8,1],[4,1],[2,1],[0,251],\n    [0,191],[2,1],[0,252],[0,207],[4,1],[2,1],[0,253],[0,223],[2,1],[0,254],\n    [0,239],\n];\n\nconst ValTab24 = [\n    [60,1],[8,1],[4,1],[2,1],[0,0],[0,16],[2,1],[0,1],[0,17],[14,1],\n    [6,1],[4,1],[2,1],[0,32],[0,2],[0,33],[2,1],[0,18],[2,1],[0,34],\n    [2,1],[0,48],[0,3],[14,1],[4,1],[2,1],[0,49],[0,19],[4,1],[2,1],\n    [0,50],[0,35],[4,1],[2,1],[0,64],[0,4],[0,65],[8,1],[4,1],[2,1],\n    [0,20],[0,51],[2,1],[0,66],[0,36],[6,1],[4,1],[2,1],[0,67],[0,52],\n    [0,81],[6,1],[4,1],[2,1],[0,80],[0,5],[0,21],[2,1],[0,82],[0,37],\n    [250,1],[98,1],[34,1],[18,1],[10,1],[4,1],[2,1],[0,68],[0,83],[2,1],\n    [0,53],[2,1],[0,96],[0,6],[4,1],[2,1],[0,97],[0,22],[2,1],[0,98],\n    [0,38],[8,1],[4,1],[2,1],[0,84],[0,69],[2,1],[0,99],[0,54],[4,1],\n    [2,1],[0,113],[0,85],[2,1],[0,100],[0,70],[32,1],[14,1],[6,1],[2,1],\n    [0,114],[2,1],[0,39],[0,55],[2,1],[0,115],[4,1],[2,1],[0,112],[0,7],\n    [0,23],[10,1],[4,1],[2,1],[0,101],[0,86],[4,1],[2,1],[0,128],[0,8],\n    [0,129],[4,1],[2,1],[0,116],[0,71],[2,1],[0,24],[0,130],[16,1],[8,1],\n    [4,1],[2,1],[0,40],[0,102],[2,1],[0,131],[0,56],[4,1],[2,1],[0,117],\n    [0,87],[2,1],[0,132],[0,72],[8,1],[4,1],[2,1],[0,145],[0,25],[2,1],\n    [0,146],[0,118],[4,1],[2,1],[0,103],[0,41],[2,1],[0,133],[0,88],[92,1],\n    [34,1],[16,1],[8,1],[4,1],[2,1],[0,147],[0,57],[2,1],[0,148],[0,73],\n    [4,1],[2,1],[0,119],[0,134],[2,1],[0,104],[0,161],[8,1],[4,1],[2,1],\n    [0,162],[0,42],[2,1],[0,149],[0,89],[4,1],[2,1],[0,163],[0,58],[2,1],\n    [0,135],[2,1],[0,120],[0,74],[22,1],[12,1],[4,1],[2,1],[0,164],[0,150],\n    [4,1],[2,1],[0,105],[0,177],[2,1],[0,27],[0,165],[6,1],[2,1],[0,178],\n    [2,1],[0,90],[0,43],[2,1],[0,136],[0,179],[16,1],[10,1],[6,1],[2,1],\n    [0,144],[2,1],[0,9],[0,160],[2,1],[0,151],[0,121],[4,1],[2,1],[0,166],\n    [0,106],[0,180],[12,1],[6,1],[2,1],[0,26],[2,1],[0,10],[0,176],[2,1],\n    [0,59],[2,1],[0,11],[0,192],[4,1],[2,1],[0,75],[0,193],[2,1],[0,152],\n    [0,137],[67,1],[34,1],[16,1],[8,1],[4,1],[2,1],[0,28],[0,181],[2,1],\n    [0,91],[0,194],[4,1],[2,1],[0,44],[0,167],[2,1],[0,122],[0,195],[10,1],\n    [6,1],[2,1],[0,60],[2,1],[0,12],[0,208],[2,1],[0,182],[0,107],[4,1],\n    [2,1],[0,196],[0,76],[2,1],[0,153],[0,168],[16,1],[8,1],[4,1],[2,1],\n    [0,138],[0,197],[2,1],[0,92],[0,209],[4,1],[2,1],[0,183],[0,123],[2,1],\n    [0,29],[0,210],[9,1],[4,1],[2,1],[0,45],[0,211],[2,1],[0,61],[0,198],\n    [85,250],[4,1],[2,1],[0,108],[0,169],[2,1],[0,154],[0,212],[32,1],[16,1],\n    [8,1],[4,1],[2,1],[0,184],[0,139],[2,1],[0,77],[0,199],[4,1],[2,1],\n    [0,124],[0,213],[2,1],[0,93],[0,225],[8,1],[4,1],[2,1],[0,30],[0,226],\n    [2,1],[0,170],[0,185],[4,1],[2,1],[0,155],[0,227],[2,1],[0,214],[0,109],\n    [20,1],[10,1],[6,1],[2,1],[0,62],[2,1],[0,46],[0,78],[2,1],[0,200],\n    [0,140],[4,1],[2,1],[0,228],[0,215],[4,1],[2,1],[0,125],[0,171],[0,229],\n    [10,1],[4,1],[2,1],[0,186],[0,94],[2,1],[0,201],[2,1],[0,156],[0,110],\n    [8,1],[2,1],[0,230],[2,1],[0,13],[2,1],[0,224],[0,14],[4,1],[2,1],\n    [0,216],[0,141],[2,1],[0,187],[0,202],[74,1],[2,1],[0,255],[64,1],[58,1],\n    [32,1],[16,1],[8,1],[4,1],[2,1],[0,172],[0,231],[2,1],[0,126],[0,217],\n    [4,1],[2,1],[0,157],[0,232],[2,1],[0,142],[0,203],[8,1],[4,1],[2,1],\n    [0,188],[0,218],[2,1],[0,173],[0,233],[4,1],[2,1],[0,158],[0,204],[2,1],\n    [0,219],[0,189],[16,1],[8,1],[4,1],[2,1],[0,234],[0,174],[2,1],[0,220],\n    [0,205],[4,1],[2,1],[0,235],[0,190],[2,1],[0,221],[0,236],[8,1],[4,1],\n    [2,1],[0,206],[0,237],[2,1],[0,222],[0,238],[0,15],[4,1],[2,1],[0,240],\n    [0,31],[0,241],[4,1],[2,1],[0,242],[0,47],[2,1],[0,243],[0,63],[18,1],\n    [8,1],[4,1],[2,1],[0,244],[0,79],[2,1],[0,245],[0,95],[4,1],[2,1],\n    [0,246],[0,111],[2,1],[0,247],[2,1],[0,127],[0,143],[10,1],[4,1],[2,1],\n    [0,248],[0,249],[4,1],[2,1],[0,159],[0,175],[0,250],[8,1],[4,1],[2,1],\n    [0,251],[0,191],[2,1],[0,252],[0,207],[4,1],[2,1],[0,253],[0,223],[2,1],\n    [0,254],[0,239],\n];\n\nconst ValTab32 = [\n    [2,1],[0,0],[8,1],[4,1],[2,1],[0,8],[0,4],[2,1],[0,1],[0,2],\n    [8,1],[4,1],[2,1],[0,12],[0,10],[2,1],[0,3],[0,6],[6,1],[2,1],\n    [0,9],[2,1],[0,5],[0,7],[4,1],[2,1],[0,14],[0,13],[2,1],[0,15],\n    [0,11],\n];\n\nconst ValTab33 = [\n    [16,1],[8,1],[4,1],[2,1],[0,0],[0,1],[2,1],[0,2],[0,3],[4,1],\n    [2,1],[0,4],[0,5],[2,1],[0,6],[0,7],[8,1],[4,1],[2,1],[0,8],\n    [0,9],[2,1],[0,10],[0,11],[4,1],[2,1],[0,12],[0,13],[2,1],[0,14],\n    [0,15],\n];\n\nmodule.exports = Huffman;\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/huffcodetab.js","/**\n * Size of the internal buffer to store the reserved bits.\n * Must be a power of 2. And x8, as each bit is stored as a single\n * entry.\n */\nconst BUFSIZE = 4096 * 8;\n\n/**\n * Mask that can be used to quickly implement the\n * modulus operation on BUFSIZE.\n */\nconst BUFSIZE_MASK = BUFSIZE - 1;\n\nmodule.exports = class BitReserve {\n    constructor() {\n        this.offset = this.totbit = this.buf_byte_idx = 0;\n        // private final int[] \t\t\tbuf = new int[BUFSIZE];\n        this.buf = (new Int32Array(BUFSIZE)).fill(0)\n    }\n\n    hputbuf(val) {\n        let ofs = this.offset;\n\n        this.buf[ofs++] = val & 0x80;\n        this.buf[ofs++] = val & 0x40;\n        this.buf[ofs++] = val & 0x20;\n        this.buf[ofs++] = val & 0x10;\n        this.buf[ofs++] = val & 0x08;\n        this.buf[ofs++] = val & 0x04;\n        this.buf[ofs++] = val & 0x02;\n        this.buf[ofs++] = val & 0x01;\n\n        if (ofs === BUFSIZE)\n            this.offset = 0;\n        else\n            this.offset = ofs;\n    }\n\n    hsstell() {\n        return this.totbit;\n    }\n\n    hgetbits(N) {\n        this.totbit += N;\n\n        let val = 0;\n        let pos = this.buf_byte_idx;\n\n        if (pos + N < BUFSIZE) {\n            while (N-- > 0) {\n                val <<= 1;\n                val |= ((this.buf[pos++] !== 0) ? 1 : 0);\n            }\n        }\n        else {\n            while (N-- > 0) {\n                val <<= 1;\n                val |= ((this.buf[pos] !== 0) ? 1 : 0);\n                pos = (pos + 1) & BUFSIZE_MASK;\n            }\n        }\n\n        this.buf_byte_idx = pos;\n        return val;\n    }\n\n    rewindNbytes(N) {\n        let bits = (N << 3);\n\n        this.totbit -= bits;\n        this.buf_byte_idx -= bits;\n\n        if (this.buf_byte_idx < 0)\n            this.buf_byte_idx += BUFSIZE;\n    }\n\n    hget1bit() {\n        this.totbit++;\n        let val = this.buf[this.buf_byte_idx];\n        this.buf_byte_idx = (this.buf_byte_idx + 1) & BUFSIZE_MASK;\n        return val;\n    }\n\n    rewindNbits(N) {\n        this.totbit -= N;\n        this.buf_byte_idx -= N;\n        if (this.buf_byte_idx < 0)\n            this.buf_byte_idx += BUFSIZE;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/bitreserve.js","const Short = {\n    MAX_VALUE: Math.pow(2, 15) - 1,\n    MIN_VALUE: -Math.pow(2, 15)\n};\n\nclass SampleBuffer {\n    constructor(frequency, channels) {\n        this.buffer = [];\n        this.bufferp = [];\n\n        this.channels = channels;\n        this.frequency = frequency;\n\n        for (let i = 0; i < channels; ++i)\n            this.bufferp[i] = i;\n    }\n\n    appendSamples(channel, f) {\n        let pos = this.bufferp[channel], fs;\n\n        for (let i = 0; i < 32;) {\n            fs = f[i++];\n            fs = (fs > Short.MAX_VALUE ? Short.MAX_VALUE : (fs < Short.MIN_VALUE ? Short.MIN_VALUE : fs));\n            this.buffer[pos] = fs ^ 0;\n            pos += this.channels;\n        }\n\n        this.bufferp[channel] = pos;\n    }\n\n    clear() {\n        for (let i = 0; i < this.channels; ++i)\n            this.bufferp[i] = i;\n    }\n\n    asBuffer() {\n        const outBuf = new Buffer(this.buffer.length * 2);\n\n        let outPos = 0;\n        for (let i = 0; i < this.buffer.length; i++) {\n            const s = Math.max(Math.min(Math.round(this.buffer[i]), Short.MAX_VALUE), Short.MIN_VALUE);\n            outBuf.writeInt16LE(s, outPos);\n            outPos += 2;\n        }\n\n        return outBuf;\n    }\n}\n\nclass SynthesisFilter {\n    constructor(channelnumber, factor, eq0 = null) {\n        // private float[] _tmpOut = new float[32];\n        this._tmpOut = new Float32Array(32);\n\n        this.actual_v = null;\n        this.actual_write_pos = 0;\n\n        // private float[] v1 = new float[512];\n        this.v1 = (new Float32Array(512)).fill(0);\n        // private float[] v2 = new float[512];\n        this.v2 = (new Float32Array(512)).fill(0);\n\n        // private float[] samples = new float[32]\n        this.samples = (new Float32Array(32)).fill(0);\n\n        this.channel        = channelnumber;\n        this.scalefactor    = factor;\n\n        this.setEQ(eq0);\n        this.reset();\n    }\n\n    setEQ(eq) {\n        this.eq = eq || (new Float32Array(32)).fill(1);\n    }\n\n    reset() {\n        this.v1.fill(0);\n        this.v2.fill(0);\n        this.samples.fill(0);\n\n        this.actual_v = this.v1;\n        this.actual_write_pos = 15;\n    }\n\n    input_samples(s) {\n        for (let i = 31; i >= 0; i--) {\n            this.samples[i] = s[i] * this.eq[i];\n        }\n    }\n\n    calculate_pcm_samples(buffer) {\n        this.compute_new_v();\n        this.compute_pcm_samples(buffer);\n\n        this.actual_write_pos = (this.actual_write_pos + 1) & 0xf;\n        this.actual_v = (this.actual_v === this.v1) ? this.v2 : this.v1;\n\n        for (let p = 0; p < 32; p++)\n            this.samples[p] = 0.0;\n    }\n\n    compute_new_v() {\n        let new_v0, new_v1, new_v2, new_v3, new_v4, new_v5, new_v6, new_v7, new_v8, new_v9;\n        let new_v10, new_v11, new_v12, new_v13, new_v14, new_v15, new_v16, new_v17, new_v18, new_v19;\n        let new_v20, new_v21, new_v22, new_v23, new_v24, new_v25, new_v26, new_v27, new_v28, new_v29;\n        let new_v30, new_v31;\n\n        new_v0  = new_v1  = new_v2  = new_v3  = new_v4  = new_v5  = new_v6  = new_v7  = new_v8  = new_v9 =\n        new_v10 = new_v11 = new_v12 = new_v13 = new_v14 = new_v15 = new_v16 = new_v17 = new_v18 = new_v19 =\n        new_v20 = new_v21 = new_v22 = new_v23 = new_v24 = new_v25 = new_v26 = new_v27 = new_v28 = new_v29 =\n        new_v30 = new_v31 = 0.0;\n\n        const s = this.samples;\n\n        let s0 = s[0];\n        let s1 = s[1];\n        let s2 = s[2];\n        let s3 = s[3];\n        let s4 = s[4];\n        let s5 = s[5];\n        let s6 = s[6];\n        let s7 = s[7];\n        let s8 = s[8];\n        let s9 = s[9];\n        let s10 = s[10];\n        let s11 = s[11];\n        let s12 = s[12];\n        let s13 = s[13];\n        let s14 = s[14];\n        let s15 = s[15];\n        let s16 = s[16];\n        let s17 = s[17];\n        let s18 = s[18];\n        let s19 = s[19];\n        let s20 = s[20];\n        let s21 = s[21];\n        let s22 = s[22];\n        let s23 = s[23];\n        let s24 = s[24];\n        let s25 = s[25];\n        let s26 = s[26];\n        let s27 = s[27];\n        let s28 = s[28];\n        let s29 = s[29];\n        let s30 = s[30];\n        let s31 = s[31];\n\n        let p0 = s0 + s31;\n        let p1 = s1 + s30;\n        let p2 = s2 + s29;\n        let p3 = s3 + s28;\n        let p4 = s4 + s27;\n        let p5 = s5 + s26;\n        let p6 = s6 + s25;\n        let p7 = s7 + s24;\n        let p8 = s8 + s23;\n        let p9 = s9 + s22;\n        let p10 = s10 + s21;\n        let p11 = s11 + s20;\n        let p12 = s12 + s19;\n        let p13 = s13 + s18;\n        let p14 = s14 + s17;\n        let p15 = s15 + s16;\n\n        let pp0 = p0 + p15;\n        let pp1 = p1 + p14;\n        let pp2 = p2 + p13;\n        let pp3 = p3 + p12;\n        let pp4 = p4 + p11;\n        let pp5 = p5 + p10;\n        let pp6 = p6 + p9;\n        let pp7 = p7 + p8;\n        let pp8 = (p0 - p15) * cos1_32;\n        let pp9 = (p1 - p14) * cos3_32;\n        let pp10 = (p2 - p13) * cos5_32;\n        let pp11 = (p3 - p12) * cos7_32;\n        let pp12 = (p4 - p11) * cos9_32;\n        let pp13 = (p5 - p10) * cos11_32;\n        let pp14 = (p6 - p9) * cos13_32;\n        let pp15 = (p7 - p8) * cos15_32;\n\n        p0 = pp0 + pp7;\n        p1 = pp1 + pp6;\n        p2 = pp2 + pp5;\n        p3 = pp3 + pp4;\n        p4 = (pp0 - pp7) * cos1_16;\n        p5 = (pp1 - pp6) * cos3_16;\n        p6 = (pp2 - pp5) * cos5_16;\n        p7 = (pp3 - pp4) * cos7_16;\n        p8 = pp8 + pp15;\n        p9 = pp9 + pp14;\n        p10 = pp10 + pp13;\n        p11 = pp11 + pp12;\n        p12 = (pp8 - pp15) * cos1_16;\n        p13 = (pp9 - pp14) * cos3_16;\n        p14 = (pp10 - pp13) * cos5_16;\n        p15 = (pp11 - pp12) * cos7_16;\n\n        pp0 = p0 + p3;\n        pp1 = p1 + p2;\n        pp2 = (p0 - p3) * cos1_8;\n        pp3 = (p1 - p2) * cos3_8;\n        pp4 = p4 + p7;\n        pp5 = p5 + p6;\n        pp6 = (p4 - p7) * cos1_8;\n        pp7 = (p5 - p6) * cos3_8;\n        pp8 = p8 + p11;\n        pp9 = p9 + p10;\n        pp10 = (p8 - p11) * cos1_8;\n        pp11 = (p9 - p10) * cos3_8;\n        pp12 = p12 + p15;\n        pp13 = p13 + p14;\n        pp14 = (p12 - p15) * cos1_8;\n        pp15 = (p13 - p14) * cos3_8;\n\n        p0 = pp0 + pp1;\n        p1 = (pp0 - pp1) * cos1_4;\n        p2 = pp2 + pp3;\n        p3 = (pp2 - pp3) * cos1_4;\n        p4 = pp4 + pp5;\n        p5 = (pp4 - pp5) * cos1_4;\n        p6 = pp6 + pp7;\n        p7 = (pp6 - pp7) * cos1_4;\n        p8 = pp8 + pp9;\n        p9 = (pp8 - pp9) * cos1_4;\n        p10 = pp10 + pp11;\n        p11 = (pp10 - pp11) * cos1_4;\n        p12 = pp12 + pp13;\n        p13 = (pp12 - pp13) * cos1_4;\n        p14 = pp14 + pp15;\n        p15 = (pp14 - pp15) * cos1_4;\n\n        // this is pretty insane coding\n        let tmp1;\n        new_v19/*36-17*/ = -(new_v4 = (new_v12 = p7) + p5) - p6;\n        new_v27/*44-17*/ = -p6 - p7 - p4;\n        new_v6 = (new_v10 = (new_v14 = p15) + p11) + p13;\n        new_v17/*34-17*/ = -(new_v2 = p15 + p13 + p9) - p14;\n        new_v21/*38-17*/ = (tmp1 = -p14 - p15 - p10 - p11) - p13;\n        new_v29/*46-17*/ = -p14 - p15 - p12 - p8;\n        new_v25/*42-17*/ = tmp1 - p12;\n        new_v31/*48-17*/ = -p0;\n        new_v0 = p1;\n        new_v23/*40-17*/ = -(new_v8 = p3) - p2;\n\n        p0 = (s0 - s31) * cos1_64;\n        p1 = (s1 - s30) * cos3_64;\n        p2 = (s2 - s29) * cos5_64;\n        p3 = (s3 - s28) * cos7_64;\n        p4 = (s4 - s27) * cos9_64;\n        p5 = (s5 - s26) * cos11_64;\n        p6 = (s6 - s25) * cos13_64;\n        p7 = (s7 - s24) * cos15_64;\n        p8 = (s8 - s23) * cos17_64;\n        p9 = (s9 - s22) * cos19_64;\n        p10 = (s10 - s21) * cos21_64;\n        p11 = (s11 - s20) * cos23_64;\n        p12 = (s12 - s19) * cos25_64;\n        p13 = (s13 - s18) * cos27_64;\n        p14 = (s14 - s17) * cos29_64;\n        p15 = (s15 - s16) * cos31_64;\n\n        pp0 = p0 + p15;\n        pp1 = p1 + p14;\n        pp2 = p2 + p13;\n        pp3 = p3 + p12;\n        pp4 = p4 + p11;\n        pp5 = p5 + p10;\n        pp6 = p6 + p9;\n        pp7 = p7 + p8;\n        pp8 = (p0 - p15) * cos1_32;\n        pp9 = (p1 - p14) * cos3_32;\n        pp10 = (p2 - p13) * cos5_32;\n        pp11 = (p3 - p12) * cos7_32;\n        pp12 = (p4 - p11) * cos9_32;\n        pp13 = (p5 - p10) * cos11_32;\n        pp14 = (p6 - p9) * cos13_32;\n        pp15 = (p7 - p8) * cos15_32;\n\n        p0 = pp0 + pp7;\n        p1 = pp1 + pp6;\n        p2 = pp2 + pp5;\n        p3 = pp3 + pp4;\n        p4 = (pp0 - pp7) * cos1_16;\n        p5 = (pp1 - pp6) * cos3_16;\n        p6 = (pp2 - pp5) * cos5_16;\n        p7 = (pp3 - pp4) * cos7_16;\n        p8 = pp8 + pp15;\n        p9 = pp9 + pp14;\n        p10 = pp10 + pp13;\n        p11 = pp11 + pp12;\n        p12 = (pp8 - pp15) * cos1_16;\n        p13 = (pp9 - pp14) * cos3_16;\n        p14 = (pp10 - pp13) * cos5_16;\n        p15 = (pp11 - pp12) * cos7_16;\n\n        pp0 = p0 + p3;\n        pp1 = p1 + p2;\n        pp2 = (p0 - p3) * cos1_8;\n        pp3 = (p1 - p2) * cos3_8;\n        pp4 = p4 + p7;\n        pp5 = p5 + p6;\n        pp6 = (p4 - p7) * cos1_8;\n        pp7 = (p5 - p6) * cos3_8;\n        pp8 = p8 + p11;\n        pp9 = p9 + p10;\n        pp10 = (p8 - p11) * cos1_8;\n        pp11 = (p9 - p10) * cos3_8;\n        pp12 = p12 + p15;\n        pp13 = p13 + p14;\n        pp14 = (p12 - p15) * cos1_8;\n        pp15 = (p13 - p14) * cos3_8;\n\n        p0 = pp0 + pp1;\n        p1 = (pp0 - pp1) * cos1_4;\n        p2 = pp2 + pp3;\n        p3 = (pp2 - pp3) * cos1_4;\n        p4 = pp4 + pp5;\n        p5 = (pp4 - pp5) * cos1_4;\n        p6 = pp6 + pp7;\n        p7 = (pp6 - pp7) * cos1_4;\n        p8 = pp8 + pp9;\n        p9 = (pp8 - pp9) * cos1_4;\n        p10 = pp10 + pp11;\n        p11 = (pp10 - pp11) * cos1_4;\n        p12 = pp12 + pp13;\n        p13 = (pp12 - pp13) * cos1_4;\n        p14 = pp14 + pp15;\n        p15 = (pp14 - pp15) * cos1_4;\n\n        // manually doing something that a compiler should handle sucks\n        // coding like this is hard to read\n        let tmp2;\n        new_v5 = (new_v11 = (new_v13 = (new_v15 = p15) + p7) + p11)\n            + p5 + p13;\n        new_v7 = (new_v9 = p15 + p11 + p3) + p13;\n        new_v16/*33-17*/ = -(new_v1 = (tmp1 = p13 + p15 + p9) + p1) - p14;\n        new_v18/*35-17*/ = -(new_v3 = tmp1 + p5 + p7) - p6 - p14;\n\n        new_v22/*39-17*/ = (tmp1 = -p10 - p11 - p14 - p15)\n            - p13 - p2 - p3;\n        new_v20/*37-17*/ = tmp1 - p13 - p5 - p6 - p7;\n        new_v24/*41-17*/ = tmp1 - p12 - p2 - p3;\n        new_v26/*43-17*/ = tmp1 - p12 - (tmp2 = p4 + p6 + p7);\n        new_v30/*47-17*/ = (tmp1 = -p8 - p12 - p14 - p15) - p0;\n        new_v28/*45-17*/ = tmp1 - tmp2;\n\n        // insert V[0-15] (== new_v[0-15]) into actual v:\n        // float[] x2 = actual_v + actual_write_pos;\n        let dest = this.actual_v;\n        let pos  = this.actual_write_pos;\n\n        dest[0 + pos] = new_v0;\n        dest[16 + pos] = new_v1;\n        dest[32 + pos] = new_v2;\n        dest[48 + pos] = new_v3;\n        dest[64 + pos] = new_v4;\n        dest[80 + pos] = new_v5;\n        dest[96 + pos] = new_v6;\n        dest[112 + pos] = new_v7;\n        dest[128 + pos] = new_v8;\n        dest[144 + pos] = new_v9;\n        dest[160 + pos] = new_v10;\n        dest[176 + pos] = new_v11;\n        dest[192 + pos] = new_v12;\n        dest[208 + pos] = new_v13;\n        dest[224 + pos] = new_v14;\n        dest[240 + pos] = new_v15;\n\n        // V[16] is always 0.0:\n        dest[256 + pos] = 0.0;\n\n        // insert V[17-31] (== -new_v[15-1]) into actual v:\n        dest[272 + pos] = -new_v15;\n        dest[288 + pos] = -new_v14;\n        dest[304 + pos] = -new_v13;\n        dest[320 + pos] = -new_v12;\n        dest[336 + pos] = -new_v11;\n        dest[352 + pos] = -new_v10;\n        dest[368 + pos] = -new_v9;\n        dest[384 + pos] = -new_v8;\n        dest[400 + pos] = -new_v7;\n        dest[416 + pos] = -new_v6;\n        dest[432 + pos] = -new_v5;\n        dest[448 + pos] = -new_v4;\n        dest[464 + pos] = -new_v3;\n        dest[480 + pos] = -new_v2;\n        dest[496 + pos] = -new_v1;\n\n        // insert V[32] (== -new_v[0]) into other v:\n        dest = (this.actual_v === this.v1) ? this.v2 : this.v1;\n\n        dest[0 + pos] = -new_v0;\n        // insert V[33-48] (== new_v[16-31]) into other v:\n        dest[16 + pos] = new_v16;\n        dest[32 + pos] = new_v17;\n        dest[48 + pos] = new_v18;\n        dest[64 + pos] = new_v19;\n        dest[80 + pos] = new_v20;\n        dest[96 + pos] = new_v21;\n        dest[112 + pos] = new_v22;\n        dest[128 + pos] = new_v23;\n        dest[144 + pos] = new_v24;\n        dest[160 + pos] = new_v25;\n        dest[176 + pos] = new_v26;\n        dest[192 + pos] = new_v27;\n        dest[208 + pos] = new_v28;\n        dest[224 + pos] = new_v29;\n        dest[240 + pos] = new_v30;\n        dest[256 + pos] = new_v31;\n\n        // insert V[49-63] (== new_v[30-16]) into other v:\n        dest[272 + pos] = new_v30;\n        dest[288 + pos] = new_v29;\n        dest[304 + pos] = new_v28;\n        dest[320 + pos] = new_v27;\n        dest[336 + pos] = new_v26;\n        dest[352 + pos] = new_v25;\n        dest[368 + pos] = new_v24;\n        dest[384 + pos] = new_v23;\n        dest[400 + pos] = new_v22;\n        dest[416 + pos] = new_v21;\n        dest[432 + pos] = new_v20;\n        dest[448 + pos] = new_v19;\n        dest[464 + pos] = new_v18;\n        dest[480 + pos] = new_v17;\n        dest[496 + pos] = new_v16;\n    }\n\n    compute_pcm_samples0(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            let pcm_sample;\n            const dp = d16[i];\n            pcm_sample = (((vp[dvp] * dp[0]) +\n                (vp[15 + dvp] * dp[1]) +\n                (vp[14 + dvp] * dp[2]) +\n                (vp[13 + dvp] * dp[3]) +\n                (vp[12 + dvp] * dp[4]) +\n                (vp[11 + dvp] * dp[5]) +\n                (vp[10 + dvp] * dp[6]) +\n                (vp[9 + dvp] * dp[7]) +\n                (vp[8 + dvp] * dp[8]) +\n                (vp[7 + dvp] * dp[9]) +\n                (vp[6 + dvp] * dp[10]) +\n                (vp[5 + dvp] * dp[11]) +\n                (vp[4 + dvp] * dp[12]) +\n                (vp[3 + dvp] * dp[13]) +\n                (vp[2 + dvp] * dp[14]) +\n                (vp[1 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples1(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[1 + dvp] * dp[0]) +\n                (vp[0 + dvp] * dp[1]) +\n                (vp[15 + dvp] * dp[2]) +\n                (vp[14 + dvp] * dp[3]) +\n                (vp[13 + dvp] * dp[4]) +\n                (vp[12 + dvp] * dp[5]) +\n                (vp[11 + dvp] * dp[6]) +\n                (vp[10 + dvp] * dp[7]) +\n                (vp[9 + dvp] * dp[8]) +\n                (vp[8 + dvp] * dp[9]) +\n                (vp[7 + dvp] * dp[10]) +\n                (vp[6 + dvp] * dp[11]) +\n                (vp[5 + dvp] * dp[12]) +\n                (vp[4 + dvp] * dp[13]) +\n                (vp[3 + dvp] * dp[14]) +\n                (vp[2 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples2(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[2 + dvp] * dp[0]) +\n                (vp[1 + dvp] * dp[1]) +\n                (vp[0 + dvp] * dp[2]) +\n                (vp[15 + dvp] * dp[3]) +\n                (vp[14 + dvp] * dp[4]) +\n                (vp[13 + dvp] * dp[5]) +\n                (vp[12 + dvp] * dp[6]) +\n                (vp[11 + dvp] * dp[7]) +\n                (vp[10 + dvp] * dp[8]) +\n                (vp[9 + dvp] * dp[9]) +\n                (vp[8 + dvp] * dp[10]) +\n                (vp[7 + dvp] * dp[11]) +\n                (vp[6 + dvp] * dp[12]) +\n                (vp[5 + dvp] * dp[13]) +\n                (vp[4 + dvp] * dp[14]) +\n                (vp[3 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples3(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[3 + dvp] * dp[0]) +\n                (vp[2 + dvp] * dp[1]) +\n                (vp[1 + dvp] * dp[2]) +\n                (vp[0 + dvp] * dp[3]) +\n                (vp[15 + dvp] * dp[4]) +\n                (vp[14 + dvp] * dp[5]) +\n                (vp[13 + dvp] * dp[6]) +\n                (vp[12 + dvp] * dp[7]) +\n                (vp[11 + dvp] * dp[8]) +\n                (vp[10 + dvp] * dp[9]) +\n                (vp[9 + dvp] * dp[10]) +\n                (vp[8 + dvp] * dp[11]) +\n                (vp[7 + dvp] * dp[12]) +\n                (vp[6 + dvp] * dp[13]) +\n                (vp[5 + dvp] * dp[14]) +\n                (vp[4 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples4(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[4 + dvp] * dp[0]) +\n                (vp[3 + dvp] * dp[1]) +\n                (vp[2 + dvp] * dp[2]) +\n                (vp[1 + dvp] * dp[3]) +\n                (vp[0 + dvp] * dp[4]) +\n                (vp[15 + dvp] * dp[5]) +\n                (vp[14 + dvp] * dp[6]) +\n                (vp[13 + dvp] * dp[7]) +\n                (vp[12 + dvp] * dp[8]) +\n                (vp[11 + dvp] * dp[9]) +\n                (vp[10 + dvp] * dp[10]) +\n                (vp[9 + dvp] * dp[11]) +\n                (vp[8 + dvp] * dp[12]) +\n                (vp[7 + dvp] * dp[13]) +\n                (vp[6 + dvp] * dp[14]) +\n                (vp[5 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples5(buffer) {\n        const vp = this.actual_v;\n\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[5 + dvp] * dp[0]) +\n                (vp[4 + dvp] * dp[1]) +\n                (vp[3 + dvp] * dp[2]) +\n                (vp[2 + dvp] * dp[3]) +\n                (vp[1 + dvp] * dp[4]) +\n                (vp[0 + dvp] * dp[5]) +\n                (vp[15 + dvp] * dp[6]) +\n                (vp[14 + dvp] * dp[7]) +\n                (vp[13 + dvp] * dp[8]) +\n                (vp[12 + dvp] * dp[9]) +\n                (vp[11 + dvp] * dp[10]) +\n                (vp[10 + dvp] * dp[11]) +\n                (vp[9 + dvp] * dp[12]) +\n                (vp[8 + dvp] * dp[13]) +\n                (vp[7 + dvp] * dp[14]) +\n                (vp[6 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples6(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[6 + dvp] * dp[0]) +\n                (vp[5 + dvp] * dp[1]) +\n                (vp[4 + dvp] * dp[2]) +\n                (vp[3 + dvp] * dp[3]) +\n                (vp[2 + dvp] * dp[4]) +\n                (vp[1 + dvp] * dp[5]) +\n                (vp[0 + dvp] * dp[6]) +\n                (vp[15 + dvp] * dp[7]) +\n                (vp[14 + dvp] * dp[8]) +\n                (vp[13 + dvp] * dp[9]) +\n                (vp[12 + dvp] * dp[10]) +\n                (vp[11 + dvp] * dp[11]) +\n                (vp[10 + dvp] * dp[12]) +\n                (vp[9 + dvp] * dp[13]) +\n                (vp[8 + dvp] * dp[14]) +\n                (vp[7 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples7(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[7 + dvp] * dp[0]) +\n                (vp[6 + dvp] * dp[1]) +\n                (vp[5 + dvp] * dp[2]) +\n                (vp[4 + dvp] * dp[3]) +\n                (vp[3 + dvp] * dp[4]) +\n                (vp[2 + dvp] * dp[5]) +\n                (vp[1 + dvp] * dp[6]) +\n                (vp[0 + dvp] * dp[7]) +\n                (vp[15 + dvp] * dp[8]) +\n                (vp[14 + dvp] * dp[9]) +\n                (vp[13 + dvp] * dp[10]) +\n                (vp[12 + dvp] * dp[11]) +\n                (vp[11 + dvp] * dp[12]) +\n                (vp[10 + dvp] * dp[13]) +\n                (vp[9 + dvp] * dp[14]) +\n                (vp[8 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples8(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[8 + dvp] * dp[0]) +\n                (vp[7 + dvp] * dp[1]) +\n                (vp[6 + dvp] * dp[2]) +\n                (vp[5 + dvp] * dp[3]) +\n                (vp[4 + dvp] * dp[4]) +\n                (vp[3 + dvp] * dp[5]) +\n                (vp[2 + dvp] * dp[6]) +\n                (vp[1 + dvp] * dp[7]) +\n                (vp[0 + dvp] * dp[8]) +\n                (vp[15 + dvp] * dp[9]) +\n                (vp[14 + dvp] * dp[10]) +\n                (vp[13 + dvp] * dp[11]) +\n                (vp[12 + dvp] * dp[12]) +\n                (vp[11 + dvp] * dp[13]) +\n                (vp[10 + dvp] * dp[14]) +\n                (vp[9 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples9(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[9 + dvp] * dp[0]) +\n                (vp[8 + dvp] * dp[1]) +\n                (vp[7 + dvp] * dp[2]) +\n                (vp[6 + dvp] * dp[3]) +\n                (vp[5 + dvp] * dp[4]) +\n                (vp[4 + dvp] * dp[5]) +\n                (vp[3 + dvp] * dp[6]) +\n                (vp[2 + dvp] * dp[7]) +\n                (vp[1 + dvp] * dp[8]) +\n                (vp[0 + dvp] * dp[9]) +\n                (vp[15 + dvp] * dp[10]) +\n                (vp[14 + dvp] * dp[11]) +\n                (vp[13 + dvp] * dp[12]) +\n                (vp[12 + dvp] * dp[13]) +\n                (vp[11 + dvp] * dp[14]) +\n                (vp[10 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples10(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[10 + dvp] * dp[0]) +\n                (vp[9 + dvp] * dp[1]) +\n                (vp[8 + dvp] * dp[2]) +\n                (vp[7 + dvp] * dp[3]) +\n                (vp[6 + dvp] * dp[4]) +\n                (vp[5 + dvp] * dp[5]) +\n                (vp[4 + dvp] * dp[6]) +\n                (vp[3 + dvp] * dp[7]) +\n                (vp[2 + dvp] * dp[8]) +\n                (vp[1 + dvp] * dp[9]) +\n                (vp[0 + dvp] * dp[10]) +\n                (vp[15 + dvp] * dp[11]) +\n                (vp[14 + dvp] * dp[12]) +\n                (vp[13 + dvp] * dp[13]) +\n                (vp[12 + dvp] * dp[14]) +\n                (vp[11 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples11(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[11 + dvp] * dp[0]) +\n                (vp[10 + dvp] * dp[1]) +\n                (vp[9 + dvp] * dp[2]) +\n                (vp[8 + dvp] * dp[3]) +\n                (vp[7 + dvp] * dp[4]) +\n                (vp[6 + dvp] * dp[5]) +\n                (vp[5 + dvp] * dp[6]) +\n                (vp[4 + dvp] * dp[7]) +\n                (vp[3 + dvp] * dp[8]) +\n                (vp[2 + dvp] * dp[9]) +\n                (vp[1 + dvp] * dp[10]) +\n                (vp[0 + dvp] * dp[11]) +\n                (vp[15 + dvp] * dp[12]) +\n                (vp[14 + dvp] * dp[13]) +\n                (vp[13 + dvp] * dp[14]) +\n                (vp[12 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples12(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[12 + dvp] * dp[0]) +\n                (vp[11 + dvp] * dp[1]) +\n                (vp[10 + dvp] * dp[2]) +\n                (vp[9 + dvp] * dp[3]) +\n                (vp[8 + dvp] * dp[4]) +\n                (vp[7 + dvp] * dp[5]) +\n                (vp[6 + dvp] * dp[6]) +\n                (vp[5 + dvp] * dp[7]) +\n                (vp[4 + dvp] * dp[8]) +\n                (vp[3 + dvp] * dp[9]) +\n                (vp[2 + dvp] * dp[10]) +\n                (vp[1 + dvp] * dp[11]) +\n                (vp[0 + dvp] * dp[12]) +\n                (vp[15 + dvp] * dp[13]) +\n                (vp[14 + dvp] * dp[14]) +\n                (vp[13 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples13(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[13 + dvp] * dp[0]) +\n                (vp[12 + dvp] * dp[1]) +\n                (vp[11 + dvp] * dp[2]) +\n                (vp[10 + dvp] * dp[3]) +\n                (vp[9 + dvp] * dp[4]) +\n                (vp[8 + dvp] * dp[5]) +\n                (vp[7 + dvp] * dp[6]) +\n                (vp[6 + dvp] * dp[7]) +\n                (vp[5 + dvp] * dp[8]) +\n                (vp[4 + dvp] * dp[9]) +\n                (vp[3 + dvp] * dp[10]) +\n                (vp[2 + dvp] * dp[11]) +\n                (vp[1 + dvp] * dp[12]) +\n                (vp[0 + dvp] * dp[13]) +\n                (vp[15 + dvp] * dp[14]) +\n                (vp[14 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples14(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[14 + dvp] * dp[0]) +\n                (vp[13 + dvp] * dp[1]) +\n                (vp[12 + dvp] * dp[2]) +\n                (vp[11 + dvp] * dp[3]) +\n                (vp[10 + dvp] * dp[4]) +\n                (vp[9 + dvp] * dp[5]) +\n                (vp[8 + dvp] * dp[6]) +\n                (vp[7 + dvp] * dp[7]) +\n                (vp[6 + dvp] * dp[8]) +\n                (vp[5 + dvp] * dp[9]) +\n                (vp[4 + dvp] * dp[10]) +\n                (vp[3 + dvp] * dp[11]) +\n                (vp[2 + dvp] * dp[12]) +\n                (vp[1 + dvp] * dp[13]) +\n                (vp[0 + dvp] * dp[14]) +\n                (vp[15 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples15(buffer) {\n        const vp = this.actual_v;\n        const tmpOut = this._tmpOut;\n        let dvp = 0;\n\n        // fat chance of having this loop unroll\n        for (let i = 0; i < 32; i++) {\n            const dp = d16[i];\n            let pcm_sample;\n\n            pcm_sample = (((vp[15 + dvp] * dp[0]) +\n                (vp[14 + dvp] * dp[1]) +\n                (vp[13 + dvp] * dp[2]) +\n                (vp[12 + dvp] * dp[3]) +\n                (vp[11 + dvp] * dp[4]) +\n                (vp[10 + dvp] * dp[5]) +\n                (vp[9 + dvp] * dp[6]) +\n                (vp[8 + dvp] * dp[7]) +\n                (vp[7 + dvp] * dp[8]) +\n                (vp[6 + dvp] * dp[9]) +\n                (vp[5 + dvp] * dp[10]) +\n                (vp[4 + dvp] * dp[11]) +\n                (vp[3 + dvp] * dp[12]) +\n                (vp[2 + dvp] * dp[13]) +\n                (vp[1 + dvp] * dp[14]) +\n                (vp[0 + dvp] * dp[15])\n            ) * this.scalefactor);\n\n            tmpOut[i] = pcm_sample;\n\n            dvp += 16;\n        } // for\n    }\n\n    compute_pcm_samples(buffer) {\n        switch (this.actual_write_pos) {\n            case 0:\n                this.compute_pcm_samples0(buffer);\n                break;\n            case 1:\n                this.compute_pcm_samples1(buffer);\n                break;\n            case 2:\n                this.compute_pcm_samples2(buffer);\n                break;\n            case 3:\n                this.compute_pcm_samples3(buffer);\n                break;\n            case 4:\n                this.compute_pcm_samples4(buffer);\n                break;\n            case 5:\n                this.compute_pcm_samples5(buffer);\n                break;\n            case 6:\n                this.compute_pcm_samples6(buffer);\n                break;\n            case 7:\n                this.compute_pcm_samples7(buffer);\n                break;\n            case 8:\n                this.compute_pcm_samples8(buffer);\n                break;\n            case 9:\n                this.compute_pcm_samples9(buffer);\n                break;\n            case 10:\n                this.compute_pcm_samples10(buffer);\n                break;\n            case 11:\n                this.compute_pcm_samples11(buffer);\n                break;\n            case 12:\n                this.compute_pcm_samples12(buffer);\n                break;\n            case 13:\n                this.compute_pcm_samples13(buffer);\n                break;\n            case 14:\n                this.compute_pcm_samples14(buffer);\n                break;\n            case 15:\n                this.compute_pcm_samples15(buffer);\n                break;\n        }\n\n        if (buffer != null) {\n            buffer.appendSamples(this.channel, this._tmpOut);\n        }\n    }\n}\n\nconst d = [0.0, -4.42505E-4, 0.003250122, -0.007003784, 0.031082153, -0.07862854, 0.10031128, -0.57203674, 1.144989, 0.57203674, 0.10031128, 0.07862854, 0.031082153, 0.007003784, 0.003250122, 4.42505E-4, -1.5259E-5, -4.73022E-4, 0.003326416, -0.007919312, 0.030517578, -0.08418274, 0.090927124, -0.6002197, 1.1442871, 0.54382324, 0.1088562, 0.07305908, 0.03147888, 0.006118774, 0.003173828, 3.96729E-4, -1.5259E-5, -5.34058E-4, 0.003387451, -0.008865356, 0.029785156, -0.08970642, 0.08068848, -0.6282959, 1.1422119, 0.51560974, 0.11657715, 0.06752014, 0.03173828, 0.0052948, 0.003082275, 3.66211E-4, -1.5259E-5, -5.79834E-4, 0.003433228, -0.009841919, 0.028884888, -0.09516907, 0.06959534, -0.6562195, 1.1387634, 0.48747253, 0.12347412, 0.06199646, 0.031845093, 0.004486084, 0.002990723, 3.20435E-4, -1.5259E-5, -6.2561E-4, 0.003463745, -0.010848999, 0.027801514, -0.10054016, 0.057617188, -0.6839142, 1.1339264, 0.45947266, 0.12957764, 0.056533813, 0.031814575, 0.003723145, 0.00289917, 2.89917E-4, -1.5259E-5, -6.86646E-4, 0.003479004, -0.011886597, 0.026535034, -0.1058197, 0.044784546, -0.71131897, 1.1277466, 0.43165588, 0.1348877, 0.051132202, 0.031661987, 0.003005981, 0.002792358, 2.59399E-4, -1.5259E-5, -7.47681E-4, 0.003479004, -0.012939453, 0.02508545, -0.110946655, 0.031082153, -0.7383728, 1.120224, 0.40408325, 0.13945007, 0.045837402, 0.03138733, 0.002334595, 0.002685547, 2.44141E-4, -3.0518E-5, -8.08716E-4, 0.003463745, -0.014022827, 0.023422241, -0.11592102, 0.01651001, -0.7650299, 1.1113739, 0.37680054, 0.14326477, 0.040634155, 0.03100586, 0.001693726, 0.002578735, 2.13623E-4, -3.0518E-5, -8.8501E-4, 0.003417969, -0.01512146, 0.021575928, -0.12069702, 0.001068115, -0.791214, 1.1012115, 0.34986877, 0.1463623, 0.03555298, 0.030532837, 0.001098633, 0.002456665, 1.98364E-4, -3.0518E-5, -9.61304E-4, 0.003372192, -0.016235352, 0.01953125, -0.1252594, -0.015228271, -0.816864, 1.0897827, 0.32331848, 0.1487732, 0.03060913, 0.029937744, 5.49316E-4, 0.002349854, 1.67847E-4, -3.0518E-5, -0.001037598, 0.00328064, -0.017349243, 0.01725769, -0.12956238, -0.03237915, -0.84194946, 1.0771179, 0.2972107, 0.15049744, 0.025817871, 0.029281616, 3.0518E-5, 0.002243042, 1.52588E-4, -4.5776E-5, -0.001113892, 0.003173828, -0.018463135, 0.014801025, -0.1335907, -0.050354004, -0.8663635, 1.0632172, 0.2715912, 0.15159607, 0.0211792, 0.028533936, -4.42505E-4, 0.002120972, 1.37329E-4, -4.5776E-5, -0.001205444, 0.003051758, -0.019577026, 0.012115479, -0.13729858, -0.06916809, -0.89009094, 1.0481567, 0.24650574, 0.15206909, 0.016708374, 0.02772522, -8.69751E-4, 0.00201416, 1.2207E-4, -6.1035E-5, -0.001296997, 0.002883911, -0.020690918, 0.009231567, -0.14067078, -0.088775635, -0.9130554, 1.0319366, 0.22198486, 0.15196228, 0.012420654, 0.02684021, -0.001266479, 0.001907349, 1.06812E-4, -6.1035E-5, -0.00138855, 0.002700806, -0.02178955, 0.006134033, -0.14367676, -0.10916138, -0.9351959, 1.0146179, 0.19805908, 0.15130615, 0.00831604, 0.025909424, -0.001617432, 0.001785278, 1.06812E-4, -7.6294E-5, -0.001480103, 0.002487183, -0.022857666, 0.002822876, -0.1462555, -0.13031006, -0.95648193, 0.99624634, 0.17478943, 0.15011597, 0.004394531, 0.024932861, -0.001937866, 0.001693726, 9.1553E-5, -7.6294E-5, -0.001586914, 0.002227783, -0.023910522, -6.86646E-4, -0.14842224, -0.15220642, -0.9768524, 0.9768524, 0.15220642, 0.14842224, 6.86646E-4, 0.023910522, -0.002227783, 0.001586914, 7.6294E-5, -9.1553E-5, -0.001693726, 0.001937866, -0.024932861, -0.004394531, -0.15011597, -0.17478943, -0.99624634, 0.95648193, 0.13031006, 0.1462555, -0.002822876, 0.022857666, -0.002487183, 0.001480103, 7.6294E-5, -1.06812E-4, -0.001785278, 0.001617432, -0.025909424, -0.00831604, -0.15130615, -0.19805908, -1.0146179, 0.9351959, 0.10916138, 0.14367676, -0.006134033, 0.02178955, -0.002700806, 0.00138855, 6.1035E-5, -1.06812E-4, -0.001907349, 0.001266479, -0.02684021, -0.012420654, -0.15196228, -0.22198486, -1.0319366, 0.9130554, 0.088775635, 0.14067078, -0.009231567, 0.020690918, -0.002883911, 0.001296997, 6.1035E-5, -1.2207E-4, -0.00201416, 8.69751E-4, -0.02772522, -0.016708374, -0.15206909, -0.24650574, -1.0481567, 0.89009094, 0.06916809, 0.13729858, -0.012115479, 0.019577026, -0.003051758, 0.001205444, 4.5776E-5, -1.37329E-4, -0.002120972, 4.42505E-4, -0.028533936, -0.0211792, -0.15159607, -0.2715912, -1.0632172, 0.8663635, 0.050354004, 0.1335907, -0.014801025, 0.018463135, -0.003173828, 0.001113892, 4.5776E-5, -1.52588E-4, -0.002243042, -3.0518E-5, -0.029281616, -0.025817871, -0.15049744, -0.2972107, -1.0771179, 0.84194946, 0.03237915, 0.12956238, -0.01725769, 0.017349243, -0.00328064, 0.001037598, 3.0518E-5, -1.67847E-4, -0.002349854, -5.49316E-4, -0.029937744, -0.03060913, -0.1487732, -0.32331848, -1.0897827, 0.816864, 0.015228271, 0.1252594, -0.01953125, 0.016235352, -0.003372192, 9.61304E-4, 3.0518E-5, -1.98364E-4, -0.002456665, -0.001098633, -0.030532837, -0.03555298, -0.1463623, -0.34986877, -1.1012115, 0.791214, -0.001068115, 0.12069702, -0.021575928, 0.01512146, -0.003417969, 8.8501E-4, 3.0518E-5, -2.13623E-4, -0.002578735, -0.001693726, -0.03100586, -0.040634155, -0.14326477, -0.37680054, -1.1113739, 0.7650299, -0.01651001, 0.11592102, -0.023422241, 0.014022827, -0.003463745, 8.08716E-4, 3.0518E-5, -2.44141E-4, -0.002685547, -0.002334595, -0.03138733, -0.045837402, -0.13945007, -0.40408325, -1.120224, 0.7383728, -0.031082153, 0.110946655, -0.02508545, 0.012939453, -0.003479004, 7.47681E-4, 1.5259E-5, -2.59399E-4, -0.002792358, -0.003005981, -0.031661987, -0.051132202, -0.1348877, -0.43165588, -1.1277466, 0.71131897, -0.044784546, 0.1058197, -0.026535034, 0.011886597, -0.003479004, 6.86646E-4, 1.5259E-5, -2.89917E-4, -0.00289917, -0.003723145, -0.031814575, -0.056533813, -0.12957764, -0.45947266, -1.1339264, 0.6839142, -0.057617188, 0.10054016, -0.027801514, 0.010848999, -0.003463745, 6.2561E-4, 1.5259E-5, -3.20435E-4, -0.002990723, -0.004486084, -0.031845093, -0.06199646, -0.12347412, -0.48747253, -1.1387634, 0.6562195, -0.06959534, 0.09516907, -0.028884888, 0.009841919, -0.003433228, 5.79834E-4, 1.5259E-5, -3.66211E-4, -0.003082275, -0.0052948, -0.03173828, -0.06752014, -0.11657715, -0.51560974, -1.1422119, 0.6282959, -0.08068848, 0.08970642, -0.029785156, 0.008865356, -0.003387451, 5.34058E-4, 1.5259E-5, -3.96729E-4, -0.003173828, -0.006118774, -0.03147888, -0.07305908, -0.1088562, -0.54382324, -1.1442871, 0.6002197, -0.090927124, 0.08418274, -0.030517578, 0.007919312, -0.003326416, 4.73022E-4, 1.5259E-5];\nconst d16 = ((ar, bs, out, off = 0) => {\n    while (off < ar.length)\n        out.push(ar.slice(off, off + bs)) && (off += bs);\n    return out;\n})(d, 16, []);\n\nconst MY_PI = 3.14159265358979323846;\nconst cos1_64 = (1.0 / (2.0 * Math.cos(MY_PI / 64.0)));\nconst cos3_64 = (1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 64.0)));\nconst cos5_64 = (1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 64.0)));\nconst cos7_64 = (1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 64.0)));\nconst cos9_64 = (1.0 / (2.0 * Math.cos(MY_PI * 9.0 / 64.0)));\nconst cos11_64 = (1.0 / (2.0 * Math.cos(MY_PI * 11.0 / 64.0)));\nconst cos13_64 = (1.0 / (2.0 * Math.cos(MY_PI * 13.0 / 64.0)));\nconst cos15_64 = (1.0 / (2.0 * Math.cos(MY_PI * 15.0 / 64.0)));\nconst cos17_64 = (1.0 / (2.0 * Math.cos(MY_PI * 17.0 / 64.0)));\nconst cos19_64 = (1.0 / (2.0 * Math.cos(MY_PI * 19.0 / 64.0)));\nconst cos21_64 = (1.0 / (2.0 * Math.cos(MY_PI * 21.0 / 64.0)));\nconst cos23_64 = (1.0 / (2.0 * Math.cos(MY_PI * 23.0 / 64.0)));\nconst cos25_64 = (1.0 / (2.0 * Math.cos(MY_PI * 25.0 / 64.0)));\nconst cos27_64 = (1.0 / (2.0 * Math.cos(MY_PI * 27.0 / 64.0)));\nconst cos29_64 = (1.0 / (2.0 * Math.cos(MY_PI * 29.0 / 64.0)));\nconst cos31_64 = (1.0 / (2.0 * Math.cos(MY_PI * 31.0 / 64.0)));\nconst cos1_32 = (1.0 / (2.0 * Math.cos(MY_PI / 32.0)));\nconst cos3_32 = (1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 32.0)));\nconst cos5_32 = (1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 32.0)));\nconst cos7_32 = (1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 32.0)));\nconst cos9_32 = (1.0 / (2.0 * Math.cos(MY_PI * 9.0 / 32.0)));\nconst cos11_32 = (1.0 / (2.0 * Math.cos(MY_PI * 11.0 / 32.0)));\nconst cos13_32 = (1.0 / (2.0 * Math.cos(MY_PI * 13.0 / 32.0)));\nconst cos15_32 = (1.0 / (2.0 * Math.cos(MY_PI * 15.0 / 32.0)));\nconst cos1_16 = (1.0 / (2.0 * Math.cos(MY_PI / 16.0)));\nconst cos3_16 = (1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 16.0)));\nconst cos5_16 = (1.0 / (2.0 * Math.cos(MY_PI * 5.0 / 16.0)));\nconst cos7_16 = (1.0 / (2.0 * Math.cos(MY_PI * 7.0 / 16.0)));\nconst cos1_8 = (1.0 / (2.0 * Math.cos(MY_PI / 8.0)));\nconst cos3_8 = (1.0 / (2.0 * Math.cos(MY_PI * 3.0 / 8.0)));\nconst cos1_4 = (1.0 / (2.0 * Math.cos(MY_PI / 4.0)));\n\nmodule.exports = {\n    SampleBuffer: SampleBuffer,\n    SynthesisFilter: SynthesisFilter\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mp3/fltout.js","const stream = require('stream');\nconst debug  = require('debug')('aac');\nconst AACDecoder = require('./decoder');\nconst AACFrame = require('./frame');\n\n// support ADTS containers only\n\nclass Decoder extends stream.Transform {\n\n    constructor() {\n        super();\n\n        this.bytes = new Buffer(0);\n        this.pendingBytes = 0;\n        this.pendingCb = null;\n\n        this.frstFrame = null;\n        this.currFrame = null;\n        this.decoder   = null;\n\n        // read 72 bits containing header\n        this._bytes(7, this._read_frame_header);\n    }\n\n    _transform(data, enc, callback) {\n        this.bytes = Buffer.concat([this.bytes, data]);\n\n        while(this.pendingBytes) {\n            if (this.bytes.length < this.pendingBytes) {\n                return callback();\n            }\n\n            const bytes = new Buffer(this.pendingBytes);\n            const remnd = new Buffer(this.bytes.length - this.pendingBytes);\n\n            this.bytes.copy(bytes, 0, 0, bytes.length);\n            this.bytes.copy(remnd, 0, this.pendingBytes);\n            this.bytes = remnd;\n\n            const pendingCb = this.pendingCb;\n            const pendingBt = this.pendingBytes;\n            this.pendingCb = null;\n            this.pendingBytes = null;\n\n            pendingCb.call(this, pendingBt, bytes);\n        }\n\n        console.assert(false, 'decoding out of sync');\n\n        callback(null, this.bytes);\n        this.bytes = new Buffer(0);\n    }\n\n    _bytes(bytes, callback) {\n        if (bytes <= 0 || !callback) {\n            throw \"Invalid arguments\";\n        }\n\n        if (this.pendingCb) {\n            throw \"There is already pending callback\";\n        }\n\n        this.pendingBytes = bytes;\n        this.pendingCb    = callback;\n    }\n\n    _read_frame_header(size, data)\n    {\n        console.assert(7 === size && 7 === data.length);\n\n        debug('decoding frame header', size);\n\n        // assert syncword exists\n        console.assert(data[0] === 0xff && (data[1] & 0xf0) === 0xf0);\n\n        // 0 for MPEG-4, 1 for MPEG-2\n        const mpeg_version = (data[1] & 0x08) >> 3;\n        console.assert(mpeg_version >= 0 && mpeg_version <= 1);\n\n        // always 0\n        const mpeg_layer = (data[1] & 0x06) >> 1;\n        console.assert(mpeg_layer === 0);\n\n        // set to 1 if there is no CRC and 0 if there is CRC\n        const no_crc = data[1] & 0x01;\n\n        // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Audio_Object_Types\n        const profile = ((data[2] & 0xc0) >> 6) + 1;\n        console.assert(profile === 2);\n\n        // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Sampling_Frequencies\n        const samplingIndex = (data[2] & 0x3c) >> 2;\n        console.assert(samplingIndex >= 0 && samplingIndex <= 12);\n\n        // https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Channel_Configurations\n        // MPEG-4 Channel Configuration\n        // (in the case of 0, is sent via an inband PCE)\n        const channelConfig = ((data[2] & 0x01) << 2) | ((data[3] & 0xC0) >> 6);\n\n        const frameLength = ((data[3] & 0x03) << 11) | (data[4] << 3) | ((data[5] & 0xe0) >> 5);\n\n        const num_frames  = (data[6] & 0x03) + 1;\n        console.assert(1 === num_frames);\n\n        const frame = this.currFrame = new AACFrame();\n        frame.profile = profile;\n        frame.samplingIndex = samplingIndex;\n        frame.channelConfig = channelConfig;\n        frame.hasCrc = !no_crc;\n        frame.length = frameLength;\n\n        if (frame.hasCrc) {\n            this._bytes(2, this._read_frame_crc);\n        } else {\n            this._bytes(frame.dataLength, this._read_frame_data);\n        }\n    }\n\n    _read_frame_crc(size, data)\n    {\n        console.assert(2 === size && 2 === data.length);\n        debug('validating frame crc');\n        this._bytes(this.currFrame.dataLength, this._read_frame_data);\n    }\n\n    _read_frame_data(size, data)\n    {\n        if (null === this.frstFrame) {\n            this.frstFrame  = this.currFrame;\n            this.decoder    = new AACDecoder(this.currFrame);\n            this.emit('header', this.currFrame);\n        }\n\n        this.push(this.decoder.decode(data));\n\n        this._bytes(7, this._read_frame_header);\n    }\n}\n\nmodule.exports = Decoder;\n\n\n// WEBPACK FOOTER //\n// ./src/aac/index.js","const Elements = require('./elements');\nconst FilterBank = require('./filterbank');\nconst BitStream = require('../bitstream');\n\n// partial port of jaad-0.8.4\n// supports:\n// profiles: AAC-LC\n// channels: stereo\n// frequencies: 11025, 22050, 44100, 48000\n// frameSize: 1024\n\nmodule.exports = class Decoder\n{\n    constructor(frame) {\n        this.elements   = new Elements(this.frame = frame);\n        this.filterBank = new FilterBank(\n            false,                      // fixme: config.isSmallFrameUsed()\n            this.frame.channels         // fixme: config.getChannelConfiguration().getChannelCount()\n        );\n    }\n\n    decode(data) {\n        return this.elements\n            .reset()\n            .decode(new BitStream(data))\n            .process(this.filterBank)\n            .output();\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/decoder.js","const Constants = require('../constants');\nconst CPE = require('./cpe');\nconst SCE_LFE = require('./sce_lfe');\nconst FIL = require('./fil');\nconst IS = require('../tools/is');\nconst MS = require('../tools/ms');\nconst debug = require('debug')('elements');\n\nconst Short = {\n    MAX_VALUE: Math.pow(2, 15) - 1,\n    MIN_VALUE: -Math.pow(2, 15)\n};\n\nmodule.exports = class Elements\n{\n    constructor(frame) {\n        this.frame      = frame;\n\n        this.elements   = [];\n        this.fils       = [];\n        this.data       = null;\n\n        this.reset();\n    }\n\n    reset() {\n        this.elements.length    = 0;\n        this.fils.length        = 0;\n        this.sbrPresent         = false;\n        this.psPresent          = false;\n        return this;\n    }\n\n    decode(bitStream) {\n\n        let elementType, prev = null;\n\n        while ((elementType = bitStream.readBits(3)) !== Constants.elements.END) {\n\n            switch (elementType) {\n                case Constants.elements.CCE:        // 2\n                    throw 'CCE not implemented';\n\n                case Constants.elements.DSE:        // 4\n                    throw 'DSE not implemented';\n\n                case Constants.elements.PCE:        // 5\n                    throw 'PCE not implemented';\n\n                case Constants.elements.SCE:        // 0\n                case Constants.elements.LFE:        // 3\n                    debug('decodeSCE_LFE');\n                    prev = this.decodeSCE_LFE(bitStream);\n                    break;\n\n                case Constants.elements.CPE:        // 1\n                    debug('decodeCPE');\n                    prev = this.decodeCPE(bitStream);\n                    break;\n\n                case Constants.elements.FIL:        // 6\n                    debug('decodeFIL');\n                    this.decodeFIL(bitStream, prev);\n                    prev = null;\n                    break;\n\n                default:\n                    throw 'Unexpected elementType ' + elementType;\n            }\n        }\n\n        return this;\n    }\n\n    process(filterBank) {\n\n        let chs = this.frame.channels;\n\n        // fixme: if(chs==1&&psPresent) chs++;\n        if (chs === 1) {\n            throw 'unsupported channels';\n        }\n\n        // fixme: final int mult = sbrPresent ? 2 : 1;\n        const mult = 1;\n\n        // //only reallocate if needed\n        if( !this.data || chs !== this.data.length || this.data[0].length !== (mult * this.frame.frameLength))\n            this.data = (new Array(chs)).fill().map(() => {\n                return (new Array(mult * this.frame.frameLength))\n                    .fill(0);\n            });\n\n        let channel = 0;\n\n        for(let i = 0; i < this.elements.length && channel < chs; i++) {\n            const e = this.elements[i];\n\n            if(e instanceof CPE) {\n                this.processPair(e, filterBank, channel);\n                channel += 2;\n            } else {\n                throw 'not implemented';\n            }\n        }\n\n        return this;\n    }\n\n    processPair(cpe, filterBank, channel) {\n\n        const ics1 = cpe.getLeftChannel();\n        const ics2 = cpe.getRightChannel();\n\n        const info1 = ics1.getInfo();\n        const info2 = ics2.getInfo();\n\n        const elementID = cpe.getInstanceTag();\n\n        const iqData1 = ics1.getInvQuantData();\n        const iqData2 = ics2.getInvQuantData();\n\n        //MS\n        if (cpe.isCommonWindow() && cpe.isMSMaskPresent()) {\n            MS.process(cpe, iqData1, iqData2);\n        }\n\n        // fixme: main prediction\n\n        //IS\n        IS.process(cpe, iqData1, iqData2);\n\n        // fixme: LTP\n\n        // fixme: dependent coupling\n\n        //TNS\n        if(ics1.isTNSDataPresent()) ics1.getTNS().process(ics1, iqData1, sf, false);\n        if(ics2.isTNSDataPresent()) ics2.getTNS().process(ics2, iqData2, sf, false);\n\n        // fixme: dependent coupling again\n\n        //filterbank\n        filterBank.process(info1.getWindowSequence(), info1.getCurrentWindowShape(), info1.getPreviousWindowShape(), iqData1, this.data[channel+0], channel+0);\n        filterBank.process(info2.getWindowSequence(), info2.getCurrentWindowShape(), info2.getPreviousWindowShape(), iqData2, this.data[channel+1], channel+1);\n\n        // fixme: LTP\n        // fixme: independent coupling\n        // fixme: gain control\n        // fixme: SBR\n    }\n\n    decodeSCE_LFE(bitStream) {\n        const element = new SCE_LFE(this.frame);\n        this.elements.push(element);\n        return element.decode(bitStream);\n    }\n\n    decodeCPE(bitStream) {\n        const element = new CPE(this.frame);\n        this.elements.push(element);\n        return element.decode(bitStream);\n    }\n\n    decodeFIL(bitStream, prev) {\n\n        if(Constants.MAX_ELEMENTS === this.fils.length)\n            throw \"too much FIL elements\";\n\n        const element = new FIL(\n            false                   // fixme: config.isSBRDownSampled()\n        );\n\n        element.decode(\n            bitStream, prev,\n            this.frame.sampleRate,  // fixme: config.getSampleFrequency(),\n            false,                  // fixme: config.isSBREnabled(),\n            false                   // fixme: config.isSmallFrameUsed()\n        );\n\n        this.fils.push(element);\n\n        if(prev != null && prev.isSBRPresent()) {\n            this.sbrPresent = true;\n            if(!this.psPresent && prev.getSBR().isPSUsed())\n                this.psPresent = true;\n        }\n    }\n\n    output() {\n        const chs = this.data.length;\n\n        const mult = 1; // fixme: SBR\n        const length = mult * this.frame.frameLength;\n        const b = new Buffer(chs*length*2);\n\n        let idx = 0;\n        // for each value in frame\n        for (let j = 0; j < length; j++) {\n            // interleave channels\n            for (let i = 0; i < chs; i++) {\n                // write uint16 pcm sample\n                const s = Math.max(Math.min(Math.round(this.data[i][j]), Short.MAX_VALUE), Short.MIN_VALUE);\n                b.writeInt16LE(s, idx);\n                idx += 2;\n            }\n        }\n\n        return b;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/index.js","const ONLY_LONG_SEQUENCE = 0;\nconst LONG_START_SEQUENCE = 1;\nconst EIGHT_SHORT_SEQUENCE = 2;\nconst LONG_STOP_SEQUENCE = 3;\n\nconst PREVIOUS = 0;\nconst CURRENT = 1;\n\nconst WINDOW_SHAPE_SINE = 0;\nconst WINDOW_SHAPE_KAISER = 1;\n\nconst MAX_WINDOW_COUNT = 8;\nconst MAX_WINDOW_GROUP_COUNT = MAX_WINDOW_COUNT;\n\nconst AACFrame = require('../frame');\nconst SFB = require('../tools/sfb');\n\nmodule.exports = class ICSInfo\n{\n    constructor(frame)\n    {\n        console.assert(frame instanceof AACFrame);\n        this.frame = frame;\n\n        this.windowShape = [0, 0];\n\n        this._windowSequence = ONLY_LONG_SEQUENCE;\n\n        // private int[] windowGroupLength;\n        this.windowGroupLength = (new Int32Array(MAX_WINDOW_GROUP_COUNT))\n            .fill(0);\n\n        this.maxSFB                 = 0;\n        this.predictionDataPresent  = false;\n        this.windowCount            = 0;\n        this.windowGroupCount       = 0;\n\n        this.swbCount = this.swbOffsets = null;\n    }\n\n    get windowSequence() {\n        return this._windowSequence;\n    }\n\n    set windowSequence(seq) {\n        switch (seq) {\n            case ONLY_LONG_SEQUENCE:\n            case LONG_START_SEQUENCE:\n            case EIGHT_SHORT_SEQUENCE:\n            case LONG_STOP_SEQUENCE:\n                this._windowSequence = seq;\n                break;\n            default:\n                throw 'unknown window sequence type';\n        }\n    }\n\n    decode(bitStream, commonWindow) {\n        bitStream.skipBit();\n\n        this.windowSequence         = bitStream.readBits(2);\n\n        this.windowShape[PREVIOUS]  = this.windowShape[CURRENT];\n        this.windowShape[CURRENT]   = bitStream.readBit();\n\n        this.windowGroupCount       = 1;\n        this.windowGroupLength[0]   = 1;\n\n        if(EIGHT_SHORT_SEQUENCE === this.windowSequence) {\n            this.maxSFB = bitStream.readBits(4);\n\n            for (let i = 0; i < 7; i++) {\n                if (bitStream.readBit()) {\n                    this.windowGroupLength[this.windowGroupCount - 1]++;\n                } else {\n                    this.windowGroupCount++;\n                    this.windowGroupLength[this.windowGroupCount - 1] = 1;\n                }\n            }\n\n            this.windowCount = 8;\n\n            this.swbOffsets = SFB.SWB_OFFSET_SHORT_WINDOW[this.frame.samplingIndex];\n            this.swbCount   = SFB.SWB_SHORT_WINDOW_COUNT[ this.frame.samplingIndex];\n\n            this.predictionDataPresent = false;\n        } else {\n            this.maxSFB         = bitStream.readBits(6);\n            this.windowCount    = 1;\n\n            this.swbOffsets = SFB.SWB_OFFSET_LONG_WINDOW[this.frame.samplingIndex];\n            this.swbCount   = SFB.SWB_LONG_WINDOW_COUNT[ this.frame.samplingIndex];\n\n            this.predictionDataPresent = !!bitStream.readBit();\n\n            if (this.predictionDataPresent) {\n                throw 'not implemented';\n            }\n        }\n    }\n\n    setData(info) {\n        console.assert(info instanceof ICSInfo);\n\n        this.windowSequence = info.windowSequence;\n\n        this.windowShape[PREVIOUS] = this.windowShape[CURRENT];\n\n        this.windowShape[CURRENT] = info.windowShape[CURRENT];\n\n        this.maxSFB = info.maxSFB;\n\n        this.predictionDataPresent = info.predictionDataPresent;\n\n        this.windowCount = info.windowCount;\n\n        this.windowGroupCount = info.windowGroupCount;\n\n        this.windowGroupLength = info.windowGroupLength.slice();\n\n        this.swbCount = info.swbCount;\n\n        this.swbOffsets = info.swbOffsets.slice();\n    }\n\n    getMaxSFB() {\n        return this.maxSFB;\n    }\n\n    getWindowGroupCount() {\n        return this.windowGroupCount;\n    }\n\n    getWindowGroupLength(g) {\n        return this.windowGroupLength[g];\n    }\n\n    isEightShortFrame() {\n        return EIGHT_SHORT_SEQUENCE === this.windowSequence;\n    }\n\n    getSWBOffsets() {\n        return this.swbOffsets;\n    }\n\n    getSWBOffsetMax() {\n        return this.swbOffsets[this.swbCount];\n    }\n\n    getWindowSequence() {\n        return this.windowSequence;\n    }\n\n    getWindowShape(index) {\n        return this.windowShape[index];\n    }\n\n    getCurrentWindowShape() {\n        return this.windowShape[CURRENT];\n    }\n\n    getPreviousWindowShape() {\n        return this.windowShape[PREVIOUS];\n    }\n\n    getWindowCount() {\n        return this.windowCount;\n    }\n\n    // warners\n    get icPredict() {\n        throw 'not implemented';\n    }\n    get ltpData1Present() {\n        throw 'not implemented';\n    }\n    get ltPredict1() {\n        throw 'not implemented';\n    }\n    get ltPredict2() {\n        throw 'not implemented';\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/icsinfo.js","/**\n * ScaleFactorBands\n */\nmodule.exports = class SFB\n{\n    static get SWB_OFFSET_1024_96() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56,\n            64, 72, 80, 88, 96, 108, 120, 132, 144, 156, 172, 188, 212, 240,\n            276, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_64() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56,\n            64, 72, 80, 88, 100, 112, 124, 140, 156, 172, 192, 216, 240, 268,\n            304, 344, 384, 424, 464, 504, 544, 584, 624, 664, 704, 744, 784, 824,\n            864, 904, 944, 984, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_48() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72,\n            80, 88, 96, 108, 120, 132, 144, 160, 176, 196, 216, 240, 264, 292,\n            320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736,\n            768, 800, 832, 864, 896, 928, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_32() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72,\n            80, 88, 96, 108, 120, 132, 144, 160, 176, 196, 216, 240, 264, 292,\n            320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736,\n            768, 800, 832, 864, 896, 928, 960, 992, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_24() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 52, 60, 68,\n            76, 84, 92, 100, 108, 116, 124, 136, 148, 160, 172, 188, 204, 220,\n            240, 260, 284, 308, 336, 364, 396, 432, 468, 508, 552, 600, 652, 704,\n            768, 832, 896, 960, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_16() {\n        return new Int16Array([\n            0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 100, 112, 124,\n            136, 148, 160, 172, 184, 196, 212, 228, 244, 260, 280, 300, 320, 344,\n            368, 396, 424, 456, 492, 532, 572, 616, 664, 716, 772, 832, 896, 960, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_1024_8() {\n        return new Int16Array([\n            0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 172,\n            188, 204, 220, 236, 252, 268, 288, 308, 328, 348, 372, 396, 420, 448,\n            476, 508, 544, 580, 620, 664, 712, 764, 820, 880, 944, 1024,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_96() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_64() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_48() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 28, 36, 44, 56, 68, 80, 96, 112, 128,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_24() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 64, 76, 92, 108, 128,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_16() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 32, 40, 48, 60, 72, 88, 108, 128,\n            -1\n        ])\n    }\n\n    static get SWB_OFFSET_128_8() {\n        return new Int16Array([\n            0, 4, 8, 12, 16, 20, 24, 28, 36, 44, 52, 60, 72, 88, 108, 128,\n            -1\n        ])\n    }\n\n    static get SWB_LONG_WINDOW_COUNT() {\n        return new Int16Array([\n            41, 41, 47, 49, 49, 51, 47, 47, 43, 43, 43, 40\n        ])\n    }\n\n    static get SWB_OFFSET_LONG_WINDOW() {\n        return [\n            SFB.SWB_OFFSET_1024_96,\n            SFB.SWB_OFFSET_1024_96,\n            SFB.SWB_OFFSET_1024_64,\n            SFB.SWB_OFFSET_1024_48,\n            SFB.SWB_OFFSET_1024_48,\n            SFB.SWB_OFFSET_1024_32,\n            SFB.SWB_OFFSET_1024_24,\n            SFB.SWB_OFFSET_1024_24,\n            SFB.SWB_OFFSET_1024_16,\n            SFB.SWB_OFFSET_1024_16,\n            SFB.SWB_OFFSET_1024_16,\n            SFB.SWB_OFFSET_1024_8\n        ];\n    }\n\n    static get SWB_SHORT_WINDOW_COUNT() {\n        return new Int16Array([\n            12, 12, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15\n        ])\n    }\n\n    static get SWB_OFFSET_SHORT_WINDOW() {\n        return [\n            SFB.SWB_OFFSET_128_96,\n            SFB.SWB_OFFSET_128_96,\n            SFB.SWB_OFFSET_128_64,\n            SFB.SWB_OFFSET_128_48,\n            SFB.SWB_OFFSET_128_48,\n            SFB.SWB_OFFSET_128_48,\n            SFB.SWB_OFFSET_128_24,\n            SFB.SWB_OFFSET_128_24,\n            SFB.SWB_OFFSET_128_16,\n            SFB.SWB_OFFSET_128_16,\n            SFB.SWB_OFFSET_128_16,\n            SFB.SWB_OFFSET_128_8\n        ]\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/sfb.js","module.exports = class Huffman {\n\n    static get UNSIGNED() {\n        return [false, false, true, true, false, false, true, true, true, true, true];\n    }\n\n    static get QUAD_LEN() {\n        return 4;\n    }\n\n    static get PAIR_LEN() {\n        return 2;\n    }\n\n    static decodeSpectralData(bitStream, cb, data, off) {\n        const HCB = CODEBOOKS[cb-1];\n\n        //find index\n        const offset = Huffman.findOffset(bitStream, HCB);\n\n        //copy data\n        data[off]   = HCB[offset][2];\n        data[off+1] = HCB[offset][3];\n\n        if(cb < 5) {\n            data[off+2] = HCB[offset][4];\n            data[off+3] = HCB[offset][5];\n        }\n\n        //sign & escape\n        if(cb < 11) {\n            if(Huffman.UNSIGNED[cb - 1])\n                Huffman.signValues(bitStream, data, off, cb < 5 ? Huffman.QUAD_LEN : Huffman.PAIR_LEN);\n        }\n        else if(cb === 11 || cb > 15) {\n            //virtual codebooks are always unsigned\n            Huffman.signValues(bitStream, data, off, cb < 5 ? Huffman.QUAD_LEN : Huffman.PAIR_LEN);\n            if(Math.abs(data[off]) === 16)\n                data[off] = Huffman.getEscape(bitStream, data[off]);\n            if(Math.abs(data[off+1]) === 16)\n                data[off+1] = Huffman.getEscape(bitStream, data[off+1]);\n        }\n        else throw \"Huffman: unknown spectral codebook: \" + cb;\n    }\n\n    static signValues(bitStream, data, off, len) {\n        for(let i = off; i < off + len; i++) {\n            if(data[i] !== 0) {\n                if(!!bitStream.readBit())\n                    data[i] = -data[i];\n            }\n        }\n    }\n\n    static decodeScaleFactor(bitStream) {\n        const offset = Huffman.findOffset(bitStream, HCB_SF);\n\n        return HCB_SF[offset][2];\n    }\n\n    static findOffset(bitStream, table) {\n        let off = 0, len = table[off][0], cw = bitStream.readBits(len), j;\n\n        while (cw !== table[off][1]) {\n            off++;\n            j = table[off][0] - len;\n            len = table[off][0];\n            cw <<= j;\n            cw |= bitStream.readBits(j);\n        }\n        return off;\n    }\n\n    static getEscape(bitStream, s)\n    {\n        const neg = s < 0;\n\n        let i = 4;\n\n        while(!!bitStream.readBit()) {\n            i++;\n        }\n\n        const j = bitStream.readBits(i) | (1 << i);\n\n        return (neg ? -j : j);\n    }\n};\n\nconst HCB1 = [\n    [1, 0, 0, 0, 0, 0],\n    [5, 16, 1, 0, 0, 0],\n    [5, 17, -1, 0, 0, 0],\n    [5, 18, 0, 0, 0, -1],\n    [5, 19, 0, 1, 0, 0],\n    [5, 20, 0, 0, 0, 1],\n    [5, 21, 0, 0, -1, 0],\n    [5, 22, 0, 0, 1, 0],\n    [5, 23, 0, -1, 0, 0],\n    [7, 96, 1, -1, 0, 0],\n    [7, 97, -1, 1, 0, 0],\n    [7, 98, 0, 0, -1, 1],\n    [7, 99, 0, 1, -1, 0],\n    [7, 100, 0, -1, 1, 0],\n    [7, 101, 0, 0, 1, -1],\n    [7, 102, 1, 1, 0, 0],\n    [7, 103, 0, 0, -1, -1],\n    [7, 104, -1, -1, 0, 0],\n    [7, 105, 0, -1, -1, 0],\n    [7, 106, 1, 0, -1, 0],\n    [7, 107, 0, 1, 0, -1],\n    [7, 108, -1, 0, 1, 0],\n    [7, 109, 0, 0, 1, 1],\n    [7, 110, 1, 0, 1, 0],\n    [7, 111, 0, -1, 0, 1],\n    [7, 112, 0, 1, 1, 0],\n    [7, 113, 0, 1, 0, 1],\n    [7, 114, -1, 0, -1, 0],\n    [7, 115, 1, 0, 0, 1],\n    [7, 116, -1, 0, 0, -1],\n    [7, 117, 1, 0, 0, -1],\n    [7, 118, -1, 0, 0, 1],\n    [7, 119, 0, -1, 0, -1],\n    [9, 480, 1, 1, -1, 0],\n    [9, 481, -1, 1, -1, 0],\n    [9, 482, 1, -1, 1, 0],\n    [9, 483, 0, 1, 1, -1],\n    [9, 484, 0, 1, -1, 1],\n    [9, 485, 0, -1, 1, 1],\n    [9, 486, 0, -1, 1, -1],\n    [9, 487, 1, -1, -1, 0],\n    [9, 488, 1, 0, -1, 1],\n    [9, 489, 0, 1, -1, -1],\n    [9, 490, -1, 1, 1, 0],\n    [9, 491, -1, 0, 1, -1],\n    [9, 492, -1, -1, 1, 0],\n    [9, 493, 0, -1, -1, 1],\n    [9, 494, 1, -1, 0, 1],\n    [9, 495, 1, -1, 0, -1],\n    [9, 496, -1, 1, 0, -1],\n    [9, 497, -1, -1, -1, 0],\n    [9, 498, 0, -1, -1, -1],\n    [9, 499, 0, 1, 1, 1],\n    [9, 500, 1, 0, 1, -1],\n    [9, 501, 1, 1, 0, 1],\n    [9, 502, -1, 1, 0, 1],\n    [9, 503, 1, 1, 1, 0],\n    [10, 1008, -1, -1, 0, 1],\n    [10, 1009, -1, 0, -1, -1],\n    [10, 1010, 1, 1, 0, -1],\n    [10, 1011, 1, 0, -1, -1],\n    [10, 1012, -1, 0, -1, 1],\n    [10, 1013, -1, -1, 0, -1],\n    [10, 1014, -1, 0, 1, 1],\n    [10, 1015, 1, 0, 1, 1],\n    [11, 2032, 1, -1, 1, -1],\n    [11, 2033, -1, 1, -1, 1],\n    [11, 2034, -1, 1, 1, -1],\n    [11, 2035, 1, -1, -1, 1],\n    [11, 2036, 1, 1, 1, 1],\n    [11, 2037, -1, -1, 1, 1],\n    [11, 2038, 1, 1, -1, -1],\n    [11, 2039, -1, -1, 1, -1],\n    [11, 2040, -1, -1, -1, -1],\n    [11, 2041, 1, 1, -1, 1],\n    [11, 2042, 1, -1, 1, 1],\n    [11, 2043, -1, 1, 1, 1],\n    [11, 2044, -1, 1, -1, -1],\n    [11, 2045, -1, -1, -1, 1],\n    [11, 2046, 1, -1, -1, -1],\n    [11, 2047, 1, 1, 1, -1]\n];\n\nconst HCB2 = [\n    [3, 0, 0, 0, 0, 0],\n    [4, 2, 1, 0, 0, 0],\n    [5, 6, -1, 0, 0, 0],\n    [5, 7, 0, 0, 0, 1],\n    [5, 8, 0, 0, -1, 0],\n    [5, 9, 0, 0, 0, -1],\n    [5, 10, 0, -1, 0, 0],\n    [5, 11, 0, 0, 1, 0],\n    [5, 12, 0, 1, 0, 0],\n    [6, 26, 0, -1, 1, 0],\n    [6, 27, -1, 1, 0, 0],\n    [6, 28, 0, 1, -1, 0],\n    [6, 29, 0, 0, 1, -1],\n    [6, 30, 0, 1, 0, -1],\n    [6, 31, 0, 0, -1, 1],\n    [6, 32, -1, 0, 0, -1],\n    [6, 33, 1, -1, 0, 0],\n    [6, 34, 1, 0, -1, 0],\n    [6, 35, -1, -1, 0, 0],\n    [6, 36, 0, 0, -1, -1],\n    [6, 37, 1, 0, 1, 0],\n    [6, 38, 1, 0, 0, 1],\n    [6, 39, 0, -1, 0, 1],\n    [6, 40, -1, 0, 1, 0],\n    [6, 41, 0, 1, 0, 1],\n    [6, 42, 0, -1, -1, 0],\n    [6, 43, -1, 0, 0, 1],\n    [6, 44, 0, -1, 0, -1],\n    [6, 45, -1, 0, -1, 0],\n    [6, 46, 1, 1, 0, 0],\n    [6, 47, 0, 1, 1, 0],\n    [6, 48, 0, 0, 1, 1],\n    [6, 49, 1, 0, 0, -1],\n    [7, 100, 0, 1, -1, 1],\n    [7, 101, 1, 0, -1, 1],\n    [7, 102, -1, 1, -1, 0],\n    [7, 103, 0, -1, 1, -1],\n    [7, 104, 1, -1, 1, 0],\n    [7, 105, 1, 1, 0, -1],\n    [7, 106, 1, 0, 1, 1],\n    [7, 107, -1, 1, 1, 0],\n    [7, 108, 0, -1, -1, 1],\n    [7, 109, 1, 1, 1, 0],\n    [7, 110, -1, 0, 1, -1],\n    [7, 111, -1, -1, -1, 0],\n    [7, 112, -1, 0, -1, 1],\n    [7, 113, 1, -1, -1, 0],\n    [7, 114, 1, 1, -1, 0],\n    [8, 230, 1, -1, 0, 1],\n    [8, 231, -1, 1, 0, -1],\n    [8, 232, -1, -1, 1, 0],\n    [8, 233, -1, 0, 1, 1],\n    [8, 234, -1, -1, 0, 1],\n    [8, 235, -1, -1, 0, -1],\n    [8, 236, 0, -1, -1, -1],\n    [8, 237, 1, 0, 1, -1],\n    [8, 238, 1, 0, -1, -1],\n    [8, 239, 0, 1, -1, -1],\n    [8, 240, 0, 1, 1, 1],\n    [8, 241, -1, 1, 0, 1],\n    [8, 242, -1, 0, -1, -1],\n    [8, 243, 0, 1, 1, -1],\n    [8, 244, 1, -1, 0, -1],\n    [8, 245, 0, -1, 1, 1],\n    [8, 246, 1, 1, 0, 1],\n    [8, 247, 1, -1, 1, -1],\n    [8, 248, -1, 1, -1, 1],\n    [9, 498, 1, -1, -1, 1],\n    [9, 499, -1, -1, -1, -1],\n    [9, 500, -1, 1, 1, -1],\n    [9, 501, -1, 1, 1, 1],\n    [9, 502, 1, 1, 1, 1],\n    [9, 503, -1, -1, 1, -1],\n    [9, 504, 1, -1, 1, 1],\n    [9, 505, -1, 1, -1, -1],\n    [9, 506, -1, -1, 1, 1],\n    [9, 507, 1, 1, -1, -1],\n    [9, 508, 1, -1, -1, -1],\n    [9, 509, -1, -1, -1, 1],\n    [9, 510, 1, 1, -1, 1],\n    [9, 511, 1, 1, 1, -1]\n];\n\nconst HCB3 = [\n    [1, 0, 0, 0, 0, 0],\n    [4, 8, 1, 0, 0, 0],\n    [4, 9, 0, 0, 0, 1],\n    [4, 10, 0, 1, 0, 0],\n    [4, 11, 0, 0, 1, 0],\n    [5, 24, 1, 1, 0, 0],\n    [5, 25, 0, 0, 1, 1],\n    [6, 52, 0, 1, 1, 0],\n    [6, 53, 0, 1, 0, 1],\n    [6, 54, 1, 0, 1, 0],\n    [6, 55, 0, 1, 1, 1],\n    [6, 56, 1, 0, 0, 1],\n    [6, 57, 1, 1, 1, 0],\n    [7, 116, 1, 1, 1, 1],\n    [7, 117, 1, 0, 1, 1],\n    [7, 118, 1, 1, 0, 1],\n    [8, 238, 2, 0, 0, 0],\n    [8, 239, 0, 0, 0, 2],\n    [8, 240, 0, 0, 1, 2],\n    [8, 241, 2, 1, 0, 0],\n    [8, 242, 1, 2, 1, 0],\n    [9, 486, 0, 0, 2, 1],\n    [9, 487, 0, 1, 2, 1],\n    [9, 488, 1, 2, 0, 0],\n    [9, 489, 0, 1, 1, 2],\n    [9, 490, 2, 1, 1, 0],\n    [9, 491, 0, 0, 2, 0],\n    [9, 492, 0, 2, 1, 0],\n    [9, 493, 0, 1, 2, 0],\n    [9, 494, 0, 2, 0, 0],\n    [9, 495, 0, 1, 0, 2],\n    [9, 496, 2, 0, 1, 0],\n    [9, 497, 1, 2, 1, 1],\n    [9, 498, 0, 2, 1, 1],\n    [9, 499, 1, 1, 2, 0],\n    [9, 500, 1, 1, 2, 1],\n    [10, 1002, 1, 2, 0, 1],\n    [10, 1003, 1, 0, 2, 0],\n    [10, 1004, 1, 0, 2, 1],\n    [10, 1005, 0, 2, 0, 1],\n    [10, 1006, 2, 1, 1, 1],\n    [10, 1007, 1, 1, 1, 2],\n    [10, 1008, 2, 1, 0, 1],\n    [10, 1009, 1, 0, 1, 2],\n    [10, 1010, 0, 0, 2, 2],\n    [10, 1011, 0, 1, 2, 2],\n    [10, 1012, 2, 2, 1, 0],\n    [10, 1013, 1, 2, 2, 0],\n    [10, 1014, 1, 0, 0, 2],\n    [10, 1015, 2, 0, 0, 1],\n    [10, 1016, 0, 2, 2, 1],\n    [11, 2034, 2, 2, 0, 0],\n    [11, 2035, 1, 2, 2, 1],\n    [11, 2036, 1, 1, 0, 2],\n    [11, 2037, 2, 0, 1, 1],\n    [11, 2038, 1, 1, 2, 2],\n    [11, 2039, 2, 2, 1, 1],\n    [11, 2040, 0, 2, 2, 0],\n    [11, 2041, 0, 2, 1, 2],\n    [12, 4084, 1, 0, 2, 2],\n    [12, 4085, 2, 2, 0, 1],\n    [12, 4086, 2, 1, 2, 0],\n    [12, 4087, 2, 2, 2, 0],\n    [12, 4088, 0, 2, 2, 2],\n    [12, 4089, 2, 2, 2, 1],\n    [12, 4090, 2, 1, 2, 1],\n    [12, 4091, 1, 2, 1, 2],\n    [12, 4092, 1, 2, 2, 2],\n    [13, 8186, 0, 2, 0, 2],\n    [13, 8187, 2, 0, 2, 0],\n    [13, 8188, 1, 2, 0, 2],\n    [14, 16378, 2, 0, 2, 1],\n    [14, 16379, 2, 1, 1, 2],\n    [14, 16380, 2, 1, 0, 2],\n    [15, 32762, 2, 2, 2, 2],\n    [15, 32763, 2, 2, 1, 2],\n    [15, 32764, 2, 1, 2, 2],\n    [15, 32765, 2, 0, 1, 2],\n    [15, 32766, 2, 0, 0, 2],\n    [16, 65534, 2, 2, 0, 2],\n    [16, 65535, 2, 0, 2, 2]\n];\n\nconst HCB4 = [\n    [4, 0, 1, 1, 1, 1],\n    [4, 1, 0, 1, 1, 1],\n    [4, 2, 1, 1, 0, 1],\n    [4, 3, 1, 1, 1, 0],\n    [4, 4, 1, 0, 1, 1],\n    [4, 5, 1, 0, 0, 0],\n    [4, 6, 1, 1, 0, 0],\n    [4, 7, 0, 0, 0, 0],\n    [4, 8, 0, 0, 1, 1],\n    [4, 9, 1, 0, 1, 0],\n    [5, 20, 1, 0, 0, 1],\n    [5, 21, 0, 1, 1, 0],\n    [5, 22, 0, 0, 0, 1],\n    [5, 23, 0, 1, 0, 1],\n    [5, 24, 0, 0, 1, 0],\n    [5, 25, 0, 1, 0, 0],\n    [7, 104, 2, 1, 1, 1],\n    [7, 105, 1, 1, 2, 1],\n    [7, 106, 1, 2, 1, 1],\n    [7, 107, 1, 1, 1, 2],\n    [7, 108, 2, 1, 1, 0],\n    [7, 109, 2, 1, 0, 1],\n    [7, 110, 1, 2, 1, 0],\n    [7, 111, 2, 0, 1, 1],\n    [7, 112, 0, 1, 2, 1],\n    [8, 226, 0, 1, 1, 2],\n    [8, 227, 1, 1, 2, 0],\n    [8, 228, 0, 2, 1, 1],\n    [8, 229, 1, 0, 1, 2],\n    [8, 230, 1, 2, 0, 1],\n    [8, 231, 1, 1, 0, 2],\n    [8, 232, 1, 0, 2, 1],\n    [8, 233, 2, 1, 0, 0],\n    [8, 234, 2, 0, 1, 0],\n    [8, 235, 1, 2, 0, 0],\n    [8, 236, 2, 0, 0, 1],\n    [8, 237, 0, 1, 0, 2],\n    [8, 238, 0, 2, 1, 0],\n    [8, 239, 0, 0, 1, 2],\n    [8, 240, 0, 1, 2, 0],\n    [8, 241, 0, 2, 0, 1],\n    [8, 242, 1, 0, 0, 2],\n    [8, 243, 0, 0, 2, 1],\n    [8, 244, 1, 0, 2, 0],\n    [8, 245, 2, 0, 0, 0],\n    [8, 246, 0, 0, 0, 2],\n    [9, 494, 0, 2, 0, 0],\n    [9, 495, 0, 0, 2, 0],\n    [9, 496, 1, 2, 2, 1],\n    [9, 497, 2, 2, 1, 1],\n    [9, 498, 2, 1, 2, 1],\n    [9, 499, 1, 1, 2, 2],\n    [9, 500, 1, 2, 1, 2],\n    [9, 501, 2, 1, 1, 2],\n    [10, 1004, 1, 2, 2, 0],\n    [10, 1005, 2, 2, 1, 0],\n    [10, 1006, 2, 1, 2, 0],\n    [10, 1007, 0, 2, 2, 1],\n    [10, 1008, 0, 1, 2, 2],\n    [10, 1009, 2, 2, 0, 1],\n    [10, 1010, 0, 2, 1, 2],\n    [10, 1011, 2, 0, 2, 1],\n    [10, 1012, 1, 0, 2, 2],\n    [10, 1013, 2, 2, 2, 1],\n    [10, 1014, 1, 2, 0, 2],\n    [10, 1015, 2, 0, 1, 2],\n    [10, 1016, 2, 1, 0, 2],\n    [10, 1017, 1, 2, 2, 2],\n    [11, 2036, 2, 1, 2, 2],\n    [11, 2037, 2, 2, 1, 2],\n    [11, 2038, 0, 2, 2, 0],\n    [11, 2039, 2, 2, 0, 0],\n    [11, 2040, 0, 0, 2, 2],\n    [11, 2041, 2, 0, 2, 0],\n    [11, 2042, 0, 2, 0, 2],\n    [11, 2043, 2, 0, 0, 2],\n    [11, 2044, 2, 2, 2, 2],\n    [11, 2045, 0, 2, 2, 2],\n    [11, 2046, 2, 2, 2, 0],\n    [12, 4094, 2, 2, 0, 2],\n    [12, 4095, 2, 0, 2, 2]\n];\n\nconst HCB5 = [\n    [1, 0, 0, 0],\n    [4, 8, -1, 0],\n    [4, 9, 1, 0],\n    [4, 10, 0, 1],\n    [4, 11, 0, -1],\n    [5, 24, 1, -1],\n    [5, 25, -1, 1],\n    [5, 26, -1, -1],\n    [5, 27, 1, 1],\n    [7, 112, -2, 0],\n    [7, 113, 0, 2],\n    [7, 114, 2, 0],\n    [7, 115, 0, -2],\n    [8, 232, -2, -1],\n    [8, 233, 2, 1],\n    [8, 234, -1, -2],\n    [8, 235, 1, 2],\n    [8, 236, -2, 1],\n    [8, 237, 2, -1],\n    [8, 238, -1, 2],\n    [8, 239, 1, -2],\n    [8, 240, -3, 0],\n    [8, 241, 3, 0],\n    [8, 242, 0, -3],\n    [8, 243, 0, 3],\n    [9, 488, -3, -1],\n    [9, 489, 1, 3],\n    [9, 490, 3, 1],\n    [9, 491, -1, -3],\n    [9, 492, -3, 1],\n    [9, 493, 3, -1],\n    [9, 494, 1, -3],\n    [9, 495, -1, 3],\n    [9, 496, -2, 2],\n    [9, 497, 2, 2],\n    [9, 498, -2, -2],\n    [9, 499, 2, -2],\n    [10, 1000, -3, -2],\n    [10, 1001, 3, -2],\n    [10, 1002, -2, 3],\n    [10, 1003, 2, -3],\n    [10, 1004, 3, 2],\n    [10, 1005, 2, 3],\n    [10, 1006, -3, 2],\n    [10, 1007, -2, -3],\n    [10, 1008, 0, -4],\n    [10, 1009, -4, 0],\n    [10, 1010, 4, 1],\n    [10, 1011, 4, 0],\n    [11, 2024, -4, -1],\n    [11, 2025, 0, 4],\n    [11, 2026, 4, -1],\n    [11, 2027, -1, -4],\n    [11, 2028, 1, 4],\n    [11, 2029, -1, 4],\n    [11, 2030, -4, 1],\n    [11, 2031, 1, -4],\n    [11, 2032, 3, -3],\n    [11, 2033, -3, -3],\n    [11, 2034, -3, 3],\n    [11, 2035, -2, 4],\n    [11, 2036, -4, -2],\n    [11, 2037, 4, 2],\n    [11, 2038, 2, -4],\n    [11, 2039, 2, 4],\n    [11, 2040, 3, 3],\n    [11, 2041, -4, 2],\n    [12, 4084, -2, -4],\n    [12, 4085, 4, -2],\n    [12, 4086, 3, -4],\n    [12, 4087, -4, -3],\n    [12, 4088, -4, 3],\n    [12, 4089, 3, 4],\n    [12, 4090, -3, 4],\n    [12, 4091, 4, 3],\n    [12, 4092, 4, -3],\n    [12, 4093, -3, -4],\n    [13, 8188, 4, -4],\n    [13, 8189, -4, 4],\n    [13, 8190, 4, 4],\n    [13, 8191, -4, -4]\n];\n\nconst HCB6 = [\n    [4, 0, 0, 0],\n    [4, 1, 1, 0],\n    [4, 2, 0, -1],\n    [4, 3, 0, 1],\n    [4, 4, -1, 0],\n    [4, 5, 1, 1],\n    [4, 6, -1, 1],\n    [4, 7, 1, -1],\n    [4, 8, -1, -1],\n    [6, 36, 2, -1],\n    [6, 37, 2, 1],\n    [6, 38, -2, 1],\n    [6, 39, -2, -1],\n    [6, 40, -2, 0],\n    [6, 41, -1, 2],\n    [6, 42, 2, 0],\n    [6, 43, 1, -2],\n    [6, 44, 1, 2],\n    [6, 45, 0, -2],\n    [6, 46, -1, -2],\n    [6, 47, 0, 2],\n    [6, 48, 2, -2],\n    [6, 49, -2, 2],\n    [6, 50, -2, -2],\n    [6, 51, 2, 2],\n    [7, 104, -3, 1],\n    [7, 105, 3, 1],\n    [7, 106, 3, -1],\n    [7, 107, -1, 3],\n    [7, 108, -3, -1],\n    [7, 109, 1, 3],\n    [7, 110, 1, -3],\n    [7, 111, -1, -3],\n    [7, 112, 3, 0],\n    [7, 113, -3, 0],\n    [7, 114, 0, -3],\n    [7, 115, 0, 3],\n    [7, 116, 3, 2],\n    [8, 234, -3, -2],\n    [8, 235, -2, 3],\n    [8, 236, 2, 3],\n    [8, 237, 3, -2],\n    [8, 238, 2, -3],\n    [8, 239, -2, -3],\n    [8, 240, -3, 2],\n    [8, 241, 3, 3],\n    [9, 484, 3, -3],\n    [9, 485, -3, -3],\n    [9, 486, -3, 3],\n    [9, 487, 1, -4],\n    [9, 488, -1, -4],\n    [9, 489, 4, 1],\n    [9, 490, -4, 1],\n    [9, 491, -4, -1],\n    [9, 492, 1, 4],\n    [9, 493, 4, -1],\n    [9, 494, -1, 4],\n    [9, 495, 0, -4],\n    [9, 496, -4, 2],\n    [9, 497, -4, -2],\n    [9, 498, 2, 4],\n    [9, 499, -2, -4],\n    [9, 500, -4, 0],\n    [9, 501, 4, 2],\n    [9, 502, 4, -2],\n    [9, 503, -2, 4],\n    [9, 504, 4, 0],\n    [9, 505, 2, -4],\n    [9, 506, 0, 4],\n    [10, 1014, -3, -4],\n    [10, 1015, -3, 4],\n    [10, 1016, 3, -4],\n    [10, 1017, 4, -3],\n    [10, 1018, 3, 4],\n    [10, 1019, 4, 3],\n    [10, 1020, -4, 3],\n    [10, 1021, -4, -3],\n    [11, 2044, 4, 4],\n    [11, 2045, -4, 4],\n    [11, 2046, -4, -4],\n    [11, 2047, 4, -4]\n];\n\nconst HCB7 = [\n    [1, 0, 0, 0],\n    [3, 4, 1, 0],\n    [3, 5, 0, 1],\n    [4, 12, 1, 1],\n    [6, 52, 2, 1],\n    [6, 53, 1, 2],\n    [6, 54, 2, 0],\n    [6, 55, 0, 2],\n    [7, 112, 3, 1],\n    [7, 113, 1, 3],\n    [7, 114, 2, 2],\n    [7, 115, 3, 0],\n    [7, 116, 0, 3],\n    [8, 234, 2, 3],\n    [8, 235, 3, 2],\n    [8, 236, 1, 4],\n    [8, 237, 4, 1],\n    [8, 238, 1, 5],\n    [8, 239, 5, 1],\n    [8, 240, 3, 3],\n    [8, 241, 2, 4],\n    [8, 242, 0, 4],\n    [8, 243, 4, 0],\n    [9, 488, 4, 2],\n    [9, 489, 2, 5],\n    [9, 490, 5, 2],\n    [9, 491, 0, 5],\n    [9, 492, 6, 1],\n    [9, 493, 5, 0],\n    [9, 494, 1, 6],\n    [9, 495, 4, 3],\n    [9, 496, 3, 5],\n    [9, 497, 3, 4],\n    [9, 498, 5, 3],\n    [9, 499, 2, 6],\n    [9, 500, 6, 2],\n    [9, 501, 1, 7],\n    [10, 1004, 3, 6],\n    [10, 1005, 0, 6],\n    [10, 1006, 6, 0],\n    [10, 1007, 4, 4],\n    [10, 1008, 7, 1],\n    [10, 1009, 4, 5],\n    [10, 1010, 7, 2],\n    [10, 1011, 5, 4],\n    [10, 1012, 6, 3],\n    [10, 1013, 2, 7],\n    [10, 1014, 7, 3],\n    [10, 1015, 6, 4],\n    [10, 1016, 5, 5],\n    [10, 1017, 4, 6],\n    [10, 1018, 3, 7],\n    [11, 2038, 7, 0],\n    [11, 2039, 0, 7],\n    [11, 2040, 6, 5],\n    [11, 2041, 5, 6],\n    [11, 2042, 7, 4],\n    [11, 2043, 4, 7],\n    [11, 2044, 5, 7],\n    [11, 2045, 7, 5],\n    [12, 4092, 7, 6],\n    [12, 4093, 6, 6],\n    [12, 4094, 6, 7],\n    [12, 4095, 7, 7]\n];\n\nconst HCB8 = [\n    [3, 0, 1, 1],\n    [4, 2, 2, 1],\n    [4, 3, 1, 0],\n    [4, 4, 1, 2],\n    [4, 5, 0, 1],\n    [4, 6, 2, 2],\n    [5, 14, 0, 0],\n    [5, 15, 2, 0],\n    [5, 16, 0, 2],\n    [5, 17, 3, 1],\n    [5, 18, 1, 3],\n    [5, 19, 3, 2],\n    [5, 20, 2, 3],\n    [6, 42, 3, 3],\n    [6, 43, 4, 1],\n    [6, 44, 1, 4],\n    [6, 45, 4, 2],\n    [6, 46, 2, 4],\n    [6, 47, 3, 0],\n    [6, 48, 0, 3],\n    [6, 49, 4, 3],\n    [6, 50, 3, 4],\n    [6, 51, 5, 2],\n    [7, 104, 5, 1],\n    [7, 105, 2, 5],\n    [7, 106, 1, 5],\n    [7, 107, 5, 3],\n    [7, 108, 3, 5],\n    [7, 109, 4, 4],\n    [7, 110, 5, 4],\n    [7, 111, 0, 4],\n    [7, 112, 4, 5],\n    [7, 113, 4, 0],\n    [7, 114, 2, 6],\n    [7, 115, 6, 2],\n    [7, 116, 6, 1],\n    [7, 117, 1, 6],\n    [8, 236, 3, 6],\n    [8, 237, 6, 3],\n    [8, 238, 5, 5],\n    [8, 239, 5, 0],\n    [8, 240, 6, 4],\n    [8, 241, 0, 5],\n    [8, 242, 4, 6],\n    [8, 243, 7, 1],\n    [8, 244, 7, 2],\n    [8, 245, 2, 7],\n    [8, 246, 6, 5],\n    [8, 247, 7, 3],\n    [8, 248, 1, 7],\n    [8, 249, 5, 6],\n    [8, 250, 3, 7],\n    [9, 502, 6, 6],\n    [9, 503, 7, 4],\n    [9, 504, 6, 0],\n    [9, 505, 4, 7],\n    [9, 506, 0, 6],\n    [9, 507, 7, 5],\n    [9, 508, 7, 6],\n    [9, 509, 6, 7],\n    [10, 1020, 5, 7],\n    [10, 1021, 7, 0],\n    [10, 1022, 0, 7],\n    [10, 1023, 7, 7]\n];\n\nconst HCB9 = [\n    [1, 0, 0, 0],\n    [3, 4, 1, 0],\n    [3, 5, 0, 1],\n    [4, 12, 1, 1],\n    [6, 52, 2, 1],\n    [6, 53, 1, 2],\n    [6, 54, 2, 0],\n    [6, 55, 0, 2],\n    [7, 112, 3, 1],\n    [7, 113, 2, 2],\n    [7, 114, 1, 3],\n    [8, 230, 3, 0],\n    [8, 231, 0, 3],\n    [8, 232, 2, 3],\n    [8, 233, 3, 2],\n    [8, 234, 1, 4],\n    [8, 235, 4, 1],\n    [8, 236, 2, 4],\n    [8, 237, 1, 5],\n    [9, 476, 4, 2],\n    [9, 477, 3, 3],\n    [9, 478, 0, 4],\n    [9, 479, 4, 0],\n    [9, 480, 5, 1],\n    [9, 481, 2, 5],\n    [9, 482, 1, 6],\n    [9, 483, 3, 4],\n    [9, 484, 5, 2],\n    [9, 485, 6, 1],\n    [9, 486, 4, 3],\n    [10, 974, 0, 5],\n    [10, 975, 2, 6],\n    [10, 976, 5, 0],\n    [10, 977, 1, 7],\n    [10, 978, 3, 5],\n    [10, 979, 1, 8],\n    [10, 980, 8, 1],\n    [10, 981, 4, 4],\n    [10, 982, 5, 3],\n    [10, 983, 6, 2],\n    [10, 984, 7, 1],\n    [10, 985, 0, 6],\n    [10, 986, 8, 2],\n    [10, 987, 2, 8],\n    [10, 988, 3, 6],\n    [10, 989, 2, 7],\n    [10, 990, 4, 5],\n    [10, 991, 9, 1],\n    [10, 992, 1, 9],\n    [10, 993, 7, 2],\n    [11, 1988, 6, 0],\n    [11, 1989, 5, 4],\n    [11, 1990, 6, 3],\n    [11, 1991, 8, 3],\n    [11, 1992, 0, 7],\n    [11, 1993, 9, 2],\n    [11, 1994, 3, 8],\n    [11, 1995, 4, 6],\n    [11, 1996, 3, 7],\n    [11, 1997, 0, 8],\n    [11, 1998, 10, 1],\n    [11, 1999, 6, 4],\n    [11, 2000, 2, 9],\n    [11, 2001, 5, 5],\n    [11, 2002, 8, 0],\n    [11, 2003, 7, 0],\n    [11, 2004, 7, 3],\n    [11, 2005, 10, 2],\n    [11, 2006, 9, 3],\n    [11, 2007, 8, 4],\n    [11, 2008, 1, 10],\n    [11, 2009, 7, 4],\n    [11, 2010, 6, 5],\n    [11, 2011, 5, 6],\n    [11, 2012, 4, 8],\n    [11, 2013, 4, 7],\n    [11, 2014, 3, 9],\n    [11, 2015, 11, 1],\n    [11, 2016, 5, 8],\n    [11, 2017, 9, 0],\n    [11, 2018, 8, 5],\n    [12, 4038, 10, 3],\n    [12, 4039, 2, 10],\n    [12, 4040, 0, 9],\n    [12, 4041, 11, 2],\n    [12, 4042, 9, 4],\n    [12, 4043, 6, 6],\n    [12, 4044, 12, 1],\n    [12, 4045, 4, 9],\n    [12, 4046, 8, 6],\n    [12, 4047, 1, 11],\n    [12, 4048, 9, 5],\n    [12, 4049, 10, 4],\n    [12, 4050, 5, 7],\n    [12, 4051, 7, 5],\n    [12, 4052, 2, 11],\n    [12, 4053, 1, 12],\n    [12, 4054, 12, 2],\n    [12, 4055, 11, 3],\n    [12, 4056, 3, 10],\n    [12, 4057, 5, 9],\n    [12, 4058, 6, 7],\n    [12, 4059, 8, 7],\n    [12, 4060, 11, 4],\n    [12, 4061, 0, 10],\n    [12, 4062, 7, 6],\n    [12, 4063, 12, 3],\n    [12, 4064, 10, 0],\n    [12, 4065, 10, 5],\n    [12, 4066, 4, 10],\n    [12, 4067, 6, 8],\n    [12, 4068, 2, 12],\n    [12, 4069, 9, 6],\n    [12, 4070, 9, 7],\n    [12, 4071, 4, 11],\n    [12, 4072, 11, 0],\n    [12, 4073, 6, 9],\n    [12, 4074, 3, 11],\n    [12, 4075, 5, 10],\n    [13, 8152, 8, 8],\n    [13, 8153, 7, 8],\n    [13, 8154, 12, 5],\n    [13, 8155, 3, 12],\n    [13, 8156, 11, 5],\n    [13, 8157, 7, 7],\n    [13, 8158, 12, 4],\n    [13, 8159, 11, 6],\n    [13, 8160, 10, 6],\n    [13, 8161, 4, 12],\n    [13, 8162, 7, 9],\n    [13, 8163, 5, 11],\n    [13, 8164, 0, 11],\n    [13, 8165, 12, 6],\n    [13, 8166, 6, 10],\n    [13, 8167, 12, 0],\n    [13, 8168, 10, 7],\n    [13, 8169, 5, 12],\n    [13, 8170, 7, 10],\n    [13, 8171, 9, 8],\n    [13, 8172, 0, 12],\n    [13, 8173, 11, 7],\n    [13, 8174, 8, 9],\n    [13, 8175, 9, 9],\n    [13, 8176, 10, 8],\n    [13, 8177, 7, 11],\n    [13, 8178, 12, 7],\n    [13, 8179, 6, 11],\n    [13, 8180, 8, 11],\n    [13, 8181, 11, 8],\n    [13, 8182, 7, 12],\n    [13, 8183, 6, 12],\n    [14, 16368, 8, 10],\n    [14, 16369, 10, 9],\n    [14, 16370, 8, 12],\n    [14, 16371, 9, 10],\n    [14, 16372, 9, 11],\n    [14, 16373, 9, 12],\n    [14, 16374, 10, 11],\n    [14, 16375, 12, 9],\n    [14, 16376, 10, 10],\n    [14, 16377, 11, 9],\n    [14, 16378, 12, 8],\n    [14, 16379, 11, 10],\n    [14, 16380, 12, 10],\n    [14, 16381, 12, 11],\n    [15, 32764, 10, 12],\n    [15, 32765, 11, 11],\n    [15, 32766, 11, 12],\n    [15, 32767, 12, 12]\n];\n\nconst HCB10 = [\n    [4, 0, 1, 1],\n    [4, 1, 1, 2],\n    [4, 2, 2, 1],\n    [5, 6, 2, 2],\n    [5, 7, 1, 0],\n    [5, 8, 0, 1],\n    [5, 9, 1, 3],\n    [5, 10, 3, 2],\n    [5, 11, 3, 1],\n    [5, 12, 2, 3],\n    [5, 13, 3, 3],\n    [6, 28, 2, 0],\n    [6, 29, 0, 2],\n    [6, 30, 2, 4],\n    [6, 31, 4, 2],\n    [6, 32, 1, 4],\n    [6, 33, 4, 1],\n    [6, 34, 0, 0],\n    [6, 35, 4, 3],\n    [6, 36, 3, 4],\n    [6, 37, 3, 0],\n    [6, 38, 0, 3],\n    [6, 39, 4, 4],\n    [6, 40, 2, 5],\n    [6, 41, 5, 2],\n    [7, 84, 1, 5],\n    [7, 85, 5, 1],\n    [7, 86, 5, 3],\n    [7, 87, 3, 5],\n    [7, 88, 5, 4],\n    [7, 89, 4, 5],\n    [7, 90, 6, 2],\n    [7, 91, 2, 6],\n    [7, 92, 6, 3],\n    [7, 93, 4, 0],\n    [7, 94, 6, 1],\n    [7, 95, 0, 4],\n    [7, 96, 1, 6],\n    [7, 97, 3, 6],\n    [7, 98, 5, 5],\n    [7, 99, 6, 4],\n    [7, 100, 4, 6],\n    [8, 202, 6, 5],\n    [8, 203, 7, 2],\n    [8, 204, 3, 7],\n    [8, 205, 2, 7],\n    [8, 206, 5, 6],\n    [8, 207, 8, 2],\n    [8, 208, 7, 3],\n    [8, 209, 5, 0],\n    [8, 210, 7, 1],\n    [8, 211, 0, 5],\n    [8, 212, 8, 1],\n    [8, 213, 1, 7],\n    [8, 214, 8, 3],\n    [8, 215, 7, 4],\n    [8, 216, 4, 7],\n    [8, 217, 2, 8],\n    [8, 218, 6, 6],\n    [8, 219, 7, 5],\n    [8, 220, 1, 8],\n    [8, 221, 3, 8],\n    [8, 222, 8, 4],\n    [8, 223, 4, 8],\n    [8, 224, 5, 7],\n    [8, 225, 8, 5],\n    [8, 226, 5, 8],\n    [9, 454, 7, 6],\n    [9, 455, 6, 7],\n    [9, 456, 9, 2],\n    [9, 457, 6, 0],\n    [9, 458, 6, 8],\n    [9, 459, 9, 3],\n    [9, 460, 3, 9],\n    [9, 461, 9, 1],\n    [9, 462, 2, 9],\n    [9, 463, 0, 6],\n    [9, 464, 8, 6],\n    [9, 465, 9, 4],\n    [9, 466, 4, 9],\n    [9, 467, 10, 2],\n    [9, 468, 1, 9],\n    [9, 469, 7, 7],\n    [9, 470, 8, 7],\n    [9, 471, 9, 5],\n    [9, 472, 7, 8],\n    [9, 473, 10, 3],\n    [9, 474, 5, 9],\n    [9, 475, 10, 4],\n    [9, 476, 2, 10],\n    [9, 477, 10, 1],\n    [9, 478, 3, 10],\n    [9, 479, 9, 6],\n    [9, 480, 6, 9],\n    [9, 481, 8, 0],\n    [9, 482, 4, 10],\n    [9, 483, 7, 0],\n    [9, 484, 11, 2],\n    [10, 970, 7, 9],\n    [10, 971, 11, 3],\n    [10, 972, 10, 6],\n    [10, 973, 1, 10],\n    [10, 974, 11, 1],\n    [10, 975, 9, 7],\n    [10, 976, 0, 7],\n    [10, 977, 8, 8],\n    [10, 978, 10, 5],\n    [10, 979, 3, 11],\n    [10, 980, 5, 10],\n    [10, 981, 8, 9],\n    [10, 982, 11, 5],\n    [10, 983, 0, 8],\n    [10, 984, 11, 4],\n    [10, 985, 2, 11],\n    [10, 986, 7, 10],\n    [10, 987, 6, 10],\n    [10, 988, 10, 7],\n    [10, 989, 4, 11],\n    [10, 990, 1, 11],\n    [10, 991, 12, 2],\n    [10, 992, 9, 8],\n    [10, 993, 12, 3],\n    [10, 994, 11, 6],\n    [10, 995, 5, 11],\n    [10, 996, 12, 4],\n    [10, 997, 11, 7],\n    [10, 998, 12, 5],\n    [10, 999, 3, 12],\n    [10, 1000, 6, 11],\n    [10, 1001, 9, 0],\n    [10, 1002, 10, 8],\n    [10, 1003, 10, 0],\n    [10, 1004, 12, 1],\n    [10, 1005, 0, 9],\n    [10, 1006, 4, 12],\n    [10, 1007, 9, 9],\n    [10, 1008, 12, 6],\n    [10, 1009, 2, 12],\n    [10, 1010, 8, 10],\n    [11, 2022, 9, 10],\n    [11, 2023, 1, 12],\n    [11, 2024, 11, 8],\n    [11, 2025, 12, 7],\n    [11, 2026, 7, 11],\n    [11, 2027, 5, 12],\n    [11, 2028, 6, 12],\n    [11, 2029, 10, 9],\n    [11, 2030, 8, 11],\n    [11, 2031, 12, 8],\n    [11, 2032, 0, 10],\n    [11, 2033, 7, 12],\n    [11, 2034, 11, 0],\n    [11, 2035, 10, 10],\n    [11, 2036, 11, 9],\n    [11, 2037, 11, 10],\n    [11, 2038, 0, 11],\n    [11, 2039, 11, 11],\n    [11, 2040, 9, 11],\n    [11, 2041, 10, 11],\n    [11, 2042, 12, 0],\n    [11, 2043, 8, 12],\n    [12, 4088, 12, 9],\n    [12, 4089, 10, 12],\n    [12, 4090, 9, 12],\n    [12, 4091, 11, 12],\n    [12, 4092, 12, 11],\n    [12, 4093, 0, 12],\n    [12, 4094, 12, 10],\n    [12, 4095, 12, 12]\n];\n\nconst HCB11 = [\n    [4, 0, 0, 0],\n    [4, 1, 1, 1],\n    [5, 4, 16, 16],\n    [5, 5, 1, 0],\n    [5, 6, 0, 1],\n    [5, 7, 2, 1],\n    [5, 8, 1, 2],\n    [5, 9, 2, 2],\n    [6, 20, 1, 3],\n    [6, 21, 3, 1],\n    [6, 22, 3, 2],\n    [6, 23, 2, 0],\n    [6, 24, 2, 3],\n    [6, 25, 0, 2],\n    [6, 26, 3, 3],\n    [7, 54, 4, 1],\n    [7, 55, 1, 4],\n    [7, 56, 4, 2],\n    [7, 57, 2, 4],\n    [7, 58, 4, 3],\n    [7, 59, 3, 4],\n    [7, 60, 3, 0],\n    [7, 61, 0, 3],\n    [7, 62, 5, 1],\n    [7, 63, 5, 2],\n    [7, 64, 2, 5],\n    [7, 65, 4, 4],\n    [7, 66, 1, 5],\n    [7, 67, 5, 3],\n    [7, 68, 3, 5],\n    [7, 69, 5, 4],\n    [8, 140, 4, 5],\n    [8, 141, 6, 2],\n    [8, 142, 2, 6],\n    [8, 143, 6, 1],\n    [8, 144, 6, 3],\n    [8, 145, 3, 6],\n    [8, 146, 1, 6],\n    [8, 147, 4, 16],\n    [8, 148, 3, 16],\n    [8, 149, 16, 5],\n    [8, 150, 16, 3],\n    [8, 151, 16, 4],\n    [8, 152, 6, 4],\n    [8, 153, 16, 6],\n    [8, 154, 4, 0],\n    [8, 155, 4, 6],\n    [8, 156, 0, 4],\n    [8, 157, 2, 16],\n    [8, 158, 5, 5],\n    [8, 159, 5, 16],\n    [8, 160, 16, 7],\n    [8, 161, 16, 2],\n    [8, 162, 16, 8],\n    [8, 163, 2, 7],\n    [8, 164, 7, 2],\n    [8, 165, 3, 7],\n    [8, 166, 6, 5],\n    [8, 167, 5, 6],\n    [8, 168, 6, 16],\n    [8, 169, 16, 10],\n    [8, 170, 7, 3],\n    [8, 171, 7, 1],\n    [8, 172, 16, 9],\n    [8, 173, 7, 16],\n    [8, 174, 1, 16],\n    [8, 175, 1, 7],\n    [8, 176, 4, 7],\n    [8, 177, 16, 11],\n    [8, 178, 7, 4],\n    [8, 179, 16, 12],\n    [8, 180, 8, 16],\n    [8, 181, 16, 1],\n    [8, 182, 6, 6],\n    [8, 183, 9, 16],\n    [8, 184, 2, 8],\n    [8, 185, 5, 7],\n    [8, 186, 10, 16],\n    [8, 187, 16, 13],\n    [8, 188, 8, 3],\n    [8, 189, 8, 2],\n    [8, 190, 3, 8],\n    [8, 191, 5, 0],\n    [8, 192, 16, 14],\n    [8, 193, 11, 16],\n    [8, 194, 7, 5],\n    [8, 195, 4, 8],\n    [8, 196, 6, 7],\n    [8, 197, 7, 6],\n    [8, 198, 0, 5],\n    [9, 398, 8, 4],\n    [9, 399, 16, 15],\n    [9, 400, 12, 16],\n    [9, 401, 1, 8],\n    [9, 402, 8, 1],\n    [9, 403, 14, 16],\n    [9, 404, 5, 8],\n    [9, 405, 13, 16],\n    [9, 406, 3, 9],\n    [9, 407, 8, 5],\n    [9, 408, 7, 7],\n    [9, 409, 2, 9],\n    [9, 410, 8, 6],\n    [9, 411, 9, 2],\n    [9, 412, 9, 3],\n    [9, 413, 15, 16],\n    [9, 414, 4, 9],\n    [9, 415, 6, 8],\n    [9, 416, 6, 0],\n    [9, 417, 9, 4],\n    [9, 418, 5, 9],\n    [9, 419, 8, 7],\n    [9, 420, 7, 8],\n    [9, 421, 1, 9],\n    [9, 422, 10, 3],\n    [9, 423, 0, 6],\n    [9, 424, 10, 2],\n    [9, 425, 9, 1],\n    [9, 426, 9, 5],\n    [9, 427, 4, 10],\n    [9, 428, 2, 10],\n    [9, 429, 9, 6],\n    [9, 430, 3, 10],\n    [9, 431, 6, 9],\n    [9, 432, 10, 4],\n    [9, 433, 8, 8],\n    [9, 434, 10, 5],\n    [9, 435, 9, 7],\n    [9, 436, 11, 3],\n    [9, 437, 1, 10],\n    [9, 438, 7, 0],\n    [9, 439, 10, 6],\n    [9, 440, 7, 9],\n    [9, 441, 3, 11],\n    [9, 442, 5, 10],\n    [9, 443, 10, 1],\n    [9, 444, 4, 11],\n    [9, 445, 11, 2],\n    [9, 446, 13, 2],\n    [9, 447, 6, 10],\n    [9, 448, 13, 3],\n    [9, 449, 2, 11],\n    [9, 450, 16, 0],\n    [9, 451, 5, 11],\n    [9, 452, 11, 5],\n    [10, 906, 11, 4],\n    [10, 907, 9, 8],\n    [10, 908, 7, 10],\n    [10, 909, 8, 9],\n    [10, 910, 0, 16],\n    [10, 911, 4, 13],\n    [10, 912, 0, 7],\n    [10, 913, 3, 13],\n    [10, 914, 11, 6],\n    [10, 915, 13, 1],\n    [10, 916, 13, 4],\n    [10, 917, 12, 3],\n    [10, 918, 2, 13],\n    [10, 919, 13, 5],\n    [10, 920, 8, 10],\n    [10, 921, 6, 11],\n    [10, 922, 10, 8],\n    [10, 923, 10, 7],\n    [10, 924, 14, 2],\n    [10, 925, 12, 4],\n    [10, 926, 1, 11],\n    [10, 927, 4, 12],\n    [10, 928, 11, 1],\n    [10, 929, 3, 12],\n    [10, 930, 1, 13],\n    [10, 931, 12, 2],\n    [10, 932, 7, 11],\n    [10, 933, 3, 14],\n    [10, 934, 5, 12],\n    [10, 935, 5, 13],\n    [10, 936, 14, 4],\n    [10, 937, 4, 14],\n    [10, 938, 11, 7],\n    [10, 939, 14, 3],\n    [10, 940, 12, 5],\n    [10, 941, 13, 6],\n    [10, 942, 12, 6],\n    [10, 943, 8, 0],\n    [10, 944, 11, 8],\n    [10, 945, 2, 12],\n    [10, 946, 9, 9],\n    [10, 947, 14, 5],\n    [10, 948, 6, 13],\n    [10, 949, 10, 10],\n    [10, 950, 15, 2],\n    [10, 951, 8, 11],\n    [10, 952, 9, 10],\n    [10, 953, 14, 6],\n    [10, 954, 10, 9],\n    [10, 955, 5, 14],\n    [10, 956, 11, 9],\n    [10, 957, 14, 1],\n    [10, 958, 2, 14],\n    [10, 959, 6, 12],\n    [10, 960, 1, 12],\n    [10, 961, 13, 8],\n    [10, 962, 0, 8],\n    [10, 963, 13, 7],\n    [10, 964, 7, 12],\n    [10, 965, 12, 7],\n    [10, 966, 7, 13],\n    [10, 967, 15, 3],\n    [10, 968, 12, 1],\n    [10, 969, 6, 14],\n    [10, 970, 2, 15],\n    [10, 971, 15, 5],\n    [10, 972, 15, 4],\n    [10, 973, 1, 14],\n    [10, 974, 9, 11],\n    [10, 975, 4, 15],\n    [10, 976, 14, 7],\n    [10, 977, 8, 13],\n    [10, 978, 13, 9],\n    [10, 979, 8, 12],\n    [10, 980, 5, 15],\n    [10, 981, 3, 15],\n    [10, 982, 10, 11],\n    [10, 983, 11, 10],\n    [10, 984, 12, 8],\n    [10, 985, 15, 6],\n    [10, 986, 15, 7],\n    [10, 987, 8, 14],\n    [10, 988, 15, 1],\n    [10, 989, 7, 14],\n    [10, 990, 9, 0],\n    [10, 991, 0, 9],\n    [10, 992, 9, 13],\n    [10, 993, 9, 12],\n    [10, 994, 12, 9],\n    [10, 995, 14, 8],\n    [10, 996, 10, 13],\n    [10, 997, 14, 9],\n    [10, 998, 12, 10],\n    [10, 999, 6, 15],\n    [10, 1000, 7, 15],\n    [11, 2002, 9, 14],\n    [11, 2003, 15, 8],\n    [11, 2004, 11, 11],\n    [11, 2005, 11, 14],\n    [11, 2006, 1, 15],\n    [11, 2007, 10, 12],\n    [11, 2008, 10, 14],\n    [11, 2009, 13, 11],\n    [11, 2010, 13, 10],\n    [11, 2011, 11, 13],\n    [11, 2012, 11, 12],\n    [11, 2013, 8, 15],\n    [11, 2014, 14, 11],\n    [11, 2015, 13, 12],\n    [11, 2016, 12, 13],\n    [11, 2017, 15, 9],\n    [11, 2018, 14, 10],\n    [11, 2019, 10, 0],\n    [11, 2020, 12, 11],\n    [11, 2021, 9, 15],\n    [11, 2022, 0, 10],\n    [11, 2023, 12, 12],\n    [11, 2024, 11, 0],\n    [11, 2025, 12, 14],\n    [11, 2026, 10, 15],\n    [11, 2027, 13, 13],\n    [11, 2028, 0, 13],\n    [11, 2029, 14, 12],\n    [11, 2030, 15, 10],\n    [11, 2031, 15, 11],\n    [11, 2032, 11, 15],\n    [11, 2033, 14, 13],\n    [11, 2034, 13, 0],\n    [11, 2035, 0, 11],\n    [11, 2036, 13, 14],\n    [11, 2037, 15, 12],\n    [11, 2038, 15, 13],\n    [11, 2039, 12, 15],\n    [11, 2040, 14, 0],\n    [11, 2041, 14, 14],\n    [11, 2042, 13, 15],\n    [11, 2043, 12, 0],\n    [11, 2044, 14, 15],\n    [12, 4090, 0, 14],\n    [12, 4091, 0, 12],\n    [12, 4092, 15, 14],\n    [12, 4093, 15, 0],\n    [12, 4094, 0, 15],\n    [12, 4095, 15, 15]\n];\n\nconst HCB_SF = [\n    [1, 0, 60],\n    [3, 4, 59],\n    [4, 10, 61],\n    [4, 11, 58],\n    [4, 12, 62],\n    [5, 26, 57],\n    [5, 27, 63],\n    [6, 56, 56],\n    [6, 57, 64],\n    [6, 58, 55],\n    [6, 59, 65],\n    [7, 120, 66],\n    [7, 121, 54],\n    [7, 122, 67],\n    [8, 246, 53],\n    [8, 247, 68],\n    [8, 248, 52],\n    [8, 249, 69],\n    [8, 250, 51],\n    [9, 502, 70],\n    [9, 503, 50],\n    [9, 504, 49],\n    [9, 505, 71],\n    [10, 1012, 72],\n    [10, 1013, 48],\n    [10, 1014, 73],\n    [10, 1015, 47],\n    [10, 1016, 74],\n    [10, 1017, 46],\n    [11, 2036, 76],\n    [11, 2037, 75],\n    [11, 2038, 77],\n    [11, 2039, 78],\n    [11, 2040, 45],\n    [11, 2041, 43],\n    [12, 4084, 44],\n    [12, 4085, 79],\n    [12, 4086, 42],\n    [12, 4087, 41],\n    [12, 4088, 80],\n    [12, 4089, 40],\n    [13, 8180, 81],\n    [13, 8181, 39],\n    [13, 8182, 82],\n    [13, 8183, 38],\n    [13, 8184, 83],\n    [14, 16370, 37],\n    [14, 16371, 35],\n    [14, 16372, 85],\n    [14, 16373, 33],\n    [14, 16374, 36],\n    [14, 16375, 34],\n    [14, 16376, 84],\n    [14, 16377, 32],\n    [15, 32756, 87],\n    [15, 32757, 89],\n    [15, 32758, 30],\n    [15, 32759, 31],\n    [16, 65520, 86],\n    [16, 65521, 29],\n    [16, 65522, 26],\n    [16, 65523, 27],\n    [16, 65524, 28],\n    [16, 65525, 24],\n    [16, 65526, 88],\n    [17, 131054, 25],\n    [17, 131055, 22],\n    [17, 131056, 23],\n    [18, 262114, 90],\n    [18, 262115, 21],\n    [18, 262116, 19],\n    [18, 262117, 3],\n    [18, 262118, 1],\n    [18, 262119, 2],\n    [18, 262120, 0],\n    [19, 524242, 98],\n    [19, 524243, 99],\n    [19, 524244, 100],\n    [19, 524245, 101],\n    [19, 524246, 102],\n    [19, 524247, 117],\n    [19, 524248, 97],\n    [19, 524249, 91],\n    [19, 524250, 92],\n    [19, 524251, 93],\n    [19, 524252, 94],\n    [19, 524253, 95],\n    [19, 524254, 96],\n    [19, 524255, 104],\n    [19, 524256, 111],\n    [19, 524257, 112],\n    [19, 524258, 113],\n    [19, 524259, 114],\n    [19, 524260, 115],\n    [19, 524261, 116],\n    [19, 524262, 110],\n    [19, 524263, 105],\n    [19, 524264, 106],\n    [19, 524265, 107],\n    [19, 524266, 108],\n    [19, 524267, 109],\n    [19, 524268, 118],\n    [19, 524269, 6],\n    [19, 524270, 8],\n    [19, 524271, 9],\n    [19, 524272, 10],\n    [19, 524273, 5],\n    [19, 524274, 103],\n    [19, 524275, 120],\n    [19, 524276, 119],\n    [19, 524277, 4],\n    [19, 524278, 7],\n    [19, 524279, 15],\n    [19, 524280, 16],\n    [19, 524281, 18],\n    [19, 524282, 20],\n    [19, 524283, 17],\n    [19, 524284, 11],\n    [19, 524285, 12],\n    [19, 524286, 14],\n    [19, 524287, 13]\n];\n\nconst CODEBOOKS = [\n    HCB1, HCB2, HCB3, HCB4, HCB5, HCB6, HCB7, HCB8, HCB9, HCB10, HCB11\n];\n\n\n// WEBPACK FOOTER //\n// ./src/aac/huffman/index.js","module.exports = class ScaleFactorTable\n{\n    static get SCALEFACTOR_TABLE() {\n        return SCALEFACTOR_TABLE;\n    }\n};\n\nconst SCALEFACTOR_TABLE = (() => {\n    const table = new Float32Array(428);\n\n    for (let i = 0; i < 428; i++) {\n        table[i] = Math.pow(2, (i - 200) / 4);\n    }\n\n    return table;\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/sft.js","module.exports = class TNS {\n    static get TNS_MAX_ORDER() {\n        return 20;\n    }\n\n    static get SHORT_BITS() {\n        return [1, 4, 3];\n    }\n\n    static get LONG_BITS() {\n        return [2, 6, 5]\n    }\n\n    constructor() {\n        // private int[] nFilt = new int[8];\n        this.nFilt = (new Int32Array(8)).fill(0);\n\n        // private int[][] order = new int[8][4];\n        this.order = (new Int32Array(8*4)).fill(0);\n    }\n\n    decode(bitStream, info) {\n        const windowCount = info.getWindowCount();\n\n        const bits = info.isEightShortFrame() ? TNS.SHORT_BITS : TNS.LONG_BITS;\n\n        const order = this.order, nFilt = this.nFilt;\n\n        let w, i, filt, coefLen, coefRes, coefCompress, tmp;\n\n        for (w = 0; w < windowCount; w++) {\n            if ((nFilt[w] = bitStream.readBits(bits[0])) !== 0) {\n                coefRes = bitStream.readBit();\n\n                for (filt = 0; filt < nFilt[w]; filt++) {\n                    /*this.length[w][filt] =*/ bitStream.readBits(bits[1]);\n\n                    if ((order[w*8+filt] = bitStream.readBits(bits[2])) > 20)\n                        throw \"TNS filter out of range: \" + order[w*8+filt];\n                    else if (order[w*8+filt] !== 0) {\n                        /*this.direction[w][filt] = !!*/bitStream.readBit();\n                        coefCompress = bitStream.readBit();\n                        coefLen = coefRes + 3 - coefCompress;\n                        tmp = 2 * coefCompress + coefRes;\n\n                        for (i = 0; i < order[w*8+filt]; i++) {\n                            // this.coef[w][filt][i] = TNS_TABLES[tmp][bitStream.readBits(coefLen)];\n                            bitStream.readBits(coefLen)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    process(ics, spec, sf, decode) {\n        // todo\n    }\n};\n\nconst TNS_COEF_1_3 = new Float32Array([\n    0.00000000, -0.43388373, 0.64278758, 0.34202015\n]);\n\nconst TNS_COEF_0_3 = new Float32Array([\n    0.00000000, -0.43388373, -0.78183150, -0.97492790,\n    0.98480773, 0.86602539, 0.64278758, 0.34202015\n]);\n\nconst TNS_COEF_1_4 = new Float32Array([\n    0.00000000, -0.20791170, -0.40673664, -0.58778524,\n    0.67369562, 0.52643216, 0.36124167, 0.18374951\n]);\n\nconst TNS_COEF_0_4 = new Float32Array([\n    0.00000000, -0.20791170, -0.40673664, -0.58778524,\n    -0.74314481, -0.86602539, -0.95105654, -0.99452192,\n    0.99573416, 0.96182561, 0.89516330, 0.79801720,\n    0.67369562, 0.52643216, 0.36124167, 0.18374951\n]);\n\nconst TNS_TABLES = [\n    TNS_COEF_0_3, TNS_COEF_0_4, TNS_COEF_1_3, TNS_COEF_1_4\n];\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/tns.js","module.exports = class IQT\n{\n    static get IQ_TABLE() {\n        return IQ_TABLE;\n    }\n};\n\nconst IQ_TABLE = new Float32Array([\n    0.0,\n    1.0,\n    2.519842099789746,\n    4.3267487109222245,\n    6.3496042078727974,\n    8.549879733383484,\n    10.902723556992836,\n    13.390518279406722,\n    15.999999999999998,\n    18.720754407467133,\n    21.544346900318835,\n    24.463780996262464,\n    27.47314182127996,\n    30.567350940369842,\n    33.74199169845321,\n    36.993181114957046,\n    40.317473596635935,\n    43.71178704118999,\n    47.173345095760126,\n    50.69963132571694,\n    54.28835233189812,\n    57.93740770400352,\n    61.6448652744185,\n    65.40894053658599,\n    69.22797937475559,\n    73.10044345532164,\n    77.02489777859162,\n    80.99999999999997,\n    85.02449121251853,\n    89.09718794488955,\n    93.21697517861574,\n    97.38280022413316,\n    101.59366732596474,\n    105.84863288986224,\n    110.14680124343441,\n    114.4873208566006,\n    118.86938096020653,\n    123.29220851090024,\n    127.75506545836058,\n    132.25724627755247,\n    136.79807573413572,\n    141.3769068556919,\n    145.99311908523086,\n    150.6461165966291,\n    155.33532675434674,\n    160.0601987020528,\n    164.8202020667335,\n    169.6148257665186,\n    174.44357691188537,\n    179.30597979112554,\n    184.20157493201927,\n    189.12991823257562,\n    194.09058015449685,\n    199.08314497371674,\n    204.1072100829694,\n    209.16238534187647,\n    214.24829247050752,\n    219.36456448277784,\n    224.51084515641213,\n    229.6867885365223,\n    234.89205847013176,\n    240.1263281692325,\n    245.38927980018508,\n    250.6806040974726,\n    255.99999999999991,\n    261.3471743082887,\n    266.7218413610645,\n    272.12372272986045,\n    277.5525469303796,\n    283.0080491494619,\n    288.4899709865989,\n    293.99806020902247,\n    299.5320705194741,\n    305.0917613358298,\n    310.67689758182206,\n    316.28724948815585,\n    321.92259240337177,\n    327.58270661385535,\n    333.2673771724374,\n    338.97639373507025,\n    344.70955040510125,\n    350.46664558470013,\n    356.2474818330261,\n    362.0518657307514,\n    367.8796077505826,\n    373.7305221334451,\n    379.60442677002084,\n    385.501143087346,\n    391.42049594019943,\n    397.3623135070237,\n    403.32642719014467,\n    409.3126715200626,\n    415.320884063608,\n    421.35090533576465,\n    427.4025787149762,\n    433.4757503617617,\n    439.5702691404793,\n    445.6859865440827,\n    451.8227566217276,\n    457.9804359090913,\n    464.15888336127773,\n    470.35796028818726,\n    476.5775302922363,\n    482.81745920832043,\n    489.0776150459174,\n    495.3578679332358,\n    501.6580900633169,\n    507.9781556420037,\n    514.3179408376965,\n    520.6773237328167,\n    527.056184276906,\n    533.4544042412917,\n    539.8718671752513,\n    546.308458363615,\n    552.7640647857461,\n    559.2385750758419,\n    565.7318794845041,\n    572.2438698415234,\n    578.7744395198338,\n    585.3234834005884,\n    591.8908978393126,\n    598.4765806330926,\n    605.0804309887604,\n    611.7023494920364,\n    618.3422380775919,\n    624.9999999999998,\n    631.6755398055375,\n    638.3687633048116,\n    645.0795775461748,\n    651.8078907899041,\n    658.553612483115,\n    665.3166532353836,\n    672.0969247950522,\n    678.8943400261944,\n    685.7088128862142,\n    692.540258404062,\n    699.3885926590398,\n    706.2537327601806,\n    713.1355968261797,\n    720.0341039658604,\n    726.9491742591542,\n    733.8807287385821,\n    740.8286893712154,\n    747.7929790411054,\n    754.7735215321619,\n    761.7702415114704,\n    768.7830645130296,\n    775.811916921899,\n    782.8567259587425,\n    789.9174196647544,\n    796.993926886958,\n    804.0861772638627,\n    811.194101211471,\n    818.3176299096223,\n    825.4566952886656,\n    832.6112300164486,\n    839.781167485616,\n    846.9664418012055,\n    854.1669877685351,\n    861.3827408813713,\n    868.6136373103698,\n    875.859613891782,\n    883.1206081164196,\n    890.3965581188676,\n    897.6874026669418,\n    904.9930811513817,\n    912.3135335757719,\n    919.6487005466876,\n    926.9985232640562,\n    934.3629435117291,\n    941.7419036482586,\n    949.1353465978742,\n    956.5432158416521,\n    963.9654554088735,\n    971.4020098685654,\n    978.8528243212218,\n    986.3178443906959,\n    993.7970162162635,\n    1001.29028644485,\n    1008.797602223418,\n    1016.3189111915103,\n    1023.8541614739464,\n    1031.4033016736653,\n    1038.9662808647138,\n    1046.5430485853758,\n    1054.1335548314366,\n    1061.7377500495838,\n    1069.3555851309357,\n    1076.9870114046978,\n    1084.6319806319443,\n    1092.2904449995174,\n    1099.9623571140482,\n    1107.6476699960892,\n    1115.3463370743607,\n    1123.058312180106,\n    1130.783549541554,\n    1138.5220037784857,\n    1146.273629896901,\n    1154.0383832837879,\n    1161.816219701986,\n    1169.607095285146,\n    1177.4109665327805,\n    1185.2277903054078,\n    1193.0575238197798,\n    1200.9001246442,\n    1208.7555506939248,\n    1216.6237602266442,\n    1224.5047118380478,\n    1232.3983644574657,\n    1240.3046773435874,\n    1248.2236100802568,\n    1256.1551225723395,\n    1264.099175041662,\n    1272.0557280230228,\n    1280.024742360269,\n    1288.0061792024444,\n    1295.9999999999995,\n    1304.006166501068,\n    1312.0246407478062,\n    1320.055385072793,\n    1328.0983620954903,\n    1336.153534718765,\n    1344.2208661254647,\n    1352.3003197750522,\n    1360.3918594002962,\n    1368.4954490040145,\n    1376.6110528558709,\n    1384.7386354892244,\n    1392.8781616980295,\n    1401.0295965337855,\n    1409.1929053025353,\n    1417.368053561912,\n    1425.5550071182324,\n    1433.7537320236374,\n    1441.9641945732744,\n    1450.186361302528,\n    1458.4201989842913,\n    1466.6656746262797,\n    1474.9227554683875,\n    1483.1914089800841,\n    1491.4716028578516,\n    1499.7633050226596,\n    1508.0664836174794,\n    1516.3811070048375,\n    1524.7071437644029,\n    1533.044562690613,\n    1541.3933327903342,\n    1549.753423280558,\n    1558.1248035861304,\n    1566.507443337515,\n    1574.9013123685909,\n    1583.3063807144795,\n    1591.722618609407,\n    1600.149996484594,\n    1608.58848496618,\n    1617.0380548731737,\n    1625.4986772154357,\n    1633.9703231916887,\n    1642.4529641875577,\n    1650.9465717736346,\n    1659.4511177035752,\n    1667.9665739122186,\n    1676.4929125137353,\n    1685.0301057998013,\n    1693.5781262377957,\n    1702.136946469027,\n    1710.7065393069795,\n    1719.286877735588,\n    1727.8779349075323,\n    1736.4796841425596,\n    1745.0920989258252,\n    1753.7151529062583,\n    1762.3488198949503,\n    1770.993073863563,\n    1779.6478889427597,\n    1788.3132394206564,\n    1796.9890997412947,\n    1805.6754445031333,\n    1814.3722484575621,\n    1823.0794865074322,\n    1831.7971337056094,\n    1840.5251652535437,\n    1849.263556499858,\n    1858.0122829389563,\n    1866.7713202096493,\n    1875.5406440937966,\n    1884.3202305149687,\n    1893.110055537124,\n    1901.9100953633042,\n    1910.7203263343454,\n    1919.5407249276057,\n    1928.3712677557098,\n    1937.2119315653083,\n    1946.0626932358525,\n    1954.923529778386,\n    1963.79441833435,\n    1972.6753361744036,\n    1981.5662606972594,\n    1990.467169428533,\n    1999.378040019607,\n    2008.2988502465078,\n    2017.2295780087982,\n    2026.1702013284819,\n    2035.1206983489212,\n    2044.0810473337688,\n    2053.0512266659125,\n    2062.031214846431,\n    2071.0209904935646,\n    2080.020532341696,\n    2089.0298192403443,\n    2098.0488301531714,\n    2107.0775441569995,\n    2116.115940440839,\n    2125.1639983049317,\n    2134.2216971597995,\n    2143.2890165253098,\n    2152.3659360297484,\n    2161.452435408903,\n    2170.5484945051617,\n    2179.6540932666144,\n    2188.769211746171,\n    2197.893830100689,\n    2207.0279285901042,\n    2216.171487576584,\n    2225.324487523676,\n    2234.486908995478,\n    2243.65873265581,\n    2252.839939267398,\n    2262.03050969107,\n    2271.2304248849537,\n    2280.4396659036897,\n    2289.6582138976523,\n    2298.8860501121762,\n    2308.1231558867926,\n    2317.3695126544767,\n    2326.6251019409005,\n    2335.8899053636933,\n    2345.163904631713,\n    2354.4470815443233,\n    2363.739417990679,\n    2373.0408959490205,\n    2382.351497485973,\n    2391.671204755856,\n    2400.999999999999,\n    2410.337865546065,\n    2419.6847838073813,\n    2429.0407372822747,\n    2438.405708553419,\n    2447.779680287186,\n    2457.162635233001,\n    2466.554556222711,\n    2475.955426169957,\n    2485.3652280695474,\n    2494.7839449968487,\n    2504.2115601071737,\n    2513.648056635179,\n    2523.0934178942675,\n    2532.5476272760025,\n    2542.010668249519,\n    2551.482524360948,\n    2560.963179232844,\n    2570.4526165636184,\n    2579.950820126979,\n    2589.4577737713744,\n    2598.973461419446,\n    2608.4978670674823,\n    2618.0309747848837,\n    2627.572768713626,\n    2637.1232330677353,\n    2646.6823521327647,\n    2656.250110265277,\n    2665.826491892333,\n    2675.4114815109842,\n    2685.0050636877722,\n    2694.6072230582295,\n    2704.2179443263894,\n    2713.8372122642972,\n    2723.465011711528,\n    2733.1013275747096,\n    2742.7461448270483,\n    2752.39944850786,\n    2762.0612237221085,\n    2771.731455639942,\n    2781.4101294962406,\n    2791.097230590165,\n    2800.7927442847094,\n    2810.496656006259,\n    2820.208951244152,\n    2829.9296155502466,\n    2839.6586345384894,\n    2849.395993884492,\n    2859.1416793251065,\n    2868.8956766580086,\n    2878.6579717412847,\n    2888.4285504930212,\n    2898.2073988908974,\n    2907.9945029717837,\n    2917.789848831344,\n    2927.5934226236377,\n    2937.4052105607307,\n    2947.225198912308,\n    2957.053374005286,\n    2966.8897222234364,\n    2976.734230007005,\n    2986.5868838523397,\n    2996.4476703115197,\n    3006.316575991989,\n    3016.193587556191,\n    3026.078691721209,\n    3035.971875258411,\n    3045.8731249930906,\n    3055.7824278041207,\n    3065.699770623604,\n    3075.6251404365285,\n    3085.5585242804245,\n    3095.49990924503,\n    3105.449282471949,\n    3115.4066311543256,\n    3125.371942536509,\n    3135.3452039137287,\n    3145.3264026317715,\n    3155.3155260866592,\n    3165.3125617243295,\n    3175.3174970403234,\n    3185.330319579468,\n    3195.35101693557,\n    3205.379576751108,\n    3215.4159867169246,\n    3225.460234571929,\n    3235.5123081027928,\n    3245.572195143656,\n    3255.63988357583,\n    3265.7153613275095,\n    3275.7986163734795,\n    3285.889636734829,\n    3295.9884104786665,\n    3306.0949257178395,\n    3316.2091706106517,\n    3326.331133360588,\n    3336.4608022160382,\n    3346.598165470023,\n    3356.7432114599264,\n    3366.8959285672245,\n    3377.056305217221,\n    3387.2243298787826,\n    3397.3999910640764,\n    3407.5832773283128,\n    3417.7741772694862,\n    3427.9726795281194,\n    3438.1787727870123,\n    3448.3924457709873,\n    3458.6136872466445,\n    3468.842486022111,\n    3479.0788309467976,\n    3489.3227109111554,\n    3499.5741148464344,\n    3509.8330317244445,\n    3520.0994505573185,\n    3530.373360397275,\n    3540.6547503363886,\n    3550.9436095063534,\n    3561.239927078258,\n    3571.543692262354,\n    3581.854894307831,\n    3592.1735225025936,\n    3602.4995661730372,\n    3612.8330146838275,\n    3623.1738574376814,\n    3633.52208387515,\n    3643.877683474403,\n    3654.240645751014,\n    3664.6109602577494,\n    3674.9886165843564,\n    3685.3736043573545,\n    3695.7659132398294,\n    3706.165532931225,\n    3716.57245316714,\n    3726.986663719126,\n    3737.4081543944876,\n    3747.836915036078,\n    3758.272935522107,\n    3768.716205765941,\n    3779.1667157159077,\n    3789.6244553551055,\n    3800.089414701208,\n    3810.5615838062768,\n    3821.0409527565694,\n    3831.5275116723533,\n    3842.0212507077194,\n    3852.522160050396,\n    3863.0302299215673,\n    3873.5454505756893,\n    3884.067812300311,\n    3894.597305415892,\n    3905.1339202756285,\n    3915.677647265273,\n    3926.2284768029604,\n    3936.786399339034,\n    3947.3514053558706,\n    3957.9234853677135,\n    3968.502629920497,\n    3979.0888295916798,\n    3989.6820749900776,\n    4000.2823567556948,\n    4010.8896655595613,\n    4021.5039921035655,\n    4032.1253271202945,\n    4042.7536613728694,\n    4053.3889856547858,\n    4064.031290789755,\n    4074.680567631545,\n    4085.336807063822,\n    4095.999999999998,\n    4106.670137383071,\n    4117.347210185475,\n    4128.031209408926,\n    4138.722126084268,\n    4149.419951271327,\n    4160.124676058758,\n    4170.836291563898,\n    4181.554788932618,\n    4192.280159339177,\n    4203.012393986074,\n    4213.75148410391,\n    4224.497420951238,\n    4235.250195814426,\n    4246.0098000075095,\n    4256.776224872057,\n    4267.549461777031,\n    4278.329502118642,\n    4289.11633732022,\n    4299.909958832071,\n    4310.7103581313495,\n    4321.517526721914,\n    4332.3314561342,\n    4343.152137925088,\n    4353.979563677767,\n    4364.813725001605,\n    4375.654613532022,\n    4386.502220930359,\n    4397.356538883747,\n    4408.217559104982,\n    4419.085273332402,\n    4429.959673329753,\n    4440.840750886073,\n    4451.72849781556,\n    4462.622905957458,\n    4473.523967175923,\n    4484.431673359913,\n    4495.346016423058,\n    4506.26698830355,\n    4517.194580964012,\n    4528.128786391389,\n    4539.069596596828,\n    4550.017003615559,\n    4560.970999506781,\n    4571.931576353546,\n    4582.898726262647,\n    4593.8724413645,\n    4604.852713813035,\n    4615.839535785582,\n    4626.832899482757,\n    4637.832797128359,\n    4648.839220969251,\n    4659.852163275256,\n    4670.871616339047,\n    4681.897572476039,\n    4692.930024024284,\n    4703.9689633443595,\n    4715.014382819267,\n    4726.0662748543255,\n    4737.124631877068,\n    4748.189446337137,\n    4759.26071070618,\n    4770.338417477749,\n    4781.422559167199,\n    4792.513128311585,\n    4803.610117469561,\n    4814.713519221285,\n    4825.823326168315,\n    4836.93953093351,\n    4848.062126160935,\n    4859.191104515763,\n    4870.326458684178,\n    4881.468181373277,\n    4892.616265310977,\n    4903.770703245919,\n    4914.931487947375,\n    4926.098612205151,\n    4937.272068829496,\n    4948.451850651012,\n    4959.637950520555,\n    4970.830361309152,\n    4982.029075907904,\n    4993.234087227897,\n    5004.445388200115,\n    5015.662971775347,\n    5026.886830924101,\n    5038.116958636513,\n    5049.353347922266,\n    5060.595991810493,\n    5071.8448833497005,\n    5083.100015607673,\n    5094.3613816714,\n    5105.628974646975,\n    5116.902787659525,\n    5128.18281385312,\n    5139.469046390692,\n    5150.761478453947,\n    5162.060103243293,\n    5173.364913977747,\n    5184.675903894859,\n    5195.993066250632,\n    5207.316394319439,\n    5218.645881393944,\n    5229.981520785022,\n    5241.323305821685,\n    5252.671229850992,\n    5264.025286237983,\n    5275.385468365595,\n    5286.751769634588,\n    5298.124183463464,\n    5309.502703288395,\n    5320.887322563145,\n    5332.278034758998,\n    5343.674833364676,\n    5355.077711886272,\n    5366.486663847172,\n    5377.901682787985,\n    5389.3227622664635,\n    5400.749895857437,\n    5412.183077152737,\n    5423.622299761123,\n    5435.067557308219,\n    5446.518843436432,\n    5457.976151804887,\n    5469.439476089359,\n    5480.908809982197,\n    5492.384147192261,\n    5503.8654814448455,\n    5515.35280648162,\n    5526.846116060552,\n    5538.345403955847,\n    5549.850663957874,\n    5561.361889873103,\n    5572.879075524037,\n    5584.402214749145,\n    5595.9313014027975,\n    5607.466329355201,\n    5619.00729249233,\n    5630.554184715866,\n    5642.106999943128,\n    5653.665732107017,\n    5665.230375155943,\n    5676.8009230537655,\n    5688.377369779733,\n    5699.959709328416,\n    5711.547935709647,\n    5723.142042948459,\n    5734.742025085021,\n    5746.347876174581,\n    5757.959590287402,\n    5769.577161508701,\n    5781.200583938591,\n    5792.829851692021,\n    5804.464958898715,\n    5816.1058997031105,\n    5827.7526682643065,\n    5839.405258755998,\n    5851.06366536642,\n    5862.727882298291,\n    5874.397903768755,\n    5886.07372400932,\n    5897.755337265809,\n    5909.442737798296,\n    5921.135919881051,\n    5932.834877802487,\n    5944.539605865103,\n    5956.250098385426,\n    5967.966349693957,\n    5979.688354135121,\n    5991.416106067203,\n    6003.1495998623,\n    6014.888829906269,\n    6026.6337905986675,\n    6038.384476352703,\n    6050.140881595178,\n    6061.903000766441,\n    6073.670828320332,\n    6085.444358724127,\n    6097.223586458489,\n    6109.00850601742,\n    6120.7991119082,\n    6132.595398651345,\n    6144.397360780552,\n    6156.204992842646,\n    6168.018289397536,\n    6179.837245018158,\n    6191.661854290431,\n    6203.492111813202,\n    6215.3280121982025,\n    6227.1695500699925,\n    6239.01672006592,\n    6250.869516836063,\n    6262.727935043189,\n    6274.591969362706,\n    6286.461614482607,\n    6298.3368651034325,\n    6310.217715938217,\n    6322.104161712446,\n    6333.996197164003,\n    6345.893817043131,\n    6357.7970161123785,\n    6369.705789146558,\n    6381.620130932701,\n    6393.5400362700075,\n    6405.465499969803,\n    6417.396516855498,\n    6429.333081762534,\n    6441.275189538345,\n    6453.222835042314,\n    6465.176013145724,\n    6477.134718731716,\n    6489.098946695247,\n    6501.0686919430445,\n    6513.043949393563,\n    6525.024713976942,\n    6537.010980634961,\n    6549.002744321001,\n    6560.999999999996,\n    6573.002742648398,\n    6585.010967254128,\n    6597.024668816537,\n    6609.043842346366,\n    6621.0684828657,\n    6633.098585407935,\n    6645.134145017727,\n    6657.175156750956,\n    6669.221615674691,\n    6681.273516867135,\n    6693.3308554176,\n    6705.393626426459,\n    6717.461825005108,\n    6729.535446275926,\n    6741.614485372234,\n    6753.69893743826,\n    6765.788797629097,\n    6777.884061110663,\n    6789.984723059666,\n    6802.090778663563,\n    6814.20222312052,\n    6826.31905163938,\n    6838.441259439618,\n    6850.568841751307,\n    6862.701793815083,\n    6874.8401108821,\n    6886.983788213999,\n    6899.132821082872,\n    6911.287204771221,\n    6923.44693457192,\n    6935.612005788186,\n    6947.7824137335365,\n    6959.958153731754,\n    6972.139221116853,\n    6984.325611233041,\n    6996.517319434686,\n    7008.714341086277,\n    7020.916671562394,\n    7033.124306247668,\n    7045.337240536748,\n    7057.555469834268,\n    7069.77898955481,\n    7082.007795122871,\n    7094.241881972827,\n    7106.481245548902,\n    7118.7258813051285,\n    7130.975784705322,\n    7143.23095122304,\n    7155.491376341552,\n    7167.757055553804,\n    7180.027984362389,\n    7192.304158279513,\n    7204.585572826957,\n    7216.872223536052,\n    7229.164105947641,\n    7241.461215612049,\n    7253.76354808905,\n    7266.0710989478375,\n    7278.383863766987,\n    7290.70183813443,\n    7303.025017647417,\n    7315.353397912493,\n    7327.68697454546,\n    7340.025743171346,\n    7352.36969942438,\n    7364.718838947954,\n    7377.073157394597,\n    7389.432650425941,\n    7401.797313712694,\n    7414.167142934606,\n    7426.542133780443,\n    7438.922281947951,\n    7451.307583143835,\n    7463.698033083718,\n    7476.093627492121,\n    7488.49436210243,\n    7500.900232656865,\n    7513.311234906452,\n    7525.727364610994,\n    7538.148617539045,\n    7550.574989467873,\n    7563.006476183442,\n    7575.443073480374,\n    7587.884777161926,\n    7600.33158303996,\n    7612.783486934915,\n    7625.24048467578,\n    7637.702572100064,\n    7650.169745053768,\n    7662.64199939136,\n    7675.119330975745,\n    7687.60173567824,\n    7700.089209378544,\n    7712.581747964711,\n    7725.079347333125,\n    7737.582003388473,\n    7750.089712043714,\n    7762.602469220058,\n    7775.1202708469355,\n    7787.643112861973,\n    7800.1709912109645,\n    7812.703901847848,\n    7825.241840734677,\n    7837.784803841597,\n    7850.3327871468155,\n    7862.885786636581,\n    7875.443798305154,\n    7888.006818154784,\n    7900.57484219568,\n    7913.14786644599,\n    7925.725886931772,\n    7938.308899686972,\n    7950.896900753395,\n    7963.489886180685,\n    7976.087852026296,\n    7988.690794355469,\n    8001.298709241209,\n    8013.911592764257,\n    8026.529441013069,\n    8039.152250083789,\n    8051.780016080227,\n    8064.412735113835,\n    8077.05040330368,\n    8089.693016776422,\n    8102.340571666295,\n    8114.993064115073,\n    8127.650490272057,\n    8140.312846294045,\n    8152.98012834531,\n    8165.652332597579,\n    8178.329455230005,\n    8191.011492429153,\n    8203.698440388966,\n    8216.390295310746,\n    8229.087053403142,\n    8241.788710882107,\n    8254.495263970894,\n    8267.206708900021,\n    8279.923041907257,\n    8292.644259237595,\n    8305.37035714323,\n    8318.101331883543,\n    8330.837179725066,\n    8343.577896941475,\n    8356.323479813558,\n    8369.073924629198,\n    8381.82922768335,\n    8394.589385278021,\n    8407.354393722242,\n    8420.124249332057,\n    8432.898948430495,\n    8445.67848734755,\n    8458.462862420158,\n    8471.25206999218,\n    8484.046106414384,\n    8496.844968044408,\n    8509.648651246764,\n    8522.457152392795,\n    8535.270467860666,\n    8548.088594035344,\n    8560.911527308566,\n    8573.73926407884,\n    8586.5718007514,\n    8599.409133738207,\n    8612.251259457915,\n    8625.098174335855,\n    8637.94987480402,\n    8650.806357301039,\n    8663.667618272157,\n    8676.533654169225,\n    8689.404461450664,\n    8702.28003658146,\n    8715.160376033142,\n    8728.04547628375,\n    8740.935333817839,\n    8753.829945126436,\n    8766.729306707033,\n    8779.633415063572,\n    8792.542266706416,\n    8805.455858152332,\n    8818.374185924482,\n    8831.29724655239,\n    8844.225036571936,\n    8857.157552525327,\n    8870.094790961084,\n    8883.03674843403,\n    8895.983421505252,\n    8908.934806742107,\n    8921.890900718185,\n    8934.8517000133,\n    8947.817201213471,\n    8960.7874009109,\n    8973.76229570396,\n    8986.741882197173,\n    8999.726157001192,\n    9012.715116732788,\n    9025.708758014824,\n    9038.707077476247,\n    9051.710071752064,\n    9064.717737483328,\n    9077.730071317117,\n    9090.747069906518,\n    9103.768729910615,\n    9116.795047994465,\n    9129.826020829081,\n    9142.861645091423,\n    9155.901917464373,\n    9168.946834636716,\n    9181.996393303136,\n    9195.050590164185,\n    9208.109421926274,\n    9221.172885301656,\n    9234.240977008405,\n    9247.313693770408,\n    9260.391032317339,\n    9273.472989384647,\n    9286.559561713542,\n    9299.650746050975,\n    9312.74653914962,\n    9325.84693776787,\n    9338.951938669801,\n    9352.061538625176,\n    9365.175734409413,\n    9378.294522803584,\n    9391.417900594384,\n    9404.545864574127,\n    9417.678411540726,\n    9430.815538297675,\n    9443.957241654036,\n    9457.103518424428,\n    9470.254365429,\n    9483.40977949343,\n    9496.569757448893,\n    9509.734296132066,\n    9522.903392385091,\n    9536.07704305558,\n    9549.255244996582,\n    9562.437995066583,\n    9575.62529012948,\n    9588.817127054574,\n    9602.013502716549,\n    9615.214413995463,\n    9628.419857776727,\n    9641.629830951093,\n    9654.844330414644,\n    9668.063353068772,\n    9681.286895820167,\n    9694.514955580802,\n    9707.74752926792,\n    9720.984613804016,\n    9734.226206116828,\n    9747.472303139319,\n    9760.722901809664,\n    9773.977999071232,\n    9787.237591872581,\n    9800.501677167433,\n    9813.77025191467,\n    9827.04331307831,\n    9840.320857627503,\n    9853.602882536512,\n    9866.8893847847,\n    9880.18036135651,\n    9893.475809241469,\n    9906.775725434152,\n    9920.080106934185,\n    9933.388950746223,\n    9946.702253879943,\n    9960.020013350022,\n    9973.34222617613,\n    9986.668889382916,\n    9999.999999999995,\n    10013.335555061929,\n    10026.675551608221,\n    10040.0199866833,\n    10053.368857336509,\n    10066.722160622081,\n    10080.079893599144,\n    10093.442053331697,\n    10106.808636888598,\n    10120.17964134355,\n    10133.555063775097,\n    10146.934901266595,\n    10160.31915090622,\n    10173.707809786936,\n    10187.100875006496,\n    10200.498343667417,\n    10213.900212876984,\n    10227.306479747222,\n    10240.717141394889,\n    10254.132194941467,\n    10267.551637513146,\n    10280.975466240814,\n    10294.40367826004,\n    10307.836270711065,\n    10321.273240738796,\n    10334.71458549278,\n    10348.160302127204,\n    10361.610387800878,\n    10375.064839677221,\n    10388.523654924258,\n    10401.986830714592,\n    10415.454364225412,\n    10428.926252638465,\n    10442.402493140049,\n    10455.883082921007,\n    10469.368019176709,\n    10482.85729910704,\n    10496.350919916393,\n    10509.848878813653,\n    10523.351173012188,\n    10536.857799729838,\n    10550.368756188902,\n    10563.884039616121,\n    10577.403647242685,\n    10590.927576304197,\n    10604.455824040679,\n    10617.988387696556,\n    10631.525264520642,\n    10645.066451766135,\n    10658.611946690598,\n    10672.161746555956,\n    10685.715848628475,\n    10699.274250178762,\n    10712.836948481747,\n    10726.403940816675,\n    10739.97522446709,\n    10753.550796720836,\n    10767.130654870027,\n    10780.714796211058,\n    10794.303218044579,\n    10807.895917675487,\n    10821.492892412922,\n    10835.094139570248,\n    10848.699656465047,\n    10862.309440419107,\n    10875.923488758415,\n    10889.541798813138,\n    10903.16436791762,\n    10916.791193410372,\n    10930.422272634056,\n    10944.05760293548,\n    10957.697181665582,\n    10971.341006179427,\n    10984.98907383619,\n    10998.641381999149,\n    11012.297928035676,\n    11025.958709317223,\n    11039.623723219316,\n    11053.292967121542,\n    11066.96643840754,\n    11080.64413446499,\n    11094.326052685608,\n    11108.012190465128,\n    11121.702545203298,\n    11135.397114303863,\n    11149.09589517457,\n    11162.798885227143,\n    11176.506081877276,\n    11190.217482544635,\n    11203.933084652828,\n    11217.652885629415,\n    11231.376882905886,\n    11245.105073917659,\n    11258.837456104062,\n    11272.574026908333,\n    11286.314783777601,\n    11300.059724162888,\n    11313.808845519083,\n    11327.56214530495,\n    11341.319620983111,\n    11355.081270020033,\n    11368.847089886023,\n    11382.617078055218,\n    11396.391232005579,\n    11410.169549218874,\n    11423.952027180676,\n    11437.738663380347,\n    11451.529455311042,\n    11465.324400469679,\n    11479.123496356951,\n    11492.926740477304,\n    11506.734130338931,\n    11520.545663453764,\n    11534.361337337468,\n    11548.181149509423,\n    11562.005097492724,\n    11575.83317881417,\n    11589.665391004253,\n    11603.501731597149,\n    11617.342198130715,\n    11631.186788146468,\n    11645.03549918959,\n    11658.888328808911,\n    11672.745274556906,\n    11686.606333989675,\n    11700.471504666955,\n    11714.340784152086,\n    11728.214170012021,\n    11742.091659817312,\n    11755.9732511421,\n    11769.85894156411,\n    11783.748728664636,\n    11797.642610028539,\n    11811.540583244237,\n    11825.442645903695,\n    11839.34879560242,\n    11853.259029939445,\n    11867.173346517331,\n    11881.091742942153,\n    11895.014216823492,\n    11908.940765774427,\n    11922.871387411526,\n    11936.80607935484,\n    11950.744839227897,\n    11964.687664657684,\n    11978.634553274653,\n    11992.5855027127,\n    12006.540510609168,\n    12020.499574604826,\n    12034.462692343877,\n    12048.429861473938,\n    12062.401079646032,\n    12076.376344514589,\n    12090.355653737432,\n    12104.339004975769,\n    12118.326395894186,\n    12132.317824160644,\n    12146.313287446457,\n    12160.312783426303,\n    12174.316309778205,\n    12188.323864183525,\n    12202.335444326955,\n    12216.35104789651,\n    12230.37067258353,\n    12244.394316082657,\n    12258.421976091831,\n    12272.453650312296,\n    12286.489336448576,\n    12300.529032208471,\n    12314.57273530306,\n    12328.620443446678,\n    12342.672154356922,\n    12356.727865754638,\n    12370.78757536391,\n    12384.851280912055,\n    12398.918980129623,\n    12412.990670750381,\n    12427.066350511306,\n    12441.146017152583,\n    12455.229668417589,\n    12469.317302052901,\n    12483.408915808272,\n    12497.50450743663,\n    12511.604074694078,\n    12525.707615339878,\n    12539.815127136444,\n    12553.926607849342,\n    12568.042055247275,\n    12582.161467102082,\n    12596.284841188726,\n    12610.41217528529,\n    12624.54346717297,\n    12638.67871463607,\n    12652.817915461985,\n    12666.961067441209,\n    12681.108168367316,\n    12695.259216036962,\n    12709.41420824987,\n    12723.573142808826,\n    12737.73601751968,\n    12751.902830191326,\n    12766.073578635704,\n    12780.248260667788,\n    12794.426874105588,\n    12808.609416770132,\n    12822.795886485468,\n    12836.986281078653,\n    12851.180598379744,\n    12865.378836221802,\n    12879.580992440871,\n    12893.787064875982,\n    12907.997051369144,\n    12922.210949765336,\n    12936.428757912496,\n    12950.650473661524,\n    12964.876094866271,\n    12979.105619383532,\n    12993.33904507304,\n    13007.576369797454,\n    13021.817591422368,\n    13036.062707816287,\n    13050.311716850629,\n    13064.564616399723,\n    13078.821404340792,\n    13093.082078553954,\n    13107.346636922217,\n    13121.615077331466,\n    13135.887397670458,\n    13150.163595830825,\n    13164.44366970706,\n    13178.727617196502,\n    13193.015436199352,\n    13207.307124618648,\n    13221.602680360265,\n    13235.902101332911,\n    13250.20538544812,\n    13264.512530620239,\n    13278.823534766434,\n    13293.138395806676,\n    13307.457111663734,\n    13321.779680263176,\n    13336.106099533357,\n    13350.43636740541,\n    13364.770481813252,\n    13379.108440693562,\n    13393.450241985796,\n    13407.795883632158,\n    13422.145363577607,\n    13436.498679769855,\n    13450.855830159346,\n    13465.216812699266,\n    13479.58162534553,\n    13493.950266056772,\n    13508.32273279435,\n    13522.69902352233,\n    13537.079136207483,\n    13551.463068819285,\n    13565.850819329906,\n    13580.2423857142,\n    13594.637765949712,\n    13609.036958016655,\n    13623.439959897927,\n    13637.84676957908,\n    13652.257385048335,\n    13666.67180429656,\n    13681.090025317284,\n    13695.512046106669,\n    13709.93786466352,\n    13724.367478989278,\n    13738.800887088004,\n    13753.238086966387,\n    13767.679076633725,\n    13782.12385410194,\n    13796.572417385545,\n    13811.024764501659,\n    13825.480893469998,\n    13839.94080231286,\n    13854.404489055134,\n    13868.871951724283,\n    13883.34318835034,\n    13897.818196965914,\n    13912.296975606168,\n    13926.779522308825,\n    13941.26583511416,\n    13955.755912064991,\n    13970.24975120668,\n    13984.747350587126,\n    13999.248708256751,\n    14013.75382226851,\n    14028.262690677873,\n    14042.775311542828,\n    14057.291682923867,\n    14071.811802883994,\n    14086.335669488704,\n    14100.863280805994,\n    14115.39463490634,\n    14129.92972986271,\n    14144.468563750548,\n    14159.01113464777,\n    14173.55744063476,\n    14188.10747979437,\n    14202.6612502119,\n    14217.218749975118,\n    14231.779977174227,\n    14246.34492990188,\n    14260.913606253163,\n    14275.486004325601,\n    14290.062122219148,\n    14304.64195803617,\n    14319.225509881464,\n    14333.812775862236,\n    14348.403754088098,\n    14362.998442671067,\n    14377.59683972556,\n    14392.198943368388,\n    14406.804751718748,\n    14421.414262898223,\n    14436.027475030774,\n    14450.64438624274,\n    14465.264994662828,\n    14479.889298422106,\n    14494.517295654005,\n    14509.148984494313,\n    14523.784363081166,\n    14538.423429555049,\n    14553.066182058781,\n    14567.712618737527,\n    14582.362737738777,\n    14597.016537212348,\n    14611.674015310382,\n    14626.33517018734,\n    14640.999999999993,\n    14655.668502907418,\n    14670.340677071003,\n    14685.016520654426,\n    14699.69603182367,\n    14714.379208747,\n    14729.066049594967,\n    14743.756552540408,\n    14758.45071575843,\n    14773.148537426418,\n    14787.850015724018,\n    14802.555148833142,\n    14817.26393493796,\n    14831.976372224897,\n    14846.692458882624,\n    14861.41219310206,\n    14876.135573076363,\n    14890.862597000923,\n    14905.593263073371,\n    14920.327569493558,\n    14935.065514463557,\n    14949.807096187662,\n    14964.552312872382,\n    14979.301162726431,\n    14994.053643960735,\n    15008.809754788414,\n    15023.569493424788,\n    15038.33285808737,\n    15053.099846995858,\n    15067.870458372134,\n    15082.644690440264,\n    15097.422541426484,\n    15112.204009559202,\n    15126.989093068994,\n    15141.777790188597,\n    15156.570099152905,\n    15171.366018198967,\n    15186.165545565986,\n    15200.968679495301,\n    15215.775418230402,\n    15230.58576001691,\n    15245.39970310258,\n    15260.217245737298,\n    15275.038386173073,\n    15289.863122664035,\n    15304.691453466432,\n    15319.52337683862,\n    15334.358891041069,\n    15349.197994336348,\n    15364.040684989128,\n    15378.886961266177,\n    15393.736821436356,\n    15408.59026377061,\n    15423.447286541972,\n    15438.307888025554,\n    15453.172066498542,\n    15468.039820240196,\n    15482.91114753184,\n    15497.786046656869,\n    15512.664515900733,\n    15527.54655355094,\n    15542.432157897045,\n    15557.32132723066,\n    15572.214059845435,\n    15587.110354037064,\n    15602.010208103273,\n    15616.913620343823,\n    15631.820589060506,\n    15646.731112557136,\n    15661.645189139546,\n    15676.562817115593,\n    15691.483994795139,\n    15706.408720490062,\n    15721.336992514242,\n    15736.26880918356,\n    15751.2041688159,\n    15766.143069731135,\n    15781.085510251132,\n    15796.03148869974,\n    15810.981003402798,\n    15825.934052688119,\n    15840.890634885489,\n    15855.850748326673,\n    15870.8143913454,\n    15885.781562277361,\n    15900.752259460214,\n    15915.726481233565,\n    15930.704225938982,\n    15945.685491919978,\n    15960.67027752201,\n    15975.65858109248,\n    15990.65040098073,\n    16005.645735538035,\n    16020.644583117599,\n    16035.646942074556,\n    16050.652810765967,\n    16065.662187550806,\n    16080.675070789974,\n    16095.691458846273,\n    16110.711350084424,\n    16125.734742871053,\n    16140.761635574685,\n    16155.792026565747,\n    16170.82591421656,\n    16185.863296901338,\n    16200.904172996183,\n    16215.948540879079,\n    16230.9963989299,\n    16246.047745530386,\n    16261.102579064163,\n    16276.160897916721,\n    16291.22270047542,\n    16306.287985129484,\n    16321.356750269995,\n    16336.428994289896,\n    16351.504715583982,\n    16366.5839125489,\n    16381.66658358314,\n    16396.75272708704,\n    16411.842341462776,\n    16426.935425114363,\n    16442.031976447644,\n    16457.131993870298,\n    16472.23547579183,\n    16487.34242062356,\n    16502.45282677864,\n    16517.566692672033,\n    16532.684016720516,\n    16547.804797342676,\n    16562.929032958902,\n    16578.056721991394,\n    16593.18786286415,\n    16608.322454002962,\n    16623.460493835417,\n    16638.601980790896,\n    16653.746913300558,\n    16668.895289797354,\n    16684.047108716015,\n    16699.202368493046,\n    16714.361067566726,\n    16729.523204377107,\n    16744.68877736601,\n    16759.85778497701,\n    16775.030225655464,\n    16790.206097848466,\n    16805.385400004874,\n    16820.568130575302,\n    16835.754288012104,\n    16850.94387076938,\n    16866.136877302983,\n    16881.333306070494,\n    16896.53315553123,\n    16911.73642414625,\n    16926.94311037833,\n    16942.153212691992,\n    16957.366729553454,\n    16972.583659430682,\n    16987.804000793338,\n    17003.027752112816,\n    17018.254911862205,\n    17033.48547851631,\n    17048.719450551645,\n    17063.95682644642,\n    17079.197604680547,\n    17094.44178373563,\n    17109.689362094967,\n    17124.940338243552,\n    17140.19471066806,\n    17155.452477856852,\n    17170.713638299967,\n    17185.978190489128,\n    17201.246132917724,\n    17216.517464080825,\n    17231.792182475165,\n    17247.07028659914,\n    17262.351774952826,\n    17277.636646037936,\n    17292.924898357855,\n    17308.216530417623,\n    17323.51154072392,\n    17338.80992778509,\n    17354.111690111105,\n    17369.416826213594,\n    17384.72533460582,\n    17400.037213802683,\n    17415.352462320716,\n    17430.67107867809,\n    17445.993061394587,\n    17461.318408991636,\n    17476.647119992274,\n    17491.979192921164,\n    17507.314626304586,\n    17522.653418670423,\n    17537.995568548187,\n    17553.341074468986,\n    17568.689934965536,\n    17584.042148572156,\n    17599.39771382477,\n    17614.75662926089,\n    17630.118893419625,\n    17645.484504841683,\n    17660.853462069354,\n    17676.22576364651,\n    17691.60140811862,\n    17706.98039403272,\n    17722.362719937424,\n    17737.748384382936,\n    17753.137385921014,\n    17768.529723105,\n    17783.92539448979,\n    17799.324398631856,\n    17814.726734089225,\n    17830.13239942148,\n    17845.541393189767,\n    17860.95371395678,\n    17876.36936028677,\n    17891.788330745527,\n    17907.210623900395,\n    17922.636238320254,\n    17938.065172575527,\n    17953.497425238176,\n    17968.932994881692,\n    17984.371880081104,\n    17999.814079412972,\n    18015.25959145537,\n    18030.708414787914,\n    18046.16054799173,\n    18061.615989649465,\n    18077.074738345284,\n    18092.53679266486,\n    18108.002151195393,\n    18123.47081252557,\n    18138.9427752456,\n    18154.41803794719,\n    18169.896599223546,\n    18185.37845766938,\n    18200.863611880886,\n    18216.352060455767,\n    18231.843801993204,\n    18247.338835093873,\n    18262.837158359936,\n    18278.338770395032,\n    18293.84366980429,\n    18309.35185519431,\n    18324.863325173166,\n    18340.37807835041,\n    18355.89611333707,\n    18371.417428745623,\n    18386.942023190033,\n    18402.469895285714,\n    18418.00104364955,\n    18433.53546689987,\n    18449.073163656474,\n    18464.614132540602,\n    18480.158372174956,\n    18495.705881183676,\n    18511.25665819236,\n    18526.810701828035,\n    18542.368010719183,\n    18557.928583495715,\n    18573.492418788985,\n    18589.059515231773,\n    18604.629871458303,\n    18620.203486104212,\n    18635.78035780658,\n    18651.3604852039,\n    18666.943866936086,\n    18682.53050164448,\n    18698.12038797184,\n    18713.713524562332,\n    18729.30991006154,\n    18744.909543116457,\n    18760.51242237548,\n    18776.11854648842,\n    18791.72791410648,\n    18807.340523882274,\n    18822.95637446981,\n    18838.57546452449,\n    18854.19779270311,\n    18869.823357663863,\n    18885.452158066328,\n    18901.08419257147,\n    18916.71945984164,\n    18932.357958540564,\n    18947.999687333362,\n    18963.64464488652,\n    18979.292829867907,\n    18994.94424094676,\n    19010.598876793687,\n    19026.256736080668,\n    19041.917817481044,\n    19057.582119669532,\n    19073.2496413222,\n    19088.920381116473,\n    19104.594337731145,\n    19120.271509846356,\n    19135.951896143604,\n    19151.635495305738,\n    19167.322306016948,\n    19183.01232696278,\n    19198.705556830122,\n    19214.401994307198,\n    19230.10163808358,\n    19245.804486850167,\n    19261.510539299208,\n    19277.219794124274,\n    19292.932250020265,\n    19308.64790568342,\n    19324.366759811302,\n    19340.088811102793,\n    19355.8140582581,\n    19371.542499978754,\n    19387.2741349676,\n    19403.008961928797,\n    19418.746979567823,\n    19434.48818659147,\n    19450.232581707827,\n    19465.980163626304,\n    19481.730931057613,\n    19497.48488271376,\n    19513.242017308068,\n    19529.00233355514,\n    19544.765830170898,\n    19560.53250587254,\n    19576.302359378566,\n    19592.07538940876,\n    19607.85159468421,\n    19623.63097392727,\n    19639.41352586159,\n    19655.199249212103,\n    19670.988142705017,\n    19686.780205067822,\n    19702.57543502929,\n    19718.373831319448,\n    19734.175392669615,\n    19749.980117812374,\n    19765.78800548157,\n    19781.59905441232,\n    19797.413263341008,\n    19813.230631005274,\n    19829.051156144014,\n    19844.874837497395,\n    19860.701673806827,\n    19876.531663814985,\n    19892.36480626579,\n    19908.201099904407,\n    19924.04054347726,\n    19939.883135732012,\n    19955.72887541758,\n    19971.577761284105,\n    19987.429792082985,\n    20003.284966566847,\n    20019.14328348956,\n    20035.00474160622,\n    20050.86933967316,\n    20066.737076447942,\n    20082.60795068936,\n    20098.481961157428,\n    20114.359106613385,\n    20130.239385819703,\n    20146.122797540054,\n    20162.009340539353,\n    20177.899013583716,\n    20193.791815440476,\n    20209.68774487818,\n    20225.58680066659,\n    20241.48898157667,\n    20257.394286380597,\n    20273.302713851754,\n    20289.214262764715,\n    20305.128931895277,\n    20321.046720020415,\n    20336.967625918318,\n    20352.89164836836,\n    20368.818786151114,\n    20384.749038048347,\n    20400.68240284301,\n    20416.61887931925,\n    20432.55846626239,\n    20448.501162458953,\n    20464.44696669663,\n    20480.395877764302,\n    20496.347894452025,\n    20512.30301555103,\n    20528.261239853735,\n    20544.22256615372,\n    20560.18699324574,\n    20576.15451992572,\n    20592.125144990758,\n    20608.098867239107,\n    20624.075685470198,\n    20640.055598484618,\n    20656.038605084115,\n    20672.024704071595,\n    20688.013894251126,\n    20704.006174427926,\n    20720.00154340837,\n    20735.99999999999,\n    20752.001543011454,\n    20768.006171252597,\n    20784.013883534382,\n    20800.02467866893,\n    20816.038555469506,\n    20832.055512750507,\n    20848.075549327474,\n    20864.098664017085,\n    20880.12485563716,\n    20896.154123006647,\n    20912.186464945626,\n    20928.221880275312,\n    20944.260367818053,\n    20960.30192639731,\n    20976.346554837684,\n    20992.394251964895,\n    21008.445016605787,\n    21024.49884758832,\n    21040.555743741574,\n    21056.615703895754,\n    21072.67872688217,\n    21088.74481153325,\n    21104.813956682538,\n    21120.886161164683,\n    21136.96142381544,\n    21153.039743471683,\n    21169.12111897138,\n    21185.205549153605,\n    21201.293032858535,\n    21217.383568927453,\n    21233.47715620273,\n    21249.573793527845,\n    21265.67347974736,\n    21281.776213706937,\n    21297.881994253334,\n    21313.990820234398,\n    21330.102690499054,\n    21346.21760389733,\n    21362.335559280327,\n    21378.45655550024,\n    21394.580591410333,\n    21410.70766586496,\n    21426.837777719556,\n    21442.97092583063,\n    21459.10710905576,\n    21475.246326253604,\n    21491.388576283895,\n    21507.53385800743,\n    21523.682170286087,\n    21539.833511982797,\n    21555.987881961566,\n    21572.14527908746,\n    21588.305702226615,\n    21604.469150246216,\n    21620.63562201452,\n    21636.805116400832,\n    21652.97763227552,\n    21669.153168510005,\n    21685.331723976764,\n    21701.513297549318,\n    21717.697888102244,\n    21733.885494511167,\n    21750.07611565276,\n    21766.269750404736,\n    21782.46639764586,\n    21798.666056255934,\n    21814.8687251158,\n    21831.07440310734,\n    21847.283089113484,\n    21863.494782018177,\n    21879.709480706417,\n    21895.92718406423,\n    21912.147890978667,\n    21928.371600337818,\n    21944.598311030797,\n    21960.828021947746,\n    21977.06073197983,\n    21993.296440019243,\n    22009.535144959198,\n    22025.77684569393,\n    22042.02154111869,\n    22058.269230129757,\n    22074.51991162441,\n    22090.77358450096,\n    22107.030247658717,\n    22123.289899998013,\n    22139.552540420187,\n    22155.818167827587,\n    22172.08678112357,\n    22188.358379212495,\n    22204.632960999726,\n    22220.910525391642,\n    22237.1910712956,\n    22253.474597619977,\n    22269.761103274148,\n    22286.050587168473,\n    22302.343048214312,\n    22318.638485324027,\n    22334.936897410968,\n    22351.23828338947,\n    22367.54264217487,\n    22383.849972683485,\n    22400.16027383262,\n    22416.473544540568,\n    22432.789783726603,\n    22449.10899031099,\n    22465.431163214962,\n    22481.75630136074,\n    22498.084403671528,\n    22514.415469071497,\n    22530.749496485798,\n    22547.08648484056,\n    22563.42643306288,\n    22579.769340080824,\n    22596.115204823436,\n    22612.46402622072,\n    22628.815803203655,\n    22645.17053470418,\n    22661.5282196552,\n    22677.888856990587,\n    22694.25244564517,\n    22710.618984554734,\n    22726.988472656034,\n    22743.360908886778,\n    22759.736292185622,\n    22776.11462149219,\n    22792.495895747044,\n    22808.88011389172,\n    22825.26727486868,\n    22841.657377621348,\n    22858.050421094096,\n    22874.446404232243,\n    22890.845325982053,\n    22907.247185290722,\n    22923.651981106406,\n    22940.059712378195,\n    22956.470378056114,\n    22972.88397709113,\n    22989.300508435153,\n    23005.719971041017,\n    23022.1423638625,\n    23038.56768585431,\n    23054.99593597208,\n    23071.427113172387,\n    23087.86121641273,\n    23104.29824465153,\n    23120.738196848142,\n    23137.18107196285,\n    23153.626868956846,\n    23170.075586792263,\n    23186.52722443214,\n    23202.981780840448,\n    23219.439254982062,\n    23235.899645822796,\n    23252.362952329357,\n    23268.829173469378,\n    23285.298308211408,\n    23301.7703555249,\n    23318.245314380227,\n    23334.723183748658,\n    23351.203962602387,\n    23367.687649914504,\n    23384.174244659007,\n    23400.663745810794,\n    23417.15615234568,\n    23433.651463240367,\n    23450.14967747246,\n    23466.650794020472,\n    23483.154811863806,\n    23499.661729982763,\n    23516.171547358543,\n    23532.684262973235,\n    23549.19987580982,\n    23565.71838485219,\n    23582.23978908509,\n    23598.764087494194,\n    23615.29127906604,\n    23631.821362788058,\n    23648.354337648565,\n    23664.890202636765,\n    23681.428956742733,\n    23697.970598957443,\n    23714.51512827274,\n    23731.062543681343,\n    23747.612844176863,\n    23764.166028753774,\n    23780.72209640744,\n    23797.281046134085,\n    23813.842876930816,\n    23830.407587795606,\n    23846.975177727305,\n    23863.545645725622,\n    23880.11899079115,\n    23896.695211925336,\n    23913.2743081305,\n    23929.85627840982,\n    23946.441121767348,\n    23963.02883720799,\n    23979.619423737513,\n    23996.212880362546,\n    24012.809206090584,\n    24029.408399929966,\n    24046.0104608899,\n    24062.615387980433,\n    24079.223180212488,\n    24095.833836597827,\n    24112.447356149067,\n    24129.063737879667,\n    24145.682980803947,\n    24162.305083937077,\n    24178.930046295063,\n    24195.557866894764,\n    24212.18854475388,\n    24228.82207889096,\n    24245.45846832539,\n    24262.097712077397,\n    24278.73980916805,\n    24295.384758619257,\n    24312.03255945377,\n    24328.683210695162,\n    24345.33671136786,\n    24361.99306049711,\n    24378.652257108995,\n    24395.314300230442,\n    24411.979188889192,\n    24428.646922113825,\n    24445.317498933746,\n    24461.990918379193,\n    24478.66717948122,\n    24495.346281271726,\n    24512.028222783407,\n    24528.7130030498,\n    24545.40062110527,\n    24562.091075984976,\n    24578.784366724925,\n    24595.480492361927,\n    24612.179451933614,\n    24628.881244478434,\n    24645.585869035654,\n    24662.293324645343,\n    24679.003610348394,\n    24695.716725186514,\n    24712.43266820221,\n    24729.151438438807,\n    24745.873034940436,\n    24762.59745675203,\n    24779.324702919344,\n    24796.054772488926,\n    24812.787664508123,\n    24829.5233780251,\n    24846.26191208882,\n    24863.003265749034,\n    24879.747438056307,\n    24896.494428062004,\n    24913.244234818278,\n    24929.99685737808,\n    24946.752294795166,\n    24963.51054612408,\n    24980.271610420154,\n    24997.035486739525,\n    25013.802174139113,\n    25030.57167167663,\n    25047.343978410572,\n    25064.119093400237,\n    25080.897015705697,\n    25097.677744387816,\n    25114.46127850824,\n    25131.247617129404,\n    25148.036759314517,\n    25164.828704127583,\n    25181.62345063337,\n    25198.420997897447,\n    25215.221344986145,\n    25232.024490966574,\n    25248.83043490663,\n    25265.639175874974,\n    25282.45071294105,\n    25299.26504517507,\n    25316.082171648024,\n    25332.902091431668,\n    25349.724803598532,\n    25366.550307221914,\n    25383.378601375884,\n    25400.20968513527,\n    25417.04355757568,\n    25433.880217773472,\n    25450.719664805783,\n    25467.561897750507,\n    25484.406915686297,\n    25501.254717692573,\n    25518.10530284951,\n    25534.958670238055,\n    25551.814818939893,\n    25568.67374803748,\n    25585.535456614027,\n    25602.399943753502,\n    25619.26720854062,\n    25636.137250060856,\n    25653.01006740043,\n    25669.885659646327,\n    25686.76402588627,\n    25703.645165208734,\n    25720.529076702944,\n    25737.415759458876,\n    25754.305212567244,\n    25771.197435119517,\n    25788.0924262079,\n    25804.990184925344,\n    25821.890710365547,\n    25838.794001622948,\n    25855.700057792717,\n    25872.608877970775,\n    25889.52046125378,\n    25906.43480673912,\n    25923.351913524923,\n    25940.271780710063,\n    25957.194407394138,\n    25974.119792677477,\n    25991.047935661154,\n    26007.978835446964,\n    26024.912491137442,\n    26041.84890183584,\n    26058.788066646157,\n    26075.729984673108,\n    26092.674655022136,\n    26109.62207679941,\n    26126.57224911183,\n    26143.525171067016,\n    26160.480841773315,\n    26177.43926033979,\n    26194.40042587623,\n    26211.36433749315,\n    26228.330994301767,\n    26245.30039541404,\n    26262.272539942627,\n    26279.24742700092,\n    26296.225055703006,\n    26313.205425163702,\n    26330.18853449854,\n    26347.174382823756,\n    26364.162969256307,\n    26381.154292913852,\n    26398.148352914774,\n    26415.14514837815,\n    26432.144678423778,\n    26449.146942172156,\n    26466.151938744493,\n    26483.159667262702,\n    26500.170126849403,\n    26517.18331662792,\n    26534.199235722277,\n    26551.2178832572,\n    26568.239258358124,\n    26585.263360151173,\n    26602.29018776318,\n    26619.319740321676,\n    26636.352016954883,\n    26653.387016791727,\n    26670.424738961825,\n    26687.465182595493,\n    26704.508346823743,\n    26721.554230778267,\n    26738.602833591467,\n    26755.65415439643,\n    26772.70819232693,\n    26789.764946517433,\n    26806.824416103096,\n    26823.88660021976,\n    26840.95149800396,\n    26858.01910859291,\n    26875.089431124517,\n    26892.162464737365,\n    26909.23820857072,\n    26926.316661764547,\n    26943.39782345947,\n    26960.481692796813,\n    26977.56826891857,\n    26994.657550967422,\n    27011.74953808672,\n    27028.844229420498,\n    27045.941624113464,\n    27063.041721311005,\n    27080.14452015918,\n    27097.250019804727,\n    27114.35821939505,\n    27131.469118078236,\n    27148.58271500303,\n    27165.699009318858,\n    27182.818000175816,\n    27199.939686724665,\n    27217.064068116837,\n    27234.191143504428,\n    27251.320912040203,\n    27268.453372877593,\n    27285.588525170693,\n    27302.72636807427,\n    27319.866900743735,\n    27337.01012233518,\n    27354.156032005358,\n    27371.30462891167,\n    27388.455912212183,\n    27405.609881065626,\n    27422.766534631388,\n    27439.925872069507,\n    27457.087892540683,\n    27474.252595206275,\n    27491.419979228293,\n    27508.5900437694,\n    27525.762787992917,\n    27542.93821106281,\n    27560.116312143706,\n    27577.297090400876,\n    27594.480545000246,\n    27611.666675108383,\n    27628.855479892518,\n    27646.046958520514,\n    27663.24111016089,\n    27680.4379339828,\n    27697.637429156064,\n    27714.83959485113,\n    27732.04443023909,\n    27749.251934491687,\n    27766.4621067813,\n    27783.67494628095,\n    27800.8904521643,\n    27818.108623605658,\n    27835.329459779954,\n    27852.55295986278,\n    27869.779123030345,\n    27887.007948459504,\n    27904.239435327745,\n    27921.473582813196,\n    27938.710390094617,\n    27955.94985635139,\n    27973.19198076355,\n    27990.436762511745,\n    28007.684200777272,\n    28024.934294742037,\n    28042.1870435886,\n    28059.44244650013,\n    28076.700502660427,\n    28093.961211253933,\n    28111.224571465696,\n    28128.4905824814,\n    28145.759243487362,\n    28163.03055367051,\n    28180.304512218394,\n    28197.581118319198,\n    28214.860371161725,\n    28232.14226993539,\n    28249.426813830236,\n    28266.71400203693,\n    28284.003833746745,\n    28301.296308151585,\n    28318.59142444396,\n    28335.889181817,\n    28353.189579464466,\n    28370.492616580705,\n    28387.798292360705,\n    28405.10660600005,\n    28422.417556694945,\n    28439.73114364221,\n    28457.047366039264,\n    28474.36622308415,\n    28491.687713975512,\n    28509.01183791261,\n    28526.338594095305,\n    28543.66798172407,\n    28560.999999999985,\n    28578.33464812473,\n    28595.671925300605,\n    28613.0118307305,\n    28630.35436361791,\n    28647.699523166943,\n    28665.0473085823,\n    28682.39771906929,\n    28699.750753833818,\n    28717.10641208239,\n    28734.46469302212,\n    28751.82559586071,\n    28769.189119806462,\n    28786.55526406828,\n    28803.92402785566,\n    28821.2954103787,\n    28838.669410848088,\n    28856.046028475103,\n    28873.42526247163,\n    28890.80711205013,\n    28908.191576423673,\n    28925.578654805915,\n    28942.968346411097,\n    28960.360650454055,\n    28977.755566150212,\n    28995.15309271559,\n    29012.553229366786,\n    29029.955975320987,\n    29047.361329795975,\n    29064.769292010107,\n    29082.179861182336,\n    29099.593036532187,\n    29117.00881727978,\n    29134.427202645813,\n    29151.848191851568,\n    29169.27178411891,\n    29186.697978670283,\n    29204.126774728706,\n    29221.55817151779,\n    29238.992168261717,\n    29256.42876418525,\n    29273.867958513725,\n    29291.30975047306,\n    29308.754139289747,\n    29326.201124190855,\n    29343.65070440403,\n    29361.102879157483,\n    29378.557647680012,\n    29396.015009200975,\n    29413.47496295031,\n    29430.937508158524,\n    29448.402644056692,\n    29465.87036987647,\n    29483.34068485007,\n    29500.81358821028,\n    29518.289079190454,\n    29535.76715702451,\n    29553.247820946945,\n    29570.731070192807,\n    29588.216903997723,\n    29605.70532159787,\n    29623.19632223,\n    29640.68990513143,\n    29658.18606954003,\n    29675.684814694236,\n    29693.186139833047,\n    29710.690044196028,\n    29728.196527023298,\n    29745.705587555527,\n    29763.217225033964,\n    29780.731438700397,\n    29798.248227797183,\n    29815.76759156723,\n    29833.289529254005,\n    29850.81404010153,\n    29868.34112335438,\n    29885.870778257693,\n    29903.403004057145,\n    29920.937799998974,\n    29938.475165329975,\n    29956.01509929748,\n    29973.557601149394,\n    29991.102670134147,\n    30008.65030550074,\n    30026.20050649871,\n    30043.753272378144,\n    30061.308602389683,\n    30078.866495784507,\n    30096.426951814352,\n    30113.989969731494,\n    30131.55554878875,\n    30149.12368823949,\n    30166.69438733763,\n    30184.26764533761,\n    30201.843461494434,\n    30219.42183506364,\n    30237.00276530131,\n    30254.586251464058,\n    30272.172292809046,\n    30289.760888593977,\n    30307.35203807709,\n    30324.94574051716,\n    30342.541995173502,\n    30360.140801305966,\n    30377.742158174944,\n    30395.346065041358,\n    30412.952521166666,\n    30430.56152581286,\n    30448.173078242475,\n    30465.78717771856,\n    30483.40382350472,\n    30501.02301486507,\n    30518.644751064272,\n    30536.269031367516,\n    30553.895855040515,\n    30571.52522134952,\n    30589.157129561307,\n    30606.791578943175,\n    30624.428568762964,\n    30642.06809828903,\n    30659.71016679026,\n    30677.35477353607,\n    30695.00191779639,\n    30712.651598841687,\n    30730.303815942945,\n    30747.958568371676,\n    30765.615855399912,\n    30783.27567630021,\n    30800.938030345646,\n    30818.602916809814,\n    30836.270334966837,\n    30853.940284091354,\n    30871.61276345852,\n    30889.28777234401,\n    30906.965310024025,\n    30924.64537577527,\n    30942.327968874983,\n    30960.013088600903,\n    30977.700734231294,\n    30995.39090504493,\n    31013.0836003211,\n    31030.77881933962,\n    31048.476561380798,\n    31066.17682572547,\n    31083.87961165498,\n    31101.58491845118,\n    31119.29274539644,\n    31137.003091773637,\n    31154.715956866155,\n    31172.431339957893,\n    31190.14924033326,\n    31207.869657277162,\n    31225.592590075023,\n    31243.31803801277,\n    31261.04600037684,\n    31278.77647645417,\n    31296.50946553221,\n    31314.24496689891,\n    31331.98297984272,\n    31349.7235036526,\n    31367.466537618013,\n    31385.212081028923,\n    31402.960133175795,\n    31420.710693349596,\n    31438.46376084179,\n    31456.21933494435,\n    31473.977414949743,\n    31491.738000150934,\n    31509.50108984139,\n    31527.26668331507,\n    31545.034779866437,\n    31562.80537879045,\n    31580.578479382562,\n    31598.35408093872,\n    31616.13218275537,\n    31633.91278412945,\n    31651.695884358396,\n    31669.48148274013,\n    31687.269578573076,\n    31705.060171156143,\n    31722.853259788735,\n    31740.64884377075,\n    31758.446922402567,\n    31776.247494985066,\n    31794.050560819614,\n    31811.85611920806,\n    31829.664169452753,\n    31847.47471085652,\n    31865.287742722685,\n    31883.103264355046,\n    31900.9212750579,\n    31918.74177413602,\n    31936.56476089467,\n    31954.3902346396,\n    31972.21819467704,\n    31990.048640313704,\n    32007.881570856793,\n    32025.716985613984,\n    32043.554883893445,\n    32061.395265003815,\n    32079.238128254223,\n    32097.08347295427,\n    32114.93129841405,\n    32132.781603944117,\n    32150.634388855524,\n    32168.48965245979,\n    32186.347394068915,\n    32204.20761299537,\n    32222.07030855212,\n    32239.935480052583,\n    32257.80312681067,\n    32275.673248140767,\n    32293.54584335772,\n    32311.420911776862,\n    32329.298452713996,\n    32347.178465485395,\n    32365.060949407813,\n    32382.945903798463,\n    32400.83332797504,\n    32418.723221255706,\n    32436.615582959093,\n    32454.510412404306,\n    32472.407708910916,\n    32490.307471798966,\n    32508.20970038896,\n    32526.114394001877,\n    32544.021551959166,\n    32561.931173582732,\n    32579.843258194956,\n    32597.75780511868,\n    32615.67481367721,\n    32633.59428319433,\n    32651.51621299426,\n    32669.44060240171,\n    32687.367450741847,\n    32705.296757340297,\n    32723.228521523146,\n    32741.162742616943,\n    32759.099419948703,\n    32777.0385528459,\n    32794.980140636464,\n    32812.92418264879,\n    32830.87067821173,\n    32848.81962665459,\n    32866.77102730715,\n    32884.72487949962,\n    32902.68118256269,\n    32920.639935827494,\n    32938.60113862564,\n    32956.56479028918,\n    32974.53089015061,\n    32992.499437542894,\n    33010.47043179945,\n    33028.443872254145,\n    33046.41975824131,\n    33064.39808909571,\n    33082.37886415258,\n    33100.36208274759,\n    33118.34774421688,\n    33136.335847897026,\n    33154.32639312506,\n    33172.31937923847,\n    33190.31480557517,\n    33208.312671473555,\n    33226.31297627244,\n    33244.31571931111,\n    33262.320899929284,\n    33280.328517467125,\n    33298.33857126526,\n    33316.35106066475,\n    33334.36598500709,\n    33352.38334363424,\n    33370.40313588859,\n    33388.42536111299,\n    33406.45001865072,\n    33424.4771078455,\n    33442.50662804151,\n    33460.53857858335,\n    33478.57295881608,\n    33496.60976808519,\n    33514.64900573662,\n    33532.69067111674,\n    33550.734763572356,\n    33568.781282450735,\n    33586.83022709956,\n    33604.88159686697,\n    33622.93539110153,\n    33640.99160915224,\n    33659.05025036854,\n    33677.11131410032,\n    33695.17479969788,\n    33713.240706511984,\n    33731.309033893805,\n    33749.37978119497,\n    33767.45294776753,\n    33785.528532963974,\n    33803.60653613721,\n    33821.6869566406,\n    33839.76979382794,\n    33857.855047053425,\n    33875.94271567171,\n    33894.03279903787,\n    33912.12529650743,\n    33930.220207436316,\n    33948.31753118089,\n    33966.41726709796,\n    33984.519414544746,\n    34002.6239728789,\n    34020.73094145851,\n    34038.84031964208,\n    34056.952106788536,\n    34075.066302257255,\n    34093.182905408015,\n    34111.30191560103,\n    34129.42333219693,\n    34147.547154556785,\n    34165.67338204208,\n    34183.80201401472,\n    34201.93304983703,\n    34220.06648887178,\n    34238.20233048214,\n    34256.3405740317,\n    34274.481218884495,\n    34292.62426440495,\n    34310.76970995794,\n    34328.91755490873,\n    34347.06779862303,\n    34365.220440466954,\n    34383.37547980705,\n    34401.53291601026,\n    34419.69274844397,\n    34437.85497647597,\n    34456.01959947445,\n    34474.18661680806,\n    34492.35602784582,\n    34510.527831957195,\n    34528.70202851205,\n    34546.87861688068,\n    34565.05759643377,\n    34583.23896654245,\n    34601.42272657823,\n    34619.608875913065,\n    34637.797413919296,\n    34655.98833996969,\n    34674.18165343742,\n    34692.37735369608,\n    34710.57544011967,\n    34728.77591208258,\n    34746.97876895965,\n    34765.18401012608,\n    34783.39163495754,\n    34801.60164283005,\n    34819.81403312006,\n    34838.028805204456,\n    34856.24595846048,\n    34874.46549226582,\n    34892.68740599856,\n    34910.91169903718,\n    34929.138370760564,\n    34947.36742054803,\n    34965.59884777927,\n    34983.8326518344,\n    35002.06883209391,\n    35020.30738793874,\n    35038.54831875018,\n    35056.79162390998,\n    35075.03730280025,\n    35093.285354803505,\n    35111.53577930269,\n    35129.788575681116,\n    35148.043743322516,\n    35166.30128161101,\n    35184.56118993114,\n    35202.823467667826,\n    35221.08811420639,\n    35239.355128932555,\n    35257.62451123245,\n    35275.896260492584,\n    35294.170376099886,\n    35312.44685744167,\n    35330.72570390563,\n    35349.00691487989,\n    35367.290489752944,\n    35385.576427913686,\n    35403.86472875142,\n    35422.15539165581,\n    35440.44841601697,\n    35458.74380122534,\n    35477.041546671804,\n    35495.34165174762,\n    35513.644115844436,\n    35531.948938354304,\n    35550.256118669655,\n    35568.56565618331,\n    35586.8775502885,\n    35605.191800378816,\n    35623.50840584827,\n    35641.82736609124,\n    35660.148680502505,\n    35678.47234847723,\n    35696.79836941098,\n    35715.12674269968,\n    35733.45746773966,\n    35751.790543927644,\n    35770.12597066074,\n    35788.46374733642,\n    35806.80387335257,\n    35825.14634810745,\n    35843.49117099971,\n    35861.83834142837,\n    35880.18785879285,\n    35898.539722492955,\n    35916.89393192886,\n    35935.25048650113,\n    35953.60938561072,\n    35971.97062865896,\n    35990.33421504756,\n    36008.70014417861,\n    36027.068415454596,\n    36045.43902827837,\n    36063.81198205317,\n    36082.18727618261,\n    36100.564910070694,\n    36118.94488312179,\n    36137.327194740654,\n    36155.71184433243,\n    36174.09883130262,\n    36192.488155057115,\n    36210.87981500219,\n    36229.27381054447,\n    36247.670141091,\n    36266.06880604917,\n    36284.46980482674,\n    36302.87313683186,\n    36321.27880147307,\n    36339.68679815925,\n    36358.09712629968,\n    36376.50978530401,\n    36394.924774582265,\n    36413.342093544816,\n    36431.761741602444,\n    36450.18371816629,\n    36468.60802264786,\n    36487.03465445903,\n    36505.46361301206,\n    36523.89489771958,\n    36542.32850799458,\n    36560.76444325041,\n    36579.20270290083,\n    36597.643286359926,\n    36616.08619304218,\n    36634.53142236244,\n    36652.978973735895,\n    36671.42884657814,\n    36689.881040305125,\n    36708.33555433315,\n    36726.7923880789,\n    36745.25154095943,\n    36763.71301239214,\n    36782.17680179481,\n    36800.64290858559,\n    36819.11133218299,\n    36837.58207200587,\n    36856.05512747348,\n    36874.53049800542,\n    36893.00818302165,\n    36911.488181942506,\n    36929.970494188674,\n    36948.455119181206,\n    36966.94205634152,\n    36985.43130509139,\n    37003.92286485296,\n    37022.41673504873,\n    37040.91291510156,\n    37059.411404434664,\n    37077.91220247162,\n    37096.41530863639,\n    37114.92072235324,\n    37133.42844304686,\n    37151.93847014225,\n    37170.450803064785,\n    37188.96544124021,\n    37207.4823840946,\n    37226.0016310544,\n    37244.52318154643,\n    37263.04703499784,\n    37281.57319083615,\n    37300.101648489224,\n    37318.632407385296,\n    37337.165466952945,\n    37355.70082662111,\n    37374.238485819085,\n    37392.77844397651,\n    37411.320700523385,\n    37429.86525489006,\n    37448.41210650723,\n    37466.96125480597,\n    37485.51269921768,\n    37504.066439174116,\n    37522.622474107404,\n    37541.18080344999,\n    37559.741426634704,\n    37578.30434309469,\n    37596.86955226349,\n    37615.43705357494,\n    37634.00684646328,\n    37652.578930363044,\n    37671.153304709165,\n    37689.729968936896,\n    37708.30892248185,\n    37726.890164779965,\n    37745.47369526756,\n    37764.059513381275,\n    37782.64761855811,\n    37801.238010235415,\n    37819.83068785086,\n    37838.425650842495,\n    37857.02289864869,\n    37875.62243070817,\n    37894.22424646001,\n    37912.828345343616,\n    37931.43472679875,\n    37950.043390265506,\n    37968.65433518433,\n    37987.267560996,\n    38005.883067141665,\n    38024.500853062775,\n    38043.12091820116,\n    38061.74326199896,\n    38080.36788389868,\n    38098.99478334316,\n    38117.62395977556,\n    38136.25541263942,\n    38154.889141378575,\n    38173.525145437234,\n    38192.16342425994,\n    38210.80397729155,\n    38229.44680397729,\n    38248.0919037627,\n    38266.739276093685,\n    38285.388920416466,\n    38304.040836177606,\n    38322.695022824,\n    38341.3514798029,\n    38360.01020656186,\n    38378.671202548816,\n    38397.33446721199,\n    38415.99999999998,\n    38434.66780036168,\n    38453.33786774637,\n    38472.01020160361,\n    38490.68480138334,\n    38509.361666535784,\n    38528.04079651155,\n    38546.72219076155,\n    38565.405848737035,\n    38584.091769889594,\n    38602.77995367113,\n    38621.47039953391,\n    38640.163106930486,\n    38658.858075313794,\n    38677.55530413706,\n    38696.25479285386,\n    38714.956540918094,\n    38733.66054778399,\n    38752.36681290611,\n    38771.07533573935,\n    38789.78611573892,\n    38808.49915236037,\n    38827.21444505957,\n    38845.93199329274,\n    38864.65179651639,\n    38883.37385418738,\n    38902.098165762916,\n    38920.824730700486,\n    38939.55354845794,\n    38958.28461849343,\n    38977.01794026546,\n    38995.753513232834,\n    39014.4913368547,\n    39033.23141059052,\n    39051.97373390007,\n    39070.718306243485,\n    39089.46512708119,\n    39108.214195873945,\n    39126.96551208283,\n    39145.71907516926,\n    39164.474884594965,\n    39183.23293982199,\n    39201.99324031271,\n    39220.755785529815,\n    39239.52057493633,\n    39258.28760799559,\n    39277.05688417125,\n    39295.82840292729,\n    39314.60216372801,\n    39333.37816603802,\n    39352.15640932227,\n    39370.936893046004,\n    39389.71961667481,\n    39408.50457967458,\n    39427.29178151152,\n    39446.08122165217,\n    39464.87289956337,\n    39483.66681471229,\n    39502.46296656641,\n    39521.26135459354,\n    39540.06197826178,\n    39558.86483703957,\n    39577.669930395656,\n    39596.47725779911,\n    39615.2868187193,\n    39634.09861262592,\n    39652.91263898899,\n    39671.72889727882,\n    39690.547386966064,\n    39709.36810752165,\n    39728.19105841686,\n    39747.01623912326,\n    39765.84364911275,\n    39784.67328785753,\n    39803.505154830105,\n    39822.33924950332,\n    39841.17557135029,\n    39860.0141198445,\n    39878.85489445968,\n    39897.69789466991,\n    39916.54311994958,\n    39935.39056977337,\n    39954.2402436163,\n    39973.092140953675,\n    39991.94626126112,\n    40010.80260401455,\n    40029.661168690225,\n    40048.52195476468,\n    40067.38496171478,\n    40086.25018901768,\n    40105.117636150855,\n    40123.98730259209,\n    40142.85918781947,\n    40161.73329131138,\n    40180.60961254653,\n    40199.48815100391,\n    40218.368906162854,\n    40237.25187750296,\n    40256.13706450415,\n    40275.02446664667,\n    40293.91408341103,\n    40312.805914278084,\n    40331.69995872896,\n    40350.5962162451,\n    40369.49468630827,\n    40388.39536840051,\n    40407.29826200417,\n    40426.20336660192,\n    40445.110681676706,\n    40464.02020671179,\n    40482.93194119075,\n    40501.84588459744,\n    40520.76203641603,\n    40539.680396130985,\n    40558.60096322707,\n    40577.52373718937,\n    40596.448717503234,\n    40615.37590365434,\n    40634.30529512866,\n    40653.23689141245,\n    40672.170691992294,\n    40691.10669635505,\n    40710.04490398787,\n    40728.98531437824,\n    40747.9279270139,\n    40766.87274138292,\n    40785.81975697365,\n    40804.768973274746,\n    40823.72038977516,\n    40842.67400596413,\n    40861.62982133121,\n    40880.58783536623,\n    40899.54804755933,\n    40918.51045740093,\n    40937.47506438176,\n    40956.44186799285,\n    40975.4108677255,\n    40994.38206307133,\n    41013.355453522236,\n    41032.33103857042,\n    41051.30881770836,\n    41070.288790428865,\n    41089.27095622499,\n    41108.25531459011,\n    41127.24186501789,\n    41146.23060700229,\n    41165.22154003754,\n    41184.2146636182,\n    41203.20997723908,\n    41222.20748039531,\n    41241.2071725823,\n    41260.20905329575,\n    41279.21312203166,\n    41298.2193782863,\n    41317.227821556255,\n    41336.23845133838,\n    41355.25126712983,\n    41374.26626842804,\n    41393.28345473074,\n    41412.30282553595,\n    41431.32438034198,\n    41450.34811864742,\n    41469.374039951144,\n    41488.40214375233,\n    41507.43242955043,\n    41526.46489684518,\n    41545.49954513663,\n    41564.536373925075,\n    41583.575382711126,\n    41602.61657099567,\n    41621.659938279874,\n    41640.705484065205,\n    41659.7532078534,\n    41678.803109146495,\n    41697.8551874468,\n    41716.90944225691,\n    41735.96587307971,\n    41755.02447941836,\n    41774.085260776315,\n    41793.1482166573,\n    41812.21334656533,\n    41831.280650004715,\n    41850.350126480014,\n    41869.42177549611,\n    41888.49559655813,\n    41907.571589171515,\n    41926.64975284196,\n    41945.73008707546,\n    41964.812591378286,\n    41983.89726525698,\n    42002.98410821838,\n    42022.07311976959,\n    42041.164299418015,\n    42060.25764667131,\n    42079.35316103742,\n    42098.45084202459,\n    42117.550689141324,\n    42136.652701896404,\n    42155.75687979889,\n    42174.86322235814,\n    42193.97172908376,\n    42213.082399485655,\n    42232.195233074,\n    42251.310229359246,\n    42270.42738785213,\n    42289.546708063644,\n    42308.66818950508,\n    42327.791831687995,\n    42346.91763412423,\n    42366.04559632589,\n    42385.17571780535,\n    42404.307998075295,\n    42423.44243664864,\n    42442.57903303861,\n    42461.71778675867,\n    42480.858697322605,\n    42500.00176424442,\n    42519.146987038446,\n    42538.29436521925,\n    42557.44389830169,\n    42576.59558580088,\n    42595.74942723224,\n    42614.90542211142,\n    42634.06356995438,\n    42653.22387027732,\n    42672.386322596736,\n    42691.55092642938,\n    42710.71768129229,\n    42729.88658670276,\n    42749.05764217836,\n    42768.23084723694,\n    42787.4062013966,\n    42806.58370417574,\n    42825.76335509299,\n    42844.945153667286,\n    42864.129099417805,\n    42883.315191864014,\n    42902.50343052565,\n    42921.69381492269,\n    42940.88634457541,\n    42960.08101900435,\n    42979.2778377303,\n    42998.47680027432,\n    43017.67790615777,\n    43036.881154902236,\n    43056.08654602958,\n    43075.29407906196,\n    43094.50375352177,\n    43113.71556893167,\n    43132.9295248146,\n    43152.14562069376,\n    43171.36385609262,\n    43190.58423053491,\n    43209.80674354462,\n    43229.031394646016,\n    43248.25818336362,\n    43267.487109222224,\n    43286.71817174688,\n    43305.951370462906,\n    43325.18670489588,\n    43344.42417457165,\n    43363.66377901632,\n    43382.90551775626,\n    43402.1493903181,\n    43421.39539622875,\n    43440.64353501535,\n    43459.89380620532,\n    43479.146209326354,\n    43498.40074390638,\n    43517.657409473606,\n    43536.916205556496,\n    43556.177131683784,\n    43575.44018738444,\n    43594.705372187724,\n    43613.972685623135,\n    43633.24212722044,\n    43652.51369650967,\n    43671.78739302109,\n    43691.06321628527,\n    43710.341165833,\n    43729.621241195346,\n    43748.903441903625,\n    43768.18776748941,\n    43787.474217484545,\n    43806.762791421126,\n    43826.0534888315,\n    43845.34630924828,\n    43864.641252204325,\n    43883.938317232765,\n    43903.23750386697,\n    43922.538811640596,\n    43941.84224008751,\n    43961.14778874188,\n    43980.4554571381,\n    43999.765244810835,\n    44019.077151295,\n    44038.391176125755,\n    44057.70731883854,\n    44077.02557896902,\n    44096.34595605314,\n    44115.66844962708,\n    44134.99305922729,\n    44154.319784390456,\n    44173.648624653535,\n    44192.97957955373,\n    44212.31264862849,\n    44231.64783141553,\n    44250.985127452805,\n    44270.32453627854,\n    44289.66605743118,\n    44309.009690449464,\n    44328.355434872356,\n    44347.703290239064,\n    44367.05325608907,\n    44386.40533196211,\n    44405.75951739814,\n    44425.11581193739,\n    44444.47421512033,\n    44463.834726487694,\n    44483.19734558046,\n    44502.56207193984,\n    44521.92890510733,\n    44541.297844624634,\n    44560.66889003373,\n    44580.042040876855,\n    44599.417296696454,\n    44618.794657035265,\n    44638.174121436256,\n    44657.55568944264,\n    44676.93936059787,\n    44696.32513444567,\n    44715.71301053,\n    44735.102988395054,\n    44754.495067585296,\n    44773.88924764542,\n    44793.285528120374,\n    44812.683908555344,\n    44832.08438849578,\n    44851.48696748736,\n    44870.891645076015,\n    44890.298420807914,\n    44909.70729422949,\n    44929.11826488741,\n    44948.531332328566,\n    44967.946496100136,\n    44987.36375574951,\n    45006.783110824326,\n    45026.20456087247,\n    45045.6281054421,\n    45065.05374408157,\n    45084.48147633949,\n    45103.91130176475,\n    45123.34321990643,\n    45142.777230313885,\n    45162.21333253671,\n    45181.65152612473,\n    45201.09181062803,\n    45220.53418559692,\n    45239.978650581965,\n    45259.42520513396,\n    45278.87384880394,\n    45298.32458114319,\n    45317.777401703235,\n    45337.23231003585,\n    45356.68930569302,\n    45376.148388227,\n    45395.60955719027,\n    45415.07281213556,\n    45434.53815261583,\n    45454.00557818428,\n    45473.47508839436,\n    45492.946682799746,\n    45512.42036095436,\n    45531.89612241236,\n    45551.373966728155,\n    45570.85389345636,\n    45590.33590215187,\n    45609.819992369776,\n    45629.30616366544,\n    45648.79441559444,\n    45668.28474771261,\n    45687.777159576006,\n    45707.27165074092,\n    45726.76822076389,\n    45746.26686920169,\n    45765.76759561132,\n    45785.270399550034,\n    45804.7752805753,\n    45824.28223824482,\n    45843.79127211657,\n    45863.30238174872,\n    45882.81556669969,\n    45902.33082652812,\n    45921.84816079293,\n    45941.367569053225,\n    45960.889050868354,\n    45980.41260579793,\n    45999.93823340176,\n    46019.4659332399,\n    46038.99570487266,\n    46058.52754786055,\n    46078.06146176433,\n    46097.597446144995,\n    46117.135500563774,\n    46136.67562458211,\n    46156.2178177617,\n    46175.76207966446,\n    46195.30840985254,\n    46214.85680788833,\n    46234.40727333444,\n    46253.95980575372,\n    46273.51440470924,\n    46293.07106976431,\n    46312.62980048248,\n    46332.1905964275,\n    46351.75345716338,\n    46371.31838225435,\n    46390.88537126487,\n    46410.45442375962,\n    46430.025539303526,\n    46449.59871746173,\n    46469.17395779962,\n    46488.75125988279,\n    46508.33062327707,\n    46527.91204754854,\n    46547.49553226347,\n    46567.0810769884,\n    46586.66868129006,\n    46606.258344735434,\n    46625.850066891726,\n    46645.44384732635,\n    46665.039685606986,\n    46684.6375813015,\n    46704.237533978005,\n    46723.83954320484,\n    46743.44360855057,\n    46763.04972958399,\n    46782.657905874104,\n    46802.26813699017,\n    46821.88042250163,\n    46841.494761978196,\n    46861.111154989776,\n    46880.72960110652,\n    46900.3500998988,\n    46919.9726509372,\n    46939.597253792526,\n    46959.22390803584,\n    46978.8526132384,\n    46998.48336897169,\n    47018.11617480742,\n    47037.75103031755,\n    47057.38793507422,\n    47077.02688864981,\n    47096.66789061694,\n    47116.31094054843,\n    47135.95603801733,\n    47155.60318259692,\n    47175.2523738607,\n    47194.903611382375,\n    47214.5568947359,\n    47234.21222349542,\n    47253.86959723534,\n    47273.52901553025,\n    47293.19047795498,\n    47312.85398408458,\n    47332.519533494306,\n    47352.187125759665,\n    47371.85676045634,\n    47391.52843716029,\n    47411.20215544765,\n    47430.877914894794,\n    47450.5557150783,\n    47470.23555557498,\n    47489.91743596186,\n    47509.6013558162,\n    47529.28731471546,\n    47548.97531223731,\n    47568.66534795967,\n    47588.35742146065,\n    47608.051532318605,\n    47627.74768011208,\n    47647.445864419846,\n    47667.14608482091,\n    47686.848340894474,\n    47706.55263221997,\n    47726.258958377046,\n    47745.96731894555,\n    47765.67771350559,\n    47785.39014163743,\n    47805.104602921594,\n    47824.821096938824,\n    47844.539623270044,\n    47864.26018149643,\n    47883.98277119934,\n    47903.70739196039,\n    47923.43404336137,\n    47943.162724984315,\n    47962.89343641144,\n    47982.62617722522,\n    48002.36094700831,\n    48022.0977453436,\n    48041.83657181417,\n    48061.57742600335,\n    48081.32030749465,\n    48101.065215871815,\n    48120.81215071879,\n    48140.56111161974,\n    48160.31209815905,\n    48180.0651099213,\n    48199.82014649131,\n    48219.57720745407,\n    48239.336292394844,\n    48259.097400899045,\n    48278.86053255234,\n    48298.62568694059,\n    48318.392863649875,\n    48338.16206226648,\n    48357.933282376915,\n    48377.70652356789,\n    48397.48178542632,\n    48417.259067539344,\n    48437.0383694943,\n    48456.819690878765,\n    48476.60303128049,\n    48496.38839028745,\n    48516.17576748783,\n    48535.96516247005,\n    48555.756574822684,\n    48575.550004134566,\n    48595.34544999472,\n    48615.14291199238,\n    48634.94238971699,\n    48654.7438827582,\n    48674.54739070588,\n    48694.35291315008,\n    48714.16044968111,\n    48733.969999889436,\n    48753.78156336576,\n    48773.59513970098,\n    48793.41072848621,\n    48813.22832931277,\n    48833.04794177219,\n    48852.86956545619,\n    48872.69319995672,\n    48892.51884486592,\n    48912.346499776155,\n    48932.176164279976,\n    48952.00783797016,\n    48971.84152043966,\n    48991.677211281676,\n    49011.51491008959,\n    49031.354616456985,\n    49051.196329977654,\n    49071.04005024561,\n    49090.88577685506,\n    49110.73350940041,\n    49130.58324747627,\n    49150.43499067749,\n    49170.28873859906,\n    49190.14449083623,\n    49210.00224698444,\n    49229.86200663932,\n    49249.72376939672,\n    49269.587534852675,\n    49289.45330260345,\n    49309.32107224548,\n    49329.19084337544,\n    49349.06261559019,\n    49368.936388486785,\n    49388.81216166249,\n    49408.689934714785,\n    49428.569707241324,\n    49448.45147883999,\n    49468.33524910886,\n    49488.22101764621,\n    49508.10878405052,\n    49527.99854792047,\n    49547.89030885494,\n    49567.78406645301,\n    49587.67982031398,\n    49607.57757003732,\n    49627.47731522272,\n    49647.37905547007,\n    49667.28279037946,\n    49687.18851955118,\n    49707.09624258571,\n    49727.00595908374,\n    49746.917668646165,\n    49766.83137087407,\n    49786.747065368734,\n    49806.66475173166,\n    49826.58442956452,\n    49846.5060984692,\n    49866.429758047794,\n    49886.35540790258,\n    49906.28304763604,\n    49926.212676850846,\n    49946.14429514988,\n    49966.077902136225,\n    49986.01349741315,\n    50005.951080584135,\n    50025.890651252834,\n    50045.83220902312,\n    50065.77575349907,\n    50085.72128428493,\n    50105.668800985164,\n    50125.61830320443,\n    50145.569790547575,\n    50165.52326261965,\n    50185.4787190259,\n    50205.43615937177,\n    50225.39558326289,\n    50245.3569903051,\n    50265.32038010443,\n    50285.2857522671,\n    50305.25310639953,\n    50325.22244210834,\n    50345.193759000336,\n    50365.16705668252,\n    50385.1423347621,\n    50405.11959284647,\n    50425.09883054322,\n    50445.08004746013,\n    50465.06324320518,\n    50485.04841738654,\n    50505.03556961258,\n    50525.024699491856,\n    50545.01580663313,\n    50565.00889064534,\n    50585.00395113762,\n    50605.00098771933,\n    50624.99999999997,\n    50645.00098758927,\n    50665.00395009713,\n    50685.00888713368,\n    50705.01579830919,\n    50725.024683234165,\n    50745.03554151928,\n    50765.04837277541,\n    50785.06317661362,\n    50805.07995264516,\n    50825.09870048149,\n    50845.11941973424,\n    50865.142110015244,\n    50885.16677093652,\n    50905.19340211028,\n    50925.222003148934,\n    50945.25257366507,\n    50965.28511327147,\n    50985.31962158112,\n    51005.356098207165,\n    51025.39454276298,\n    51045.434954862096,\n    51065.477334118244,\n    51085.521680145364,\n    51105.567992557546,\n    51125.61627096911,\n    51145.66651499454,\n    51165.71872424852,\n    51185.77289834591,\n    51205.82903690178,\n    51225.88713953136,\n    51245.947205850105,\n    51266.00923547362,\n    51286.07322801772,\n    51306.1391830984,\n    51326.207100331856,\n    51346.27697933445,\n    51366.348819722756,\n    51386.42262111351,\n    51406.49838312366,\n    51426.57610537032,\n    51446.655787470794,\n    51466.73742904259,\n    51486.82102970338,\n    51506.90658907105,\n    51526.99410676363,\n    51547.08358239939,\n    51567.17501559674,\n    51587.2684059743,\n    51607.36375315086,\n    51627.461056745415,\n    51647.56031637713,\n    51667.66153166536,\n    51687.76470222966,\n    51707.86982768973,\n    51727.9769076655,\n    51748.085941777055,\n    51768.19692964468,\n    51788.309870888836,\n    51808.42476513017,\n    51828.54161198952,\n    51848.660411087905,\n    51868.781162046515,\n    51888.90386448674,\n    51909.02851803014,\n    51929.155122298485,\n    51949.28367691369,\n    51969.41418149788,\n    51989.54663567335,\n    52009.68103906259,\n    52029.81739128826,\n    52049.95569197321,\n    52070.09594074048,\n    52090.23813721327,\n    52110.38228101499,\n    52130.5283717692,\n    52150.676409099666,\n    52170.82639263033,\n    52190.97832198532,\n    52211.13219678893,\n    52231.288016665654,\n    52251.44578124015,\n    52271.60549013727,\n    52291.76714298204,\n    52311.93073939967,\n    52332.096279015546,\n    52352.26376145525,\n    52372.43318634451,\n    52392.604553309284,\n    52412.777861975665,\n    52432.953111969946,\n    52453.130302918595,\n    52473.30943444827,\n    52493.49050618579,\n    52513.67351775817,\n    52533.858468792605,\n    52554.04535891645,\n    52574.23418775725,\n    52594.42495494274,\n    52614.61766010081,\n    52634.81230285956,\n    52655.00888284723,\n    52675.20739969227,\n    52695.407853023295,\n    52715.6102424691,\n    52735.81456765866,\n    52756.02082822111,\n    52776.229023785796,\n    52796.439153982225,\n    52816.65121844006,\n    52836.86521678917,\n    52857.0811486596,\n    52877.29901368155,\n    52897.518811485425,\n    52917.74054170177,\n    52937.96420396135,\n    52958.18979789508,\n    52978.41732313405,\n    52998.64677930953,\n    53018.87816605298,\n    53039.111482996006,\n    53059.34672977042,\n    53079.58390600819,\n    53099.82301134148,\n    53120.0640454026,\n    53140.30700782406,\n    53160.55189823853,\n    53180.79871627886,\n    53201.04746157809,\n    53221.2981337694,\n    53241.550732486176,\n    53261.805257361964,\n    53282.06170803049,\n    53302.32008412564,\n    53322.58038528149,\n    53342.8426111323,\n    53363.10676131247,\n    53383.3728354566,\n    53403.64083319945,\n    53423.91075417597,\n    53444.18259802126,\n    53464.45636437061,\n    53484.73205285948,\n    53505.0096631235,\n    53525.28919479847,\n    53545.57064752036,\n    53565.85402092533,\n    53586.1393146497,\n    53606.426528329954,\n    53626.715661602764,\n    53647.00671410496,\n    53667.299685473554,\n    53687.59457534572,\n    53707.891383358816,\n    53728.19010915037,\n    53748.490752358055,\n    53768.79331261975,\n    53789.0977895735,\n    53809.404182857485,\n    53829.712492110106,\n    53850.0227169699,\n    53870.33485707559,\n    53890.648912066055,\n    53910.96488158037,\n    53931.28276525774,\n    53951.60256273758,\n    53971.92427365946,\n    53992.24789766311,\n    54012.57343438844,\n    54032.90088347553,\n    54053.23024456462,\n    54073.561517296126,\n    54093.894701310644,\n    54114.22979624891,\n    54134.566801751855,\n    54154.90571746057,\n    54175.246543016314,\n    54195.589278060506,\n    54215.933922234755,\n    54236.280475180814,\n    54256.62893654063,\n    54276.97930595628,\n    54297.331583070045,\n    54317.68576752436,\n    54338.04185896183,\n    54358.399857025215,\n    54378.75976135746,\n    54399.12157160167,\n    54419.48528740111,\n    54439.850908399225,\n    54460.218434239614,\n    54480.587864566056,\n    54500.95919902248,\n    54521.332437253,\n    54541.70757890188,\n    54562.084623613555,\n    54582.46357103264,\n    54602.844420803885,\n    54623.227172572246,\n    54643.61182598281,\n    54663.99838068084,\n    54684.38683631177,\n    54704.7771925212,\n    54725.1694489549,\n    54745.56360525877,\n    54765.95966107893,\n    54786.357616061614,\n    54806.757469853255,\n    54827.15922210044,\n    54847.56287244991,\n    54867.96842054858,\n    54888.375866043534,\n    54908.78520858201,\n    54929.19644781142,\n    54949.60958337932,\n    54970.02461493346,\n    54990.44154212173,\n    55010.86036459218,\n    55031.28108199306,\n    55051.70369397273,\n    55072.12820017975,\n    55092.55460026284,\n    55112.98289387087,\n    55133.41308065288,\n    55153.84516025806,\n    55174.27913233579,\n    55194.714996535586,\n    55215.15275250714,\n    55235.5923999003,\n    55256.033938365086,\n    55276.477367551655,\n    55296.92268711036,\n    55317.369896691685,\n    55337.818995946305,\n    55358.269984525024,\n    55378.72286207883,\n    55399.17762825887,\n    55419.63428271644,\n    55440.09282510301,\n    55460.553255070205,\n    55481.01557226981,\n    55501.479776353764,\n    55521.94586697419,\n    55542.413843783346,\n    55562.883706433655,\n    55583.355454577715,\n    55603.82908786826,\n    55624.30460595821,\n    55644.78200850064,\n    55665.26129514875,\n    55685.742465555944,\n    55706.225519375774,\n    55726.71045626193,\n    55747.197275868275,\n    55767.68597784884,\n    55788.176561857814,\n    55808.66902754953,\n    55829.16337457848,\n    55849.65960259933,\n    55870.15771126689,\n    55890.657700236145,\n    55911.15956916222,\n    55931.66331770041,\n    55952.168945506164,\n    55972.676452235086,\n    55993.185837542944,\n    56013.69710108565,\n    56034.2102425193,\n    56054.72526150012,\n    56075.24215768451,\n    56095.76093072901,\n    56116.28158029034,\n    56136.80410602537,\n    56157.328507591104,\n    56177.85478464474,\n    56198.3829368436,\n    56218.912963845185,\n    56239.44486530714,\n    56259.97864088727,\n    56280.51429024353,\n    56301.05181303404,\n    56321.59120891709,\n    56342.13247755108,\n    56362.675618594614,\n    56383.22063170642,\n    56403.7675165454,\n    56424.31627277061,\n    56444.86690004124,\n    56465.41939801667,\n    56485.973766356394,\n    56506.5300047201,\n    56527.08811276761,\n    56547.6480901589,\n    56568.20993655411,\n    56588.77365161352,\n    56609.339234997584,\n    56629.9066863669,\n    56650.47600538221,\n    56671.04719170442,\n    56691.6202449946,\n    56712.19516491396,\n    56732.77195112387,\n    56753.350603285835,\n    56773.93112106154,\n    56794.51350411282,\n    56815.09775210165,\n    56835.68386469015,\n    56856.27184154063,\n    56876.86168231552,\n    56897.4533866774,\n    56918.04695428902,\n    56938.6423848133,\n    56959.23967791326,\n    56979.83883325211,\n    57000.439850493225,\n    57021.04272930009,\n    57041.64746933637,\n    57062.25407026587,\n    57082.86253175256,\n    57103.47285346055,\n    57124.08503505411,\n    57144.69907619765,\n    57165.31497655575,\n    57185.9327357931,\n    57206.55235357461,\n    57227.173829565276,\n    57247.79716343028,\n    57268.42235483494,\n    57289.04940344473,\n    57309.678308925286,\n    57330.30907094237,\n    57350.94168916191,\n    57371.576163249985,\n    57392.212492872815,\n    57412.850677696784,\n    57433.490717388406,\n    57454.13261161437,\n    57474.77636004149,\n    57495.421962336746,\n    57516.069418167266,\n    57536.718727200314,\n    57557.36988910332,\n    57578.02290354386,\n    57598.67777018964,\n    57619.33448870855,\n    57639.99305876859,\n    57660.65348003794,\n    57681.315752184906,\n    57701.97987487797,\n    57722.64584778573,\n    57743.31367057695,\n    57763.98334292055,\n    57784.65486448557,\n    57805.32823494123,\n    57826.00345395688,\n    57846.680521202026,\n    57867.359436346305,\n    57888.04019905953,\n    57908.72280901163,\n    57929.40726587271,\n    57950.093569313,\n    57970.781719002895,\n    57991.47171461291,\n    58012.16355581375,\n    58032.85724227622,\n    58053.55277367131,\n    58074.25014967013,\n    58094.94936994395,\n    58115.650434164185,\n    58136.35334200239,\n    58157.058093130276,\n    58177.76468721969,\n    58198.47312394264,\n    58219.18340297126,\n    58239.89552397784,\n    58260.60948663482,\n    58281.325290614775,\n    58302.042935590434,\n    58322.76242123468,\n    58343.48374722051,\n    58364.206913221096,\n    58384.93191890975,\n    58405.65876395992,\n    58426.3874480452,\n    58447.11797083934,\n    58467.85033201621,\n    58488.584531249864,\n    58509.32056821446,\n    58530.05844258433,\n    58550.79815403393,\n    58571.539702237875,\n    58592.283086870906,\n    58613.02830760793,\n    58633.77536412398,\n    58654.52425609425,\n    58675.27498319405,\n    58696.02754509888,\n    58716.781941484325,\n    58737.53817202616,\n    58758.296236400274,\n    58779.05613428273,\n    58799.817865349694,\n    58820.5814292775,\n    58841.34682574264,\n    58862.11405442171,\n    58882.883114991484,\n    58903.65400712885,\n    58924.42673051085,\n    58945.201284814684,\n    58965.977669717664,\n    58986.75588489727,\n    59007.53593003111,\n    59028.31780479695,\n    59049.10150887266,\n    59069.8870419363,\n    59090.674403666046,\n    59111.46359374021,\n    59132.25461183726,\n    59153.0474576358,\n    59173.84213081458,\n    59194.63863105247,\n    59215.436958028506,\n    59236.237111421855,\n    59257.03909091183,\n    59277.84289617788,\n    59298.64852689959,\n    59319.455982756685,\n    59340.26526342905,\n    59361.076368596696,\n    59381.88929793976,\n    59402.70405113854,\n    59423.520627873484,\n    59444.33902782514,\n    59465.15925067423,\n    59485.9812961016,\n    59506.80516378825,\n    59527.63085341531,\n    59548.458364664046,\n    59569.28769721586,\n    59590.11885075232,\n    59610.95182495509,\n    59631.78661950601,\n    59652.62323408705,\n    59673.46166838031,\n    59694.30192206803,\n    59715.14399483259,\n    59735.987886356525,\n    59756.83359632248,\n    59777.681124413255,\n    59798.530470311794,\n    59819.38163370116,\n    59840.23461426457,\n    59861.08941168538,\n    59881.94602564707,\n    59902.80445583327,\n    59923.664701927744,\n    59944.52676361438,\n    59965.39064057724,\n    59986.25633250049,\n    60007.12383906844,\n    60027.99315996554,\n    60048.86429487638,\n    60069.73724348569,\n    60090.612005478324,\n    60111.488580539284,\n    60132.36696835371,\n    60153.24716860687,\n    60174.129180984164,\n    60195.01300517115,\n    60215.89864085351,\n    60236.78608771706,\n    60257.67534544775,\n    60278.56641373167,\n    60299.459292255044,\n    60320.35398070425,\n    60341.25047876576,\n    60362.14878612623,\n    60383.04890247242,\n    60403.95082749124,\n    60424.85456086972,\n    60445.76010229504,\n    60466.667451454516,\n    60487.57660803559,\n    60508.48757172584,\n    60529.400342213,\n    60550.31491918489,\n    60571.23130232952,\n    60592.149491335,\n    60613.06948588959,\n    60633.99128568168,\n    60654.914890399785,\n    60675.84029973257,\n    60696.76751336883,\n    60717.69653099749,\n    60738.6273523076,\n    60759.55997698837,\n    60780.49440472912,\n    60801.43063521932,\n    60822.368668148556,\n    60843.308503206565,\n    60864.250140083204,\n    60885.19357846847,\n    60906.138818052495,\n    60927.08585852554,\n    60948.03469957801,\n    60968.98534090042,\n    60989.93778218344,\n    61010.89202311786,\n    61031.84806339462,\n    61052.805902704764,\n    61073.76554073949,\n    61094.726977190134,\n    61115.69021174814,\n    61136.6552441051,\n    61157.62207395274,\n    61178.590700982924,\n    61199.561124887616,\n    61220.53334535895,\n    61241.50736208917,\n    61262.48317477066,\n    61283.46078309594,\n    61304.440186757645,\n    61325.42138544856,\n    61346.40437886158,\n    61367.389166689754,\n    61388.37574862626,\n    61409.36412436439,\n    61430.35429359757,\n    61451.34625601937,\n    61472.3400113235,\n    61493.33555920376,\n    61514.33289935412,\n    61535.33203146867,\n    61556.33295524162,\n    61577.33567036731,\n    61598.34017654024,\n    61619.34647345499,\n    61640.35456080633,\n    61661.3644382891,\n    61682.37610559831,\n    61703.38956242909,\n    61724.40480847669,\n    61745.42184343651,\n    61766.44066700406,\n    61787.46127887499,\n    61808.48367874506,\n    61829.5078663102,\n    61850.533841266435,\n    61871.56160330993,\n    61892.59115213697,\n    61913.62248744399,\n    61934.655608927525,\n    61955.69051628427,\n    61976.72720921102,\n    61997.765687404724,\n    62018.80595056245,\n    62039.847998381374,\n    62060.891830558845,\n    62081.93744679229,\n    62102.9848467793,\n    62124.034030217575,\n    62145.084996804966,\n    62166.137746239416,\n    62187.19227821903,\n    62208.248592442025,\n    62229.30668860674,\n    62250.366566411656,\n    62271.42822555538,\n    62292.49166573663,\n    62313.55688665427,\n    62334.62388800727,\n    62355.69266949476,\n    62376.763230815974,\n    62397.83557167027,\n    62418.909691757144,\n    62439.98559077621,\n    62461.06326842723,\n    62482.14272441005,\n    62503.223958424685,\n    62524.30697017127,\n    62545.39175935003,\n    62566.47832566137,\n    62587.56666880577,\n    62608.65678848388,\n    62629.74868439645,\n    62650.842356244364,\n    62671.93780372862,\n    62693.035026550366,\n    62714.13402441086,\n    62735.23479701148,\n    62756.33734405374,\n    62777.441665239276,\n    62798.54776026985,\n    62819.65562884736,\n    62840.7652706738,\n    62861.87668545132,\n    62882.989872882186,\n    62904.104832668774,\n    62925.2215645136,\n    62946.34006811931,\n    62967.46034318866,\n    62988.582389424526,\n    63009.70620652994,\n    63030.83179420802,\n    63051.95915216204,\n    63073.08828009537,\n    63094.21917771154,\n    63115.351844714154,\n    63136.48628080699,\n    63157.62248569392,\n    63178.760459078956,\n    63199.90020066622,\n    63221.04171015997,\n    63242.18498726457,\n    63263.330031684534,\n    63284.476843124474,\n    63305.62542128914,\n    63326.77576588341,\n    63347.92787661226,\n    63369.08175318081,\n    63390.237395294316,\n    63411.39480265812,\n    63432.553974977716,\n    63453.71491195871,\n    63474.87761330684,\n    63496.04207872794,\n    63517.208307928,\n    63538.37630061312,\n    63559.546056489504,\n    63580.717575263516,\n    63601.89085664161,\n    63623.06590033037,\n    63644.242706036515,\n    63665.42127346687,\n    63686.60160232838,\n    63707.783692328136,\n    63728.967543173334,\n    63750.15315457128,\n    63771.34052622942,\n    63792.52965785532,\n    63813.72054915665,\n    63834.91319984123,\n    63856.10760961698,\n    63877.30377819194,\n    63898.501705274284,\n    63919.7013905723,\n    63940.902833794404,\n    63962.106034649114,\n    63983.310992845094,\n    64004.51770809111,\n    64025.72618009605,\n    64046.93640856894,\n    64068.1483932189,\n    64089.362133755196,\n    64110.57762988719,\n    64131.79488132439,\n    64153.013887776404,\n    64174.23464895297,\n    64195.45716456394,\n    64216.68143431929,\n    64237.90745792911,\n    64259.135235103626,\n    64280.36476555316,\n    64301.59604898817,\n    64322.829085119236,\n    64344.06387365704,\n    64365.3004143124,\n    64386.53870679625,\n    64407.778750819634,\n    64429.02054609372,\n    64450.26409232981,\n    64471.50938923929,\n    64492.75643653371,\n    64514.005233924705,\n    64535.25578112403,\n    64556.50807784358,\n    64577.76212379536,\n    64599.017918691476,\n    64620.27546224417,\n    64641.534754165805,\n    64662.795794168844,\n    64684.058581965895,\n    64705.32311726966,\n    64726.589399792974,\n    64747.857429248776,\n    64769.12720535014,\n    64790.398727810236,\n    64811.671996342375,\n    64832.94701065997,\n    64854.22377047656,\n    64875.502275505794,\n    64896.78252546145,\n    64918.064520057414,\n    64939.34825900768,\n    64960.63374202639,\n    64981.92096882776,\n    65003.209939126165,\n    65024.50065263607,\n    65045.79310907207,\n    65067.08730814886,\n    65088.38324958128,\n    65109.68093308426,\n    65130.980358372864,\n    65152.28152516226,\n    65173.584433167736,\n    65194.8890821047,\n    65216.19547168868,\n    65237.50360163532,\n    65258.81347166035,\n    65280.125081479666,\n    65301.43843080924,\n    65322.75351936518,\n    65344.07034686371,\n    65365.38891302115,\n    65386.70921755396,\n    65408.0312601787,\n    65429.355040612056,\n    65450.68055857082,\n    65472.00781377191,\n    65493.336805932355,\n    65514.66753476928,\n    65535.999999999956,\n    65557.33420134176,\n    65578.67013851217,\n    65600.00781122879,\n    65621.34721920933,\n    65642.68836217163,\n    65664.03123983364,\n    65685.37585191341,\n    65706.72219812914,\n    65728.07027819908,\n    65749.42009184166,\n    65770.7716387754,\n    65792.12491871894,\n    65813.479931391,\n    65834.83667651046,\n    65856.1951537963,\n    65877.5553629676,\n    65898.91730374355,\n    65920.28097584349,\n    65941.64637898684,\n    65963.01351289316,\n    65984.38237728208,\n    66005.75297187339,\n    66027.12529638696,\n    66048.4993505428,\n    66069.87513406102,\n    66091.25264666184,\n    66112.63188806562,\n    66134.01285799277,\n    66155.39555616389,\n    66176.77998229963,\n    66198.1661361208,\n    66219.55401734827,\n    66240.9436257031,\n    66262.33496090639,\n    66283.7280226794,\n    66305.12281074344,\n    66326.51932482002,\n    66347.9175646307,\n    66369.31752989716,\n    66390.71922034123,\n    66412.12263568479,\n    66433.52777564988,\n    66454.93463995864,\n    66476.34322833332,\n    66497.75354049628,\n    66519.16557617,\n    66540.57933507704,\n    66561.99481694012,\n    66583.41202148204,\n    66604.83094842573,\n    66626.25159749422,\n    66647.67396841063,\n    66669.09806089824,\n    66690.52387468038,\n    66711.95140948056,\n    66733.38066502237,\n    66754.81164102948,\n    66776.24433722571,\n    66797.67875333499,\n    66819.11488908132,\n    66840.55274418888,\n    66861.9923183819,\n    66883.43361138474,\n    66904.87662292189,\n    66926.3213527179,\n    66947.7678004975,\n    66969.21596598547,\n    66990.66584890673,\n    67012.1174489863,\n    67033.57076594933,\n    67055.02579952106,\n    67076.48254942682,\n    67097.94101539208,\n    67119.40119714243,\n    67140.86309440355,\n    67162.32670690122,\n    67183.79203436135,\n    67205.25907650996,\n    67226.72783307315,\n    67248.19830377717,\n    67269.67048834835,\n    67291.14438651314,\n    67312.61999799809,\n    67334.09732252988,\n    67355.5763598353,\n    67377.05710964119,\n    67398.53957167457,\n    67420.02374566255,\n    67441.50963133233,\n    67462.99722841123,\n    67484.48653662669,\n    67505.97755570622,\n    67527.4702853775,\n    67548.96472536826,\n    67570.46087540637,\n    67591.9587352198,\n    67613.45830453663,\n    67634.95958308503,\n    67656.46257059333,\n    67677.9672667899,\n    67699.47367140325,\n    67720.98178416202,\n    67742.49160479492,\n    67764.0031330308,\n    67785.51636859858,\n    67807.03131122731,\n    67828.54796064617,\n    67850.0663165844,\n    67871.58637877138,\n    67893.10814693659,\n    67914.63162080961,\n    67936.15680012014,\n    67957.68368459797,\n    67979.21227397301,\n    68000.74256797526,\n    68022.27456633488,\n    68043.80826878206,\n    68065.34367504714,\n    68086.88078486058,\n    68108.41959795292,\n    68129.96011405479,\n    68151.50233289697,\n    68173.04625421032,\n    68194.59187772583,\n    68216.13920317456,\n    68237.6882302877,\n    68259.23895879654,\n    68280.79138843248,\n    68302.34551892703,\n    68323.90135001179,\n    68345.45888141848,\n    68367.01811287891,\n    68388.57904412503,\n    68410.14167488884,\n    68431.7060049025,\n    68453.27203389826,\n    68474.83976160845,\n    68496.40918776554,\n    68517.98031210208,\n    68539.55313435073,\n    68561.12765424428,\n    68582.70387151558,\n    68604.28178589763,\n    68625.8613971235,\n    68647.44270492639,\n    68669.0257090396,\n    68690.61040919652,\n    68712.19680513066,\n    68733.78489657563,\n    68755.37468326512,\n    68776.966164933,\n    68798.55934131313,\n    68820.15421213959,\n    68841.75077714647,\n    68863.34903606804,\n    68884.94898863863,\n    68906.55063459268,\n    68928.15397366474,\n    68949.75900558944,\n    68971.36573010158,\n    68992.97414693599,\n    69014.58425582763,\n    69036.19605651159,\n    69057.80954872302,\n    69079.4247321972,\n    69101.04160666953,\n    69122.66017187547,\n    69144.2804275506,\n    69165.90237343062,\n    69187.52600925133,\n    69209.15133474862,\n    69230.77834965847,\n    69252.40705371699,\n    69274.0374466604,\n    69295.669528225,\n    69317.30329814719,\n    69338.9387561635,\n    69360.57590201053,\n    69382.214735425,\n    69403.85525614375,\n    69425.49746390368,\n    69447.14135844183,\n    69468.78693949533,\n    69490.4342068014,\n    69512.08316009739,\n    69533.73379912072,\n    69555.38612360893,\n    69577.04013329967,\n    69598.69582793067,\n    69620.3532072398,\n    69642.01227096497,\n    69663.67301884426,\n    69685.33545061579,\n    69706.99956601784,\n    69728.66536478874,\n    69750.33284666698,\n    69772.00201139107,\n    69793.67285869969,\n    69815.34538833161,\n    69837.01960002567,\n    69858.69549352085,\n    69880.3730685562,\n    69902.0523248709,\n    69923.73326220422,\n    69945.41588029549,\n    69967.10017888421,\n    69988.78615770994,\n    70010.47381651236,\n    70032.16315503122,\n    70053.8541730064,\n    70075.54687017787,\n    70097.24124628572,\n    70118.93730107011,\n    70140.6350342713,\n    70162.33444562969,\n    70184.03553488574,\n    70205.73830178002,\n    70227.44274605322,\n    70249.1488674461,\n    70270.85666569954,\n    70292.56614055451,\n    70314.2772917521,\n    70335.9901190335,\n    70357.70462213994,\n    70379.42080081282,\n    70401.13865479361,\n    70422.85818382389,\n    70444.57938764534,\n    70466.30226599972,\n    70488.02681862892,\n    70509.75304527488,\n    70531.48094567971,\n    70553.21051958555,\n    70574.9417667347,\n    70596.6746868695,\n    70618.40927973246,\n    70640.1455450661,\n    70661.8834826131,\n    70683.62309211626,\n    70705.36437331841,\n    70727.10732596253,\n    70748.85194979167,\n    70770.59824454901,\n    70792.34620997778,\n    70814.09584582137,\n    70835.84715182323,\n    70857.6001277269,\n    70879.35477327603,\n    70901.11108821441,\n    70922.86907228586,\n    70944.62872523433,\n    70966.39004680388,\n    70988.15303673863,\n    71009.91769478285,\n    71031.68402068088,\n    71053.45201417715,\n    71075.22167501619,\n    71096.99300294266,\n    71118.76599770127,\n    71140.54065903684,\n    71162.31698669434,\n    71184.09498041874,\n    71205.87463995522,\n    71227.65596504895,\n    71249.4389554453,\n    71271.22361088963,\n    71293.00993112748,\n    71314.79791590448,\n    71336.5875649663,\n    71358.37887805876,\n    71380.17185492777,\n    71401.96649531931,\n    71423.76279897949,\n    71445.56076565449,\n    71467.3603950906,\n    71489.16168703421,\n    71510.96464123181,\n    71532.76925742996,\n    71554.57553537536,\n    71576.38347481475,\n    71598.19307549503,\n    71620.00433716313,\n    71641.81725956615,\n    71663.63184245121,\n    71685.4480855656,\n    71707.26598865664,\n    71729.0855514718,\n    71750.90677375859,\n    71772.72965526467,\n    71794.55419573777,\n    71816.38039492571,\n    71838.20825257644,\n    71860.03776843796,\n    71881.86894225838,\n    71903.70177378594,\n    71925.53626276893,\n    71947.37240895575,\n    71969.2102120949,\n    71991.04967193498,\n    72012.89078822469,\n    72034.73356071279,\n    72056.57798914817,\n    72078.42407327982,\n    72100.2718128568,\n    72122.12120762825,\n    72143.97225734347,\n    72165.8249617518,\n    72187.67932060269,\n    72209.53533364569,\n    72231.39300063043,\n    72253.25232130665,\n    72275.11329542418,\n    72296.97592273295,\n    72318.84020298296,\n    72340.70613592434,\n    72362.57372130727,\n    72384.4429588821,\n    72406.31384839918,\n    72428.18638960904,\n    72450.06058226222,\n    72471.93642610943,\n    72493.81392090143,\n    72515.6930663891,\n    72537.57386232339,\n    72559.45630845535,\n    72581.34040453614,\n    72603.22615031699,\n    72625.11354554925,\n    72647.00258998433,\n    72668.89328337376,\n    72690.78562546917,\n    72712.67961602227,\n    72734.57525478485,\n    72756.47254150882,\n    72778.37147594614,\n    72800.27205784894,\n    72822.17428696936,\n    72844.07816305969,\n    72865.98368587228,\n    72887.8908551596,\n    72909.79967067418,\n    72931.7101321687,\n    72953.62223939585,\n    72975.53599210849,\n    72997.45139005952,\n    73019.36843300196,\n    73041.28712068892,\n    73063.20745287361,\n    73085.1294293093,\n    73107.05304974939,\n    73128.97831394733,\n    73150.90522165672,\n    73172.83377263122,\n    73194.76396662457,\n    73216.69580339061,\n    73238.62928268328,\n    73260.56440425663,\n    73282.50116786477,\n    73304.4395732619,\n    73326.37962020234,\n    73348.32130844049,\n    73370.26463773084,\n    73392.20960782796,\n    73414.15621848653,\n    73436.10446946132,\n    73458.05436050717,\n    73480.00589137906,\n    73501.95906183199,\n    73523.91387162112,\n    73545.87032050166,\n    73567.82840822893,\n    73589.78813455833,\n    73611.74949924536,\n    73633.71250204562,\n    73655.67714271475,\n    73677.64342100856,\n    73699.61133668288,\n    73721.58088949369,\n    73743.55207919702,\n    73765.524905549,\n    73787.49936830586,\n    73809.4754672239,\n    73831.45320205955,\n    73853.43257256929,\n    73875.41357850972,\n    73897.3962196375,\n    73919.38049570941,\n    73941.36640648231,\n    73963.35395171314,\n    73985.34313115895,\n    74007.33394457687,\n    74029.32639172411,\n    74051.32047235797,\n    74073.31618623588,\n    74095.3135331153,\n    74117.31251275384,\n    74139.31312490914,\n    74161.31536933898,\n    74183.31924580119,\n    74205.32475405373,\n    74227.33189385463,\n    74249.34066496199,\n    74271.35106713403,\n    74293.36310012905,\n    74315.37676370544,\n    74337.39205762166,\n    74359.4089816363,\n    74381.427535508,\n    74403.4477189955,\n    74425.46953185767,\n    74447.4929738534,\n    74469.5180447417,\n    74491.54474428168,\n    74513.57307223254,\n    74535.60302835355,\n    74557.63461240409,\n    74579.6678241436,\n    74601.70266333164,\n    74623.73912972784,\n    74645.77722309194,\n    74667.81694318372,\n    74689.85828976311,\n    74711.9012625901,\n    74733.94586142474,\n    74755.99208602723,\n    74778.0399361578,\n    74800.08941157682,\n    74822.1405120447,\n    74844.19323732196,\n    74866.24758716923,\n    74888.30356134719,\n    74910.36115961662,\n    74932.42038173841,\n    74954.4812274735,\n    74976.54369658297,\n    74998.60778882793,\n    75020.6735039696,\n    75042.74084176932,\n    75064.80980198846,\n    75086.88038438853,\n    75108.9525887311,\n    75131.02641477782,\n    75153.10186229047,\n    75175.17893103085,\n    75197.25762076092,\n    75219.33793124268,\n    75241.41986223822,\n    75263.50341350974,\n    75285.5885848195,\n    75307.67537592987,\n    75329.76378660332,\n    75351.85381660235,\n    75373.94546568961,\n    75396.0387336278,\n    75418.13362017972,\n    75440.23012510825,\n    75462.32824817636,\n    75484.42798914711,\n    75506.52934778365,\n    75528.63232384919,\n    75550.73691710707,\n    75572.8431273207,\n    75594.95095425354,\n    75617.0603976692,\n    75639.17145733131,\n    75661.28413300365,\n    75683.39842445003,\n    75705.5143314344,\n    75727.63185372074,\n    75749.75099107318,\n    75771.87174325586,\n    75793.99411003308,\n    75816.11809116918,\n    75838.24368642858,\n    75860.37089557585,\n    75882.49971837556,\n    75904.63015459242,\n    75926.76220399122,\n    75948.89586633682,\n    75971.03114139418,\n    75993.16802892832,\n    76015.3065287044,\n    76037.4466404876,\n    76059.58836404321,\n    76081.73169913665,\n    76103.87664553335,\n    76126.02320299888,\n    76148.17137129887,\n    76170.32115019904,\n    76192.4725394652,\n    76214.62553886326,\n    76236.78014815917,\n    76258.93636711901,\n    76281.09419550892,\n    76303.25363309514,\n    76325.41467964397,\n    76347.57733492184,\n    76369.74159869523,\n    76391.90747073069,\n    76414.07495079488,\n    76436.24403865456,\n    76458.41473407655,\n    76480.58703682775,\n    76502.76094667517,\n    76524.93646338588,\n    76547.11358672705,\n    76569.29231646592,\n    76591.47265236982,\n    76613.65459420616,\n    76635.83814174247,\n    76658.02329474631,\n    76680.21005298535,\n    76702.39841622734,\n    76724.58838424014,\n    76746.77995679164,\n    76768.97313364987,\n    76791.1679145829,\n    76813.3642993589,\n    76835.56228774616,\n    76857.76187951297,\n    76879.9630744278,\n    76902.16587225911,\n    76924.37027277553,\n    76946.57627574573,\n    76968.78388093844,\n    76990.99308812252,\n    77013.2038970669,\n    77035.41630754055,\n    77057.63031931262,\n    77079.84593215224,\n    77102.0631458287,\n    77124.28196011129,\n    77146.50237476948,\n    77168.72438957276,\n    77190.94800429072,\n    77213.17321869303,\n    77235.40003254944,\n    77257.6284456298,\n    77279.85845770403,\n    77302.09006854212,\n    77324.32327791417,\n    77346.55808559034,\n    77368.79449134089,\n    77391.03249493614,\n    77413.27209614652,\n    77435.51329474253,\n    77457.75609049473,\n    77480.0004831738,\n    77502.2464725505,\n    77524.49405839563,\n    77546.74324048011,\n    77568.99401857494,\n    77591.2463924512,\n    77613.50036188003,\n    77635.75592663266,\n    77658.01308648044,\n    77680.27184119476,\n    77702.53219054709,\n    77724.79413430902,\n    77747.0576722522,\n    77769.32280414834,\n    77791.58952976925,\n    77813.85784888684,\n    77836.12776127306,\n    77858.3992667,\n    77880.67236493979,\n    77902.94705576463,\n    77925.22333894683,\n    77947.50121425878,\n    77969.78068147293,\n    77992.06174036184,\n    78014.34439069813,\n    78036.62863225449,\n    78058.91446480375,\n    78081.20188811873,\n    78103.49090197241,\n    78125.78150613782,\n    78148.07370038806,\n    78170.36748449634,\n    78192.66285823593,\n    78214.95982138017,\n    78237.2583737025,\n    78259.55851497645,\n    78281.86024497561,\n    78304.16356347366,\n    78326.46847024436,\n    78348.77496506154,\n    78371.08304769913,\n    78393.3927179311,\n    78415.70397553158,\n    78438.0168202747,\n    78460.3312519347,\n    78482.6472702859,\n    78504.96487510273,\n    78527.28406615963,\n    78549.6048432312,\n    78571.92720609205,\n    78594.25115451691,\n    78616.5766882806,\n    78638.90380715799,\n    78661.23251092403,\n    78683.56279935378,\n    78705.89467222235,\n    78728.22812930495,\n    78750.56317037686,\n    78772.89979521342,\n    78795.2380035901,\n    78817.5777952824,\n    78839.91917006593,\n    78862.26212771636,\n    78884.60666800945,\n    78906.95279072104,\n    78929.30049562705,\n    78951.64978250346,\n    78974.00065112638,\n    78996.35310127193,\n    79018.70713271636,\n    79041.06274523598,\n    79063.41993860717,\n    79085.77871260644,\n    79108.13906701028,\n    79130.50100159539,\n    79152.86451613842,\n    79175.22961041618,\n    79197.59628420553,\n    79219.96453728342,\n    79242.33436942687,\n    79264.70578041299,\n    79287.07877001894,\n    79309.45333802201,\n    79331.82948419951,\n    79354.20720832888,\n    79376.58651018758,\n    79398.96738955322,\n    79421.34984620343,\n    79443.73387991595,\n    79466.11949046858,\n    79488.50667763922,\n    79510.89544120582,\n    79533.28578094643,\n    79555.67769663916,\n    79578.07118806223,\n    79600.4662549939,\n    79622.86289721253,\n    79645.26111449653,\n    79667.66090662447,\n    79690.06227337488,\n    79712.46521452646,\n    79734.86972985794,\n    79757.27581914813,\n    79779.68348217595,\n    79802.09271872038,\n    79824.50352856045,\n    79846.91591147533,\n    79869.3298672442,\n    79891.74539564634,\n    79914.16249646115,\n    79936.58116946805,\n    79959.00141444655,\n    79981.42323117626,\n    80003.84661943685,\n    80026.27157900808,\n    80048.69810966977,\n    80071.12621120183,\n    80093.55588338424,\n    80115.98712599705,\n    80138.41993882041,\n    80160.85432163453,\n    80183.29027421969,\n    80205.72779635628,\n    80228.16688782471,\n    80250.60754840553,\n    80273.04977787934,\n    80295.49357602678,\n    80317.93894262865,\n    80340.38587746573,\n    80362.83438031895,\n    80385.28445096928,\n    80407.73608919779,\n    80430.1892947856,\n    80452.64406751392,\n    80475.10040716403,\n    80497.55831351732,\n    80520.01778635521,\n    80542.47882545921,\n    80564.94143061092,\n    80587.405601592,\n    80609.8713381842,\n    80632.33864016933,\n    80654.8075073293,\n    80677.27793944607,\n    80699.74993630168,\n    80722.22349767828,\n    80744.69862335804,\n    80767.17531312324,\n    80789.65356675624,\n    80812.13338403947,\n    80834.6147647554,\n    80857.09770868665,\n    80879.58221561585,\n    80902.06828532573,\n    80924.5559175991,\n    80947.04511221882,\n    80969.53586896788,\n    80992.02818762927,\n    81014.52206798614,\n    81037.01750982161,\n    81059.514512919,\n    81082.01307706161,\n    81104.51320203283,\n    81127.01488761618,\n    81149.5181335952,\n    81172.0229397535,\n    81194.5293058748,\n    81217.0372317429,\n    81239.54671714164,\n    81262.05776185496,\n    81284.57036566685,\n    81307.0845283614,\n    81329.60024972277,\n    81352.11752953519,\n    81374.63636758295,\n    81397.15676365045,\n    81419.67871752213,\n    81442.20222898253,\n    81464.72729781622,\n    81487.25392380793,\n    81509.78210674238,\n    81532.3118464044,\n    81554.8431425789,\n    81577.37599505084,\n    81599.91040360527,\n    81622.44636802733,\n    81644.98388810222,\n    81667.52296361518,\n    81690.06359435158,\n    81712.60578009684,\n    81735.14952063645,\n    81757.69481575597,\n    81780.24166524105,\n    81802.79006887741,\n    81825.34002645082,\n    81847.89153774717,\n    81870.44460255238,\n    81892.99922065248,\n    81915.5553918335,\n    81938.11311588167,\n    81960.67239258319,\n    81983.23322172434,\n    82005.79560309154,\n    82028.35953647122,\n    82050.9250216499,\n    82073.49205841421,\n    82096.06064655079,\n    82118.63078584638,\n    82141.20247608784,\n    82163.77571706203,\n    82186.35050855593,\n    82208.92685035657,\n    82231.50474225105,\n    82254.08418402658,\n    82276.66517547039,\n    82299.24771636983,\n    82321.83180651232,\n    82344.4174456853,\n    82367.00463367635,\n    82389.59337027307,\n    82412.18365526316,\n    82434.77548843439,\n    82457.3688695746,\n    82479.9637984717,\n    82502.56027491367,\n    82525.1582986886,\n    82547.7578695846,\n    82570.35898738986,\n    82592.96165189268,\n    82615.5658628814,\n    82638.17162014442,\n    82660.77892347026,\n    82683.38777264747,\n    82705.99816746471,\n    82728.61010771066,\n    82751.22359317412,\n    82773.83862364394,\n    82796.45519890904,\n    82819.07331875843,\n    82841.69298298119,\n    82864.31419136643,\n    82886.93694370337,\n    82909.56123978132,\n    82932.18707938964,\n    82954.81446231774,\n    82977.44338835512,\n    83000.07385729137,\n    83022.70586891612,\n    83045.33942301909,\n    83067.97451939009,\n    83090.61115781896,\n    83113.24933809563,\n    83135.8890600101,\n    83158.53032335246,\n    83181.17312791286,\n    83203.8174734815,\n    83226.46335984867,\n    83249.11078680474,\n    83271.75975414013,\n    83294.41026164537,\n    83317.062309111,\n    83339.7158963277,\n    83362.37102308616,\n    83385.02768917716,\n    83407.68589439159,\n    83430.34563852036,\n    83453.00692135448,\n    83475.669742685,\n    83498.33410230308,\n    83520.99999999994,\n    83543.66743556687,\n    83566.33640879519,\n    83589.00691947635,\n    83611.67896740185,\n    83634.35255236324,\n    83657.02767415217,\n    83679.70433256036,\n    83702.38252737955,\n    83725.06225840164,\n    83747.74352541851,\n    83770.42632822218,\n    83793.11066660468,\n    83815.79654035816,\n    83838.48394927483,\n    83861.17289314694,\n    83883.86337176684,\n    83906.55538492696,\n    83929.24893241975,\n    83951.9440140378,\n    83974.6406295737,\n    83997.33877882015,\n    84020.03846156993,\n    84042.73967761586,\n    84065.44242675084,\n    84088.14670876783,\n    84110.85252345992,\n    84133.55987062017,\n    84156.2687500418,\n    84178.97916151803,\n    84201.6911048422,\n    84224.40457980771,\n    84247.119586208,\n    84269.83612383662,\n    84292.55419248715,\n    84315.27379195328,\n    84337.99492202874,\n    84360.71758250732,\n    84383.44177318295,\n    84406.16749384951,\n    84428.89474430107,\n    84451.62352433169,\n    84474.35383373554,\n    84497.08567230683,\n    84519.81903983987,\n    84542.553936129,\n    84565.29036096868,\n    84588.0283141534,\n    84610.76779547772,\n    84633.50880473628,\n    84656.25134172381,\n    84678.99540623507,\n    84701.74099806492,\n    84724.48811700825,\n    84747.23676286006,\n    84769.9869354154,\n    84792.73863446941,\n    84815.49185981725,\n    84838.2466112542,\n    84861.00288857557,\n    84883.76069157677,\n    84906.52002005326,\n    84929.28087380057,\n    84952.0432526143,\n    84974.80715629015,\n    84997.5725846238,\n    85020.33953741111,\n    85043.10801444795,\n    85065.87801553024,\n    85088.64954045399,\n    85111.4225890153,\n    85134.19716101032,\n    85156.97325623524,\n    85179.75087448637,\n    85202.53001556007,\n    85225.31067925273,\n    85248.09286536086,\n    85270.87657368102,\n    85293.66180400981,\n    85316.44855614395,\n    85339.23682988019,\n    85362.02662501535,\n    85384.81794134635,\n    85407.61077867013,\n    85430.40513678372,\n    85453.20101548426,\n    85475.99841456886,\n    85498.7973338348,\n    85521.59777307935,\n    85544.3997320999,\n    85567.2032106939,\n    85590.00820865881,\n    85612.81472579224,\n    85635.62276189183,\n    85658.43231675526,\n    85681.24339018033,\n    85704.05598196488,\n    85726.8700919068,\n    85749.68571980408,\n    85772.50286545476,\n    85795.32152865696,\n    85818.14170920885,\n    85840.96340690868,\n    85863.78662155475,\n    85886.61135294545,\n    85909.43760087922,\n    85932.26536515457,\n    85955.09464557009,\n    85977.92544192442,\n    86000.75775401627,\n    86023.59158164443,\n    86046.42692460775,\n    86069.26378270512,\n    86092.10215573556,\n    86114.94204349807,\n    86137.7834457918,\n    86160.62636241592,\n    86183.47079316968,\n    86206.31673785238,\n    86229.1641962634,\n    86252.0131682022,\n    86274.8636534683,\n    86297.71565186126,\n    86320.56916318073,\n    86343.42418722642,\n    86366.28072379812,\n    86389.13877269567,\n    86411.99833371898,\n    86434.85940666801,\n    86457.72199134283,\n    86480.58608754353,\n    86503.45169507028,\n    86526.31881372335,\n    86549.18744330303,\n    86572.05758360968,\n    86594.92923444376,\n    86617.80239560577,\n    86640.67706689627,\n    86663.5532481159,\n    86686.43093906538,\n    86709.31013954544,\n    86732.19084935696,\n    86755.07306830082,\n    86777.95679617795,\n    86800.84203278944,\n    86823.72877793635,\n    86846.61703141985,\n    86869.50679304118,\n    86892.39806260161,\n    86915.29083990252,\n    86938.1851247453,\n    86961.08091693149,\n    86983.97821626259,\n    87006.87702254027,\n    87029.77733556618,\n    87052.67915514208,\n    87075.5824810698,\n    87098.48731315118,\n    87121.39365118822,\n    87144.3014949829,\n    87167.21084433729,\n    87190.12169905353,\n    87213.03405893384,\n    87235.9479237805,\n    87258.86329339583,\n    87281.78016758224,\n    87304.69854614217,\n    87327.61842887818,\n    87350.53981559286,\n    87373.46270608885,\n    87396.3871001689,\n    87419.31299763577,\n    87442.24039829234,\n    87465.16930194154,\n    87488.09970838632,\n    87511.03161742973,\n    87533.9650288749,\n    87556.89994252501,\n    87579.83635818327,\n    87602.77427565302,\n    87625.71369473761,\n    87648.65461524049,\n    87671.59703696515,\n    87694.54095971514,\n    87717.4863832941,\n    87740.43330750574,\n    87763.38173215378,\n    87786.33165704206,\n    87809.28308197446,\n    87832.23600675492,\n    87855.19043118745,\n    87878.14635507615,\n    87901.10377822515,\n    87924.06270043863,\n    87947.02312152089,\n    87969.98504127625,\n    87992.94845950909,\n    88015.9133760239,\n    88038.87979062517,\n    88061.84770311751,\n    88084.81711330556,\n    88107.78802099405,\n    88130.76042598773,\n    88153.73432809146,\n    88176.70972711014,\n    88199.68662284875,\n    88222.6650151123,\n    88245.6449037059,\n    88268.62628843471,\n    88291.60916910395,\n    88314.5935455189,\n    88337.57941748491,\n    88360.56678480741,\n    88383.55564729185,\n    88406.5460047438,\n    88429.53785696882,\n    88452.53120377261,\n    88475.52604496089,\n    88498.52238033945,\n    88521.52020971413,\n    88544.51953289087,\n    88567.52034967564,\n    88590.5226598745,\n    88613.52646329353,\n    88636.53175973892,\n    88659.5385490169,\n    88682.54683093374,\n    88705.55660529585,\n    88728.56787190959,\n    88751.58063058149,\n    88774.59488111807,\n    88797.61062332596,\n    88820.62785701183,\n    88843.6465819824,\n    88866.66679804446,\n    88889.68850500489,\n    88912.71170267061,\n    88935.73639084859,\n    88958.7625693459,\n    88981.79023796963,\n    89004.81939652696,\n    89027.85004482511,\n    89050.88218267141,\n    89073.9158098732,\n    89096.95092623789,\n    89119.98753157297,\n    89143.025625686,\n    89166.06520838456,\n    89189.10627947636,\n    89212.14883876909,\n    89235.19288607058,\n    89258.23842118867,\n    89281.28544393127,\n    89304.33395410638,\n    89327.38395152202,\n    89350.4354359863,\n    89373.4884073074,\n    89396.54286529354,\n    89419.598809753,\n    89442.65624049417,\n    89465.71515732541,\n    89488.77556005522,\n    89511.83744849212,\n    89534.90082244476,\n    89557.96568172173,\n    89581.03202613181,\n    89604.09985548374,\n    89627.1691695864,\n    89650.23996824867,\n    89673.31225127954,\n    89696.38601848802,\n    89719.4612696832,\n    89742.53800467425,\n    89765.61622327036,\n    89788.69592528083,\n    89811.77711051499,\n    89834.85977878221,\n    89857.94392989198,\n    89881.0295636538,\n    89904.11667987728,\n    89927.20527837201,\n    89950.29535894774,\n    89973.38692141422,\n    89996.47996558127,\n    90019.57449125877,\n    90042.67049825669,\n    90065.76798638502,\n    90088.86695545384,\n    90111.96740527326,\n    90135.06933565348,\n    90158.17274640476,\n    90181.2776373374,\n    90204.3840082618,\n    90227.49185898836,\n    90250.60118932759,\n    90273.71199909004,\n    90296.82428808633,\n    90319.93805612714,\n    90343.05330302319,\n    90366.1700285853,\n    90389.2882326243,\n    90412.40791495114,\n    90435.52907537678,\n    90458.65171371226,\n    90481.77582976868,\n    90504.90142335721,\n    90528.02849428906,\n    90551.1570423755,\n    90574.28706742791,\n    90597.41856925764,\n    90620.5515476762,\n    90643.68600249507,\n    90666.82193352585,\n    90689.95934058019,\n    90713.09822346977,\n    90736.23858200636,\n    90759.3804160018,\n    90782.52372526795,\n    90805.66850961676,\n    90828.81476886023,\n    90851.96250281043,\n    90875.11171127946,\n    90898.26239407953,\n    90921.41455102284,\n    90944.56818192174,\n    90967.72328658856,\n    90990.87986483572,\n    91014.03791647572,\n    91037.19744132107,\n    91060.35843918439,\n    91083.52090987834,\n    91106.68485321563,\n    91129.85026900904,\n    91153.0171570714,\n    91176.18551721562,\n    91199.35534925465,\n    91222.52665300149,\n    91245.69942826925,\n    91268.87367487104,\n    91292.04939262004,\n    91315.22658132955,\n    91338.40524081283,\n    91361.58537088329,\n    91384.76697135434,\n    91407.95004203948,\n    91431.13458275225,\n    91454.32059330626,\n    91477.50807351517,\n    91500.69702319271,\n    91523.88744215269,\n    91547.07933020893,\n    91570.27268717533,\n    91593.46751286586,\n    91616.66380709453,\n    91639.86156967544,\n    91663.06080042271,\n    91686.26149915057,\n    91709.46366567322,\n    91732.66729980502,\n    91755.87240136032,\n    91779.07897015357,\n    91802.28700599924,\n    91825.49650871192,\n    91848.70747810617,\n    91871.91991399668,\n    91895.13381619815,\n    91918.34918452542,\n    91941.56601879328,\n    91964.78431881666,\n    91988.0040844105,\n    92011.22531538982,\n    92034.44801156971,\n    92057.67217276528,\n    92080.89779879176,\n    92104.12488946435,\n    92127.35344459841,\n    92150.58346400928,\n    92173.81494751238,\n    92197.04789492322,\n    92220.28230605731,\n    92243.51818073026,\n    92266.75551875774,\n    92289.99431995547,\n    92313.2345841392,\n    92336.47631112477,\n    92359.71950072808,\n    92382.96415276507,\n    92406.21026705173,\n    92429.45784340418,\n    92452.70688163847,\n    92475.95738157081,\n    92499.20934301744,\n    92522.46276579465,\n    92545.7176497188,\n    92568.9739946063,\n    92592.23180027361,\n    92615.49106653726,\n    92638.75179321383,\n    92662.01398011995,\n    92685.27762707233,\n    92708.54273388773,\n    92731.80930038294,\n    92755.07732637487,\n    92778.34681168041,\n    92801.61775611658,\n    92824.89015950038,\n    92848.16402164895,\n    92871.43934237942,\n    92894.71612150903,\n    92917.99435885502,\n    92941.27405423473,\n    92964.55520746557,\n    92987.83781836496,\n    93011.12188675042,\n    93034.40741243947,\n    93057.69439524977,\n    93080.98283499895,\n    93104.27273150477,\n    93127.564084585,\n    93150.8568940575,\n    93174.15115974014,\n    93197.44688145092,\n    93220.7440590078,\n    93244.04269222889,\n    93267.34278093232,\n    93290.64432493623,\n    93313.94732405891,\n    93337.25177811863,\n    93360.55768693375,\n    93383.8650503227,\n    93407.17386810391,\n    93430.48414009594,\n    93453.79586611736,\n    93477.10904598678,\n    93500.42367952294,\n    93523.73976654456,\n    93547.05730687045,\n    93570.37630031949,\n    93593.69674671057,\n    93617.0186458627,\n    93640.3419975949,\n    93663.66680172624,\n    93686.99305807588,\n    93710.32076646303,\n    93733.64992670694,\n    93756.98053862691,\n    93780.31260204234,\n    93803.64611677264,\n    93826.9810826373,\n    93850.31749945584,\n    93873.65536704786,\n    93896.99468523303,\n    93920.33545383104,\n    93943.67767266167,\n    93967.0213415447,\n    93990.36646030005,\n    94013.71302874765,\n    94037.06104670743,\n    94060.4105139995,\n    94083.7614304439,\n    94107.11379586085,\n    94130.46761007051,\n    94153.82287289316,\n    94177.17958414911,\n    94200.53774365876,\n    94223.89735124253,\n    94247.25840672091,\n    94270.62090991443,\n    94293.98486064372,\n    94317.35025872942,\n    94340.71710399224,\n    94364.08539625294,\n    94387.45513533235,\n    94410.82632105134,\n    94434.19895323085,\n    94457.57303169188,\n    94480.94855625545,\n    94504.32552674267,\n    94527.70394297468,\n    94551.08380477272,\n    94574.46511195804,\n    94597.84786435193,\n    94621.23206177581,\n    94644.61770405111,\n    94668.00479099927,\n    94691.39332244187,\n    94714.78329820049,\n    94738.1747180968,\n    94761.56758195249,\n    94784.9618895893,\n    94808.35764082908,\n    94831.7548354937,\n    94855.15347340508,\n    94878.55355438517,\n    94901.95507825605,\n    94925.35804483978,\n    94948.76245395854,\n    94972.16830543448,\n    94995.57559908989,\n    95018.98433474707,\n    95042.3945122284,\n    95065.80613135628,\n    95089.21919195318,\n    95112.63369384164,\n    95136.04963684424,\n    95159.46702078362,\n    95182.88584548247,\n    95206.30611076353,\n    95229.72781644962,\n    95253.15096236358,\n    95276.57554832831,\n    95300.00157416679,\n    95323.42903970205,\n    95346.85794475715,\n    95370.28828915521,\n    95393.72007271941,\n    95417.15329527302,\n    95440.5879566393,\n    95464.02405664159,\n    95487.46159510332,\n    95510.9005718479,\n    95534.34098669887,\n    95557.78283947978,\n    95581.22613001426,\n    95604.67085812596,\n    95628.1170236386,\n    95651.56462637598,\n    95675.01366616192,\n    95698.4641428203,\n    95721.91605617508,\n    95745.36940605023,\n    95768.8241922698,\n    95792.28041465791,\n    95815.7380730387,\n    95839.19716723639,\n    95862.65769707522,\n    95886.11966237954,\n    95909.58306297369,\n    95933.04789868211,\n    95956.51416932927,\n    95979.98187473971,\n    96003.451014738,\n    96026.92158914881,\n    96050.39359779679,\n    96073.86704050671,\n    96097.34191710339,\n    96120.81822741163,\n    96144.29597125638,\n    96167.77514846258,\n    96191.25575885524,\n    96214.73780225945,\n    96238.2212785003,\n    96261.70618740298,\n    96285.19252879272,\n    96308.68030249479,\n    96332.16950833453,\n    96355.66014613732,\n    96379.1522157286,\n    96402.64571693387,\n    96426.14064957868,\n    96449.6370134886,\n    96473.13480848931,\n    96496.63403440651,\n    96520.13469106596,\n    96543.63677829347,\n    96567.1402959149,\n    96590.64524375615,\n    96614.15162164322,\n    96637.65942940213,\n    96661.16866685895,\n    96684.6793338398,\n    96708.19143017087,\n    96731.7049556784,\n    96755.21991018867,\n    96778.73629352801,\n    96802.25410552284,\n    96825.77334599958,\n    96849.29401478474,\n    96872.81611170487,\n    96896.33963658658,\n    96919.86458925651,\n    96943.39096954139,\n    96966.91877726796,\n    96990.44801226305,\n    97013.97867435352,\n    97037.5107633663,\n    97061.04427912834,\n    97084.57922146667,\n    97108.11559020838,\n    97131.6533851806,\n    97155.19260621049,\n    97178.73325312529,\n    97202.2753257523,\n    97225.81882391885,\n    97249.36374745233,\n    97272.91009618019,\n    97296.4578699299,\n    97320.00706852904,\n    97343.5576918052,\n    97367.10973958601,\n    97390.6632116992,\n    97414.2181079725,\n    97437.77442823374,\n    97461.33217231077,\n    97484.89134003149,\n    97508.4519312239,\n    97532.01394571598,\n    97555.57738333581,\n    97579.14224391151,\n    97602.70852727126,\n    97626.27623324326,\n    97649.84536165581,\n    97673.41591233722,\n    97696.98788511587,\n    97720.56127982022,\n    97744.1360962787,\n    97767.71233431989,\n    97791.28999377234,\n    97814.86907446472,\n    97838.44957622568,\n    97862.031498884,\n    97885.61484226845,\n    97909.19960620788,\n    97932.7857905312,\n    97956.37339506732,\n    97979.96241964525,\n    98003.55286409408,\n    98027.14472824286,\n    98050.73801192077,\n    98074.332714957,\n    98097.9288371808,\n    98121.52637842152,\n    98145.12533850846,\n    98168.72571727107,\n    98192.32751453877,\n    98215.93073014112,\n    98239.53536390766,\n    98263.14141566801,\n    98286.74888525181,\n    98310.35777248882,\n    98333.96807720876,\n    98357.57979924149,\n    98381.19293841685,\n    98404.80749456478,\n    98428.42346751524,\n    98452.04085709827,\n    98475.65966314392,\n    98499.27988548232,\n    98522.90152394367,\n    98546.52457835816,\n    98570.1490485561,\n    98593.77493436779,\n    98617.40223562362,\n    98641.03095215405,\n    98664.66108378951,\n    98688.29263036055,\n    98711.92559169777,\n    98735.5599676318,\n    98759.1957579933,\n    98782.83296261301,\n    98806.47158132173,\n    98830.11161395028,\n    98853.75306032957,\n    98877.39592029051,\n    98901.0401936641,\n    98924.68588028138,\n    98948.33297997342,\n    98971.98149257139,\n    98995.63141790645,\n    99019.28275580984,\n    99042.93550611287,\n    99066.58966864688,\n    99090.24524324323,\n    99113.9022297334,\n    99137.56062794886,\n    99161.22043772115,\n    99184.88165888184,\n    99208.54429126263,\n    99232.20833469517,\n    99255.87378901121,\n    99279.54065404256,\n    99303.20892962103,\n    99326.87861557852,\n    99350.54971174701,\n    99374.22221795844,\n    99397.89613404489,\n    99421.57145983842,\n    99445.24819517121,\n    99468.92633987544,\n    99492.60589378334,\n    99516.28685672721,\n    99539.9692285394,\n    99563.65300905229,\n    99587.33819809832,\n    99611.02479551,\n    99634.71280111987,\n    99658.4022147605,\n    99682.09303626454,\n    99705.7852654647,\n    99729.47890219369,\n    99753.17394628433,\n    99776.87039756944,\n    99800.56825588191,\n    99824.26752105469,\n    99847.96819292076,\n    99871.67027131317,\n    99895.373756065,\n    99919.07864700939,\n    99942.78494397952,\n    99966.49264680862,\n    99990.20175533001,\n    100013.91226937699,\n    100037.62418878295,\n    100061.33751338134,\n    100085.05224300563,\n    100108.76837748935,\n    100132.4859166661,\n    100156.2048603695,\n    100179.92520843323,\n    100203.64696069101,\n    100227.37011697664,\n    100251.09467712394,\n    100274.82064096678,\n    100298.54800833909,\n    100322.27677907483,\n    100346.00695300807,\n    100369.73852997283,\n    100393.47150980328,\n    100417.20589233354,\n    100440.94167739789,\n    100464.67886483055,\n    100488.41745446586,\n    100512.1574461382,\n    100535.89883968196,\n    100559.64163493161,\n    100583.3858317217,\n    100607.13142988674,\n    100630.87842926137,\n    100654.62682968024,\n    100678.37663097809,\n    100702.12783298964,\n    100725.88043554971,\n    100749.63443849317,\n    100773.38984165489,\n    100797.14664486986,\n    100820.90484797307,\n    100844.66445079957,\n    100868.42545318443,\n    100892.18785496285,\n    100915.95165596998,\n    100939.71685604108,\n    100963.48345501146,\n    100987.25145271645,\n    101011.02084899142,\n    101034.79164367184,\n    101058.56383659315,\n    101082.33742759094,\n    101106.11241650078,\n    101129.88880315828,\n    101153.66658739912,\n    101177.44576905905,\n    101201.22634797383,\n    101225.00832397929,\n    101248.7916969113,\n    101272.5764666058,\n    101296.36263289873,\n    101320.15019562612,\n    101343.93915462404,\n    101367.7295097286,\n    101391.52126077596,\n    101415.31440760233,\n    101439.10895004397,\n    101462.9048879372,\n    101486.70222111835,\n    101510.50094942382,\n    101534.30107269008,\n    101558.10259075361,\n    101581.90550345098,\n    101605.70981061876,\n    101629.5155120936,\n    101653.32260771218,\n    101677.13109731126,\n    101700.9409807276,\n    101724.75225779804,\n    101748.56492835947,\n    101772.3789922488,\n    101796.19444930303,\n    101820.01129935916,\n    101843.82954225427,\n    101867.64917782549,\n    101891.47020590997,\n    101915.29262634492,\n    101939.11643896763,\n    101962.94164361537,\n    101986.76824012553,\n    102010.59622833549,\n    102034.42560808272,\n    102058.25637920471,\n    102082.08854153901,\n    102105.92209492321,\n    102129.75703919494,\n    102153.59337419191,\n    102177.43109975185,\n    102201.27021571253,\n    102225.1107219118,\n    102248.95261818753,\n    102272.79590437764,\n    102296.64058032009,\n    102320.48664585294,\n    102344.33410081422,\n    102368.18294504205,\n    102392.03317837461,\n    102415.88480065008,\n    102439.73781170673,\n    102463.59221138287,\n    102487.44799951684,\n    102511.30517594703,\n    102535.1637405119,\n    102559.02369304994,\n    102582.88503339965,\n    102606.74776139966,\n    102630.6118768886,\n    102654.47737970512,\n    102678.34426968795,\n    102702.21254667587,\n    102726.08221050771,\n    102749.95326102231,\n    102773.8256980586,\n    102797.69952145554,\n    102821.57473105213,\n    102845.45132668741,\n    102869.32930820051,\n    102893.20867543056,\n    102917.08942821674,\n    102940.97156639831,\n    102964.85508981455,\n    102988.73999830478,\n    103012.6262917084,\n    103036.51396986481,\n    103060.40303261351,\n    103084.293479794,\n    103108.18531124585,\n    103132.07852680866,\n    103155.97312632212,\n    103179.8691096259,\n    103203.76647655977,\n    103227.66522696352,\n    103251.565360677,\n    103275.46687754011,\n    103299.36977739276,\n    103323.27406007495,\n    103347.1797254267,\n    103371.08677328809,\n    103394.99520349925,\n    103418.90501590034,\n    103442.81621033157,\n    103466.7287866332,\n    103490.64274464553,\n    103514.55808420894,\n    103538.4748051638,\n    103562.39290735057,\n    103586.31239060973,\n    103610.23325478184,\n    103634.15549970744,\n    103658.0791252272,\n    103682.00413118176,\n    103705.93051741188,\n    103729.8582837583,\n    103753.78743006183,\n    103777.71795616334,\n    103801.64986190372,\n    103825.58314712394,\n    103849.51781166499,\n    103873.4538553679,\n    103897.39127807376,\n    103921.33007962372,\n    103945.27025985895,\n    103969.21181862066,\n    103993.15475575015,\n    104017.0990710887,\n    104041.0447644777,\n    104064.99183575854,\n    104088.94028477269,\n    104112.89011136163,\n    104136.84131536692,\n    104160.79389663014,\n    104184.74785499295,\n    104208.70319029699,\n    104232.65990238401,\n    104256.61799109579,\n    104280.57745627411,\n    104304.53829776088,\n    104328.50051539797,\n    104352.46410902737,\n    104376.42907849104,\n    104400.39542363104,\n    104424.36314428947,\n    104448.33224030846,\n    104472.3027115302,\n    104496.27455779689,\n    104520.24777895081,\n    104544.22237483428,\n    104568.19834528965,\n    104592.17569015936,\n    104616.15440928582,\n    104640.13450251156,\n    104664.11596967909,\n    104688.09881063103,\n    104712.08302520998,\n    104736.06861325864,\n    104760.05557461972,\n    104784.043909136,\n    104808.03361665027,\n    104832.0246970054,\n    104856.01715004431,\n    104880.01097560991,\n    104904.00617354522,\n    104928.00274369326,\n    104952.00068589713,\n    104975.99999999993,\n    105000.00068584486,\n    105024.00274327511,\n    105048.00617213396,\n    105072.01097226472,\n    105096.0171435107,\n    105120.02468571535,\n    105144.03359872208,\n    105168.04388237436,\n    105192.05553651575,\n    105216.06856098982,\n    105240.08295564016,\n    105264.09872031047,\n    105288.11585484444,\n    105312.13435908582,\n    105336.1542328784,\n    105360.17547606604,\n    105384.19808849262,\n    105408.22207000206,\n    105432.24742043833,\n    105456.27413964548,\n    105480.30222746753,\n    105504.33168374863,\n    105528.36250833291,\n    105552.39470106458,\n    105576.42826178786,\n    105600.46319034706,\n    105624.49948658649,\n    105648.53715035053,\n    105672.5761814836,\n    105696.61657983017,\n    105720.65834523473,\n    105744.70147754184,\n    105768.74597659608,\n    105792.79184224212,\n    105816.83907432464,\n    105840.88767268835,\n    105864.93763717801,\n    105888.98896763846,\n    105913.04166391456,\n    105937.09572585119,\n    105961.15115329332,\n    105985.20794608595,\n    106009.2661040741,\n    106033.32562710284,\n    106057.3865150173,\n    106081.44876766266,\n    106105.51238488412,\n    106129.57736652695,\n    106153.64371243643,\n    106177.71142245791,\n    106201.78049643678,\n    106225.85093421848,\n    106249.92273564848,\n    106273.99590057228,\n    106298.07042883546,\n    106322.14632028362,\n    106346.2235747624,\n    106370.30219211751,\n    106394.38217219469,\n    106418.4635148397,\n    106442.54621989837,\n    106466.63028721658,\n    106490.71571664023,\n    106514.8025080153,\n    106538.89066118775,\n    106562.98017600364,\n    106587.07105230905,\n    106611.16328995011,\n    106635.25688877302,\n    106659.35184862395,\n    106683.44816934918,\n    106707.54585079502,\n    106731.64489280782,\n    106755.74529523395,\n    106779.84705791986,\n    106803.95018071201,\n    106828.05466345693,\n    106852.16050600118,\n    106876.26770819136,\n    106900.37626987413,\n    106924.48619089619,\n    106948.59747110425,\n    106972.71011034511,\n    106996.82410846559,\n    107020.93946531255,\n    107045.05618073288,\n    107069.17425457356,\n    107093.29368668159,\n    107117.41447690397,\n    107141.53662508781,\n    107165.66013108024,\n    107189.7849947284,\n    107213.91121587952,\n    107238.03879438085,\n    107262.16773007967,\n    107286.29802282334,\n    107310.42967245923,\n    107334.56267883476,\n    107358.69704179741,\n    107382.83276119467,\n    107406.96983687414,\n    107431.10826868335,\n    107455.24805646998,\n    107479.38920008171,\n    107503.53169936626,\n    107527.6755541714,\n    107551.82076434491,\n    107575.96732973469,\n    107600.11525018861,\n    107624.26452555461,\n    107648.41515568066,\n    107672.56714041479,\n    107696.72047960508,\n    107720.87517309963,\n    107745.03122074658,\n    107769.18862239414,\n    107793.34737789052,\n    107817.50748708403,\n    107841.66894982298,\n    107865.83176595572,\n    107889.99593533068,\n    107914.16145779629,\n    107938.32833320105,\n    107962.49656139348,\n    107986.66614222217,\n    108010.83707553573,\n    108035.00936118282,\n    108059.18299901215,\n    108083.35798887245,\n    108107.53433061253,\n    108131.71202408121,\n    108155.89106912735,\n    108180.07146559987,\n    108204.25321334775,\n    108228.43631221994,\n    108252.62076206553,\n    108276.80656273357,\n    108300.9937140732,\n    108325.18221593359,\n    108349.37206816394,\n    108373.5632706135,\n    108397.75582313156,\n    108421.94972556747,\n    108446.1449777706,\n    108470.34157959036,\n    108494.53953087622,\n    108518.7388314777,\n    108542.9394812443,\n    108567.14148002566,\n    108591.34482767139,\n    108615.54952403114,\n    108639.75556895464,\n    108663.96296229165,\n    108688.17170389196,\n    108712.38179360541,\n    108736.59323128188,\n    108760.80601677128,\n    108785.02014992358,\n    108809.23563058881,\n    108833.45245861699,\n    108857.67063385822,\n    108881.89015616261,\n    108906.11102538036,\n    108930.33324136169,\n    108954.55680395682,\n    108978.78171301607,\n    109003.00796838978,\n    109027.2355699283,\n    109051.4645174821,\n    109075.69481090162,\n    109099.92645003737,\n    109124.15943473988,\n    109148.39376485976,\n    109172.62944024763,\n    109196.86646075416,\n    109221.10482623006,\n    109245.3445365261,\n    109269.58559149304,\n    109293.82799098175,\n    109318.0717348431,\n    109342.316822928,\n    109366.56325508743,\n    109390.81103117237,\n    109415.06015103386,\n    109439.31061452301,\n    109463.56242149093,\n    109487.8155717888,\n    109512.0700652678,\n    109536.3259017792,\n    109560.58308117429,\n    109584.8416033044,\n    109609.1014680209,\n    109633.36267517522,\n    109657.62522461878,\n    109681.88911620309,\n    109706.15434977971,\n    109730.4209252002,\n    109754.68884231619,\n    109778.95810097932,\n    109803.22870104131,\n    109827.50064235389,\n    109851.77392476884,\n    109876.048548138,\n    109900.32451231324,\n    109924.60181714644,\n    109948.88046248957,\n    109973.1604481946,\n    109997.44177411357,\n    110021.72444009855,\n    110046.00844600165,\n    110070.29379167501,\n    110094.58047697082,\n    110118.86850174134,\n    110143.15786583882,\n    110167.44856911557,\n    110191.74061142397,\n    110216.0339926164,\n    110240.32871254528,\n    110264.62477106311,\n    110288.9221680224,\n    110313.22090327571,\n    110337.52097667565,\n    110361.82238807483,\n    110386.12513732594,\n    110410.42922428172,\n    110434.7346487949,\n    110459.04141071832,\n    110483.34950990479,\n    110507.6589462072,\n    110531.96971947847,\n    110556.28182957157,\n    110580.5952763395,\n    110604.91005963532,\n    110629.2261793121,\n    110653.54363522294,\n    110677.86242722106,\n    110702.18255515961,\n    110726.50401889188,\n    110750.82681827113,\n    110775.1509531507,\n    110799.47642338395,\n    110823.80322882428,\n    110848.13136932514,\n    110872.46084474004,\n    110896.79165492248,\n    110921.12379972603,\n    110945.4572790043,\n    110969.79209261097,\n    110994.12824039967,\n    111018.46572222418,\n    111042.80453793824,\n    111067.14468739566,\n    111091.48617045028,\n    111115.82898695602,\n    111140.1731367668,\n    111164.51861973657,\n    111188.86543571934,\n    111213.21358456917,\n    111237.56306614014,\n    111261.91388028639,\n    111286.26602686207,\n    111310.6195057214,\n    111334.97431671864,\n    111359.33045970804,\n    111383.68793454397,\n    111408.04674108078,\n    111432.40687917286,\n    111456.76834867468,\n    111481.13114944073,\n    111505.49528132551,\n    111529.8607441836,\n    111554.22753786962,\n    111578.59566223821,\n    111602.96511714405,\n    111627.33590244185,\n    111651.7080179864,\n    111676.08146363248,\n    111700.45623923496,\n    111724.8323446487,\n    111749.20977972864,\n    111773.58854432974,\n    111797.968638307,\n    111822.35006151545,\n    111846.73281381019,\n    111871.11689504632,\n    111895.50230507903,\n    111919.88904376348,\n    111944.27711095495,\n    111968.6665065087,\n    111993.05723028004,\n    112017.44928212435,\n    112041.842661897,\n    112066.23736945343,\n    112090.63340464912,\n    112115.0307673396,\n    112139.42945738042,\n    112163.82947462716,\n    112188.23081893545,\n    112212.63349016097,\n    112237.03748815943,\n    112261.44281278658,\n    112285.84946389822,\n    112310.25744135017,\n    112334.66674499828,\n    112359.07737469849,\n    112383.48933030672,\n    112407.90261167898,\n    112432.31721867126,\n    112456.73315113965,\n    112481.15040894024,\n    112505.56899192919,\n    112529.98889996266,\n    112554.41013289688,\n    112578.83269058811,\n    112603.25657289263,\n    112627.6817796668,\n    112652.10831076698,\n    112676.53616604958,\n    112700.96534537108,\n    112725.39584858794,\n    112749.82767555672,\n    112774.26082613398,\n    112798.6953001763,\n    112823.13109754038,\n    112847.56821808286,\n    112872.00666166049,\n    112896.44642813003,\n    112920.88751734828,\n    112945.32992917208,\n    112969.7736634583,\n    112994.21872006389,\n    113018.66509884578,\n    113043.11279966097,\n    113067.56182236652,\n    113092.01216681948,\n    113116.46383287695,\n    113140.9168203961,\n    113165.37112923413,\n    113189.82675924824,\n    113214.28371029573,\n    113238.74198223387,\n    113263.20157492002,\n    113287.66248821156,\n    113312.12472196593,\n    113336.58827604055,\n    113361.05315029295,\n    113385.51934458067,\n    113409.98685876124,\n    113434.45569269233,\n    113458.92584623155,\n    113483.39731923661,\n    113507.87011156522,\n    113532.34422307517,\n    113556.81965362425,\n    113581.2964030703,\n    113605.77447127122,\n    113630.2538580849,\n    113654.73456336933,\n    113679.21658698248,\n    113703.69992878241,\n    113728.18458862716,\n    113752.67056637487,\n    113777.15786188368,\n    113801.64647501177,\n    113826.13640561736,\n    113850.62765355874,\n    113875.12021869418,\n    113899.61410088204,\n    113924.1092999807,\n    113948.60581584855,\n    113973.10364834408,\n    113997.60279732574,\n    114022.1032626521,\n    114046.60504418172,\n    114071.10814177318,\n    114095.61255528513,\n    114120.11828457628,\n    114144.62532950533,\n    114169.13368993104,\n    114193.6433657122,\n    114218.15435670764,\n    114242.66666277626,\n    114267.18028377692,\n    114291.69521956862,\n    114316.21147001031,\n    114340.72903496103,\n    114365.24791427983,\n    114389.7681078258,\n    114414.2896154581,\n    114438.81243703587,\n    114463.33657241837,\n    114487.8620214648,\n    114512.38878403447,\n    114536.91685998671,\n    114561.44624918088,\n    114585.97695147636,\n    114610.5089667326,\n    114635.04229480909,\n    114659.57693556532,\n    114684.11288886084,\n    114708.65015455526,\n    114733.18873250818,\n    114757.72862257928,\n    114782.26982462825,\n    114806.81233851484,\n    114831.35616409882,\n    114855.90130124,\n    114880.44774979822,\n    114904.99550963337,\n    114929.5445806054,\n    114954.09496257425,\n    114978.64665539993,\n    115003.19965894247,\n    115027.75397306195,\n    115052.30959761847,\n    115076.86653247218,\n    115101.42477748329,\n    115125.984332512,\n    115150.54519741859,\n    115175.10737206334,\n    115199.67085630659,\n    115224.23565000873,\n    115248.80175303014,\n    115273.3691652313,\n    115297.93788647266,\n    115322.50791661476,\n    115347.07925551817,\n    115371.65190304347,\n    115396.2258590513,\n    115420.80112340231,\n    115445.37769595724,\n    115469.95557657682,\n    115494.53476512182,\n    115519.11526145306,\n    115543.6970654314,\n    115568.28017691776,\n    115592.86459577303,\n    115617.4503218582,\n    115642.03735503425,\n    115666.62569516223,\n    115691.21534210323,\n    115715.80629571836,\n    115740.39855586876,\n    115764.99212241563,\n    115789.58699522018,\n    115814.18317414368,\n    115838.78065904742,\n    115863.37944979276,\n    115887.97954624105,\n    115912.5809482537,\n    115937.18365569218,\n    115961.78766841792,\n    115986.39298629249,\n    116010.99960917742,\n    116035.60753693432,\n    116060.21676942479,\n    116084.82730651053,\n    116109.43914805322,\n    116134.0522939146,\n    116158.66674395645,\n    116183.2824980406,\n    116207.89955602886,\n    116232.51791778316,\n    116257.13758316539,\n    116281.75855203751,\n    116306.38082426153,\n    116331.0043996995,\n    116355.62927821343,\n    116380.25545966547,\n    116404.88294391775,\n    116429.51173083246,\n    116454.14182027178,\n    116478.77321209799,\n    116503.40590617337,\n    116528.03990236024,\n    116552.67520052097,\n    116577.31180051794,\n    116601.94970221359,\n    116626.5889054704,\n    116651.22941015086,\n    116675.8712161175,\n    116700.51432323293,\n    116725.15873135976,\n    116749.8044403606,\n    116774.45145009817,\n    116799.0997604352,\n    116823.74937123443,\n    116848.40028235866,\n    116873.05249367072,\n    116897.70600503348,\n    116922.36081630984,\n    116947.01692736275,\n    116971.67433805518,\n    116996.33304825013,\n    117020.99305781067,\n    117045.65436659988,\n    117070.31697448085,\n    117094.98088131678,\n    117119.64608697084,\n    117144.31259130625,\n    117168.98039418628,\n    117193.64949547425,\n    117218.31989503348,\n    117242.99159272734,\n    117267.66458841923,\n    117292.33888197262,\n    117317.01447325097,\n    117341.6913621178,\n    117366.36954843666,\n    117391.04903207115,\n    117415.72981288488,\n    117440.41189074152,\n    117465.09526550476,\n    117489.77993703831,\n    117514.46590520597,\n    117539.15316987154,\n    117563.84173089883,\n    117588.53158815173,\n    117613.22274149416,\n    117637.91519079005,\n    117662.60893590341,\n    117687.30397669821,\n    117712.00031303853,\n    117736.69794478847,\n    117761.39687181212,\n    117786.09709397367,\n    117810.7986111373,\n    117835.50142316725,\n    117860.20552992777,\n    117884.91093128319,\n    117909.6176270978,\n    117934.32561723603,\n    117959.03490156225,\n    117983.74547994092,\n    118008.45735223651,\n    118033.17051831353,\n    118057.88497803656,\n    118082.60073127014,\n    118107.31777787892,\n    118132.03611772758,\n    118156.75575068076,\n    118181.47667660323,\n    118206.19889535972,\n    118230.92240681504,\n    118255.64721083404,\n    118280.37330728157,\n    118305.10069602253,\n    118329.82937692187,\n    118354.55934984458,\n    118379.29061465565,\n    118404.02317122012,\n    118428.75701940308,\n    118453.49215906965,\n    118478.22859008498,\n    118502.96631231424,\n    118527.70532562268,\n    118552.44562987552,\n    118577.18722493808,\n    118601.93011067568,\n    118626.67428695368,\n    118651.41975363747,\n    118676.1665105925,\n    118700.91455768421,\n    118725.66389477813,\n    118750.41452173979,\n    118775.16643843475,\n    118799.91964472862,\n    118824.67414048707,\n    118849.42992557574,\n    118874.18699986035,\n    118898.94536320666,\n    118923.70501548043,\n    118948.46595654752,\n    118973.22818627374,\n    118997.99170452499,\n    119022.7565111672,\n    119047.52260606633,\n    119072.28998908834,\n    119097.0586600993,\n    119121.82861896523,\n    119146.59986555226,\n    119171.3723997265,\n    119196.14622135412,\n    119220.92133030134,\n    119245.69772643436,\n    119270.47540961947,\n    119295.25437972297,\n    119320.0346366112,\n    119344.81618015055,\n    119369.5990102074,\n    119394.38312664822,\n    119419.16852933947,\n    119443.95521814766,\n    119468.74319293935,\n    119493.53245358112,\n    119518.32299993958,\n    119543.1148318814,\n    119567.90794927324,\n    119592.70235198183,\n    119617.49803987393,\n    119642.29501281632,\n    119667.09327067583,\n    119691.89281331931,\n    119716.69364061367,\n    119741.49575242584,\n    119766.29914862274,\n    119791.10382907142,\n    119815.90979363887,\n    119840.71704219218,\n    119865.52557459843,\n    119890.33539072477,\n    119915.14649043836,\n    119939.95887360642,\n    119964.77254009615,\n    119989.58748977486,\n    120014.40372250983,\n    120039.22123816841,\n    120064.04003661797,\n    120088.86011772591,\n    120113.6814813597,\n    120138.50412738678,\n    120163.3280556747,\n    120188.15326609099,\n    120212.9797585032,\n    120237.807532779,\n    120262.636588786,\n    120287.46692639188,\n    120312.29854546436,\n    120337.13144587121,\n    120361.9656274802,\n    120386.80109015913,\n    120411.6378337759,\n    120436.47585819835,\n    120461.31516329442,\n    120486.15574893207,\n    120510.99761497928,\n    120535.84076130408,\n    120560.6851877745,\n    120585.53089425867,\n    120610.3778806247,\n    120635.22614674074,\n    120660.07569247499,\n    120684.92651769568,\n    120709.77862227106,\n    120734.63200606944,\n    120759.48666895913,\n    120784.3426108085,\n    120809.19983148595,\n    120834.05833085992,\n    120858.91810879884,\n    120883.77916517125,\n    120908.64149984565,\n    120933.5051126906,\n    120958.37000357473,\n    120983.23617236665,\n    121008.10361893504,\n    121032.9723431486,\n    121057.84234487606,\n    121082.71362398617,\n    121107.58618034775,\n    121132.46001382964,\n    121157.33512430069,\n    121182.21151162982,\n    121207.08917568595,\n    121231.96811633807,\n    121256.84833345517,\n    121281.72982690629,\n    121306.61259656049,\n    121331.49664228689,\n    121356.38196395461,\n    121381.26856143285,\n    121406.15643459078,\n    121431.04558329767,\n    121455.93600742277,\n    121480.82770683538,\n    121505.72068140487,\n    121530.61493100057,\n    121555.51045549192,\n    121580.40725474835,\n    121605.30532863933,\n    121630.20467703436,\n    121655.10529980299,\n    121680.00719681478,\n    121704.91036793934,\n    121729.81481304632,\n    121754.72053200539,\n    121779.62752468624,\n    121804.53579095862,\n    121829.44533069231,\n    121854.3561437571,\n    121879.26823002285,\n    121904.1815893594,\n    121929.09622163669,\n    121954.01212672464,\n    121978.92930449323,\n    122003.84775481246,\n    122028.76747755238,\n    122053.68847258303,\n    122078.61073977455,\n    122103.53427899707,\n    122128.45909012076,\n    122153.3851730158,\n    122178.31252755247,\n    122203.241153601,\n    122228.1710510317,\n    122253.10221971496,\n    122278.03465952107,\n    122302.9683703205,\n    122327.90335198362,\n    122352.83960438096,\n    122377.777127383,\n    122402.71592086025,\n    122427.65598468333,\n    122452.59731872278,\n    122477.53992284928,\n    122502.48379693348,\n    122527.42894084606,\n    122552.37535445779,\n    122577.3230376394,\n    122602.27199026172,\n    122627.22221219557,\n    122652.17370331181,\n    122677.12646348133,\n    122702.08049257506,\n    122727.03579046397,\n    122751.99235701906,\n    122776.95019211136,\n    122801.9092956119,\n    122826.8696673918,\n    122851.8313073222,\n    122876.79421527422,\n    122901.75839111907,\n    122926.72383472799,\n    122951.69054597223,\n    122976.65852472307,\n    123001.62777085182,\n    123026.59828422987,\n    123051.57006472857,\n    123076.54311221937,\n    123101.5174265737,\n    123126.49300766307,\n    123151.46985535898,\n    123176.447969533,\n    123201.42735005668,\n    123226.40799680166,\n    123251.38990963959,\n    123276.37308844214,\n    123301.35753308103,\n    123326.343243428,\n    123351.33021935483,\n    123376.31846073334,\n    123401.30796743535,\n    123426.29873933276,\n    123451.29077629748,\n    123476.28407820144,\n    123501.2786449166,\n    123526.27447631498,\n    123551.27157226863,\n    123576.2699326496,\n    123601.26955732999,\n    123626.27044618195,\n    123651.27259907764,\n    123676.27601588926,\n    123701.28069648903,\n    123726.28664074925,\n    123751.29384854218,\n    123776.30231974016,\n    123801.31205421555,\n    123826.32305184074,\n    123851.33531248817,\n    123876.34883603029,\n    123901.36362233957,\n    123926.37967128855,\n    123951.3969827498,\n    123976.41555659588,\n    124001.43539269941,\n    124026.45649093305,\n    124051.47885116948,\n    124076.50247328142,\n    124101.5273571416,\n    124126.55350262282,\n    124151.58090959788,\n    124176.60957793961,\n    124201.63950752091,\n    124226.67069821467,\n    124251.70314989384,\n    124276.73686243138,\n    124301.7718357003,\n    124326.80806957364,\n    124351.84556392446,\n    124376.88431862585,\n    124401.92433355095,\n    124426.96560857294,\n    124452.00814356498,\n    124477.05193840031,\n    124502.0969929522,\n    124527.14330709392,\n    124552.19088069882,\n    124577.23971364023,\n    124602.28980579154,\n    124627.34115702618,\n    124652.3937672176,\n    124677.44763623926,\n    124702.50276396469,\n    124727.55915026742,\n    124752.61679502104,\n    124777.67569809916,\n    124802.73585937542,\n    124827.79727872348,\n    124852.85995601704,\n    124877.92389112986,\n    124902.98908393568,\n    124928.05553430831,\n    124953.1232421216,\n    124978.19220724938,\n    125003.26242956554,\n    125028.33390894404,\n    125053.40664525882,\n    125078.48063838384,\n    125103.55588819316,\n    125128.63239456083,\n    125153.71015736091,\n    125178.78917646752,\n    125203.86945175481,\n    125228.95098309696,\n    125254.03377036817,\n    125279.1178134427,\n    125304.2031121948,\n    125329.28966649878,\n    125354.37747622898,\n    125379.46654125977,\n    125404.55686146552,\n    125429.6484367207,\n    125454.74126689974,\n    125479.83535187715,\n    125504.93069152744,\n    125530.02728572517,\n    125555.12513434493,\n    125580.22423726133,\n    125605.32459434902,\n    125630.42620548268,\n    125655.52907053704,\n    125680.63318938682,\n    125705.7385619068,\n    125730.84518797178,\n    125755.9530674566,\n    125781.06220023613,\n    125806.17258618528,\n    125831.28422517896,\n    125856.39711709213,\n    125881.51126179981,\n    125906.62665917698,\n    125931.74330909875,\n    125956.86121144016,\n    125981.98036607634,\n    126007.10077288245,\n    126032.22243173365,\n    126057.34534250517,\n    126082.46950507225,\n    126107.59491931014,\n    126132.72158509417,\n    126157.84950229966,\n    126182.97867080198,\n    126208.10909047653,\n    126233.24076119871,\n    126258.37368284403,\n    126283.50785528794,\n    126308.64327840599,\n    126333.7799520737,\n    126358.91787616667,\n    126384.0570505605,\n    126409.19747513086,\n    126434.3391497534,\n    126459.48207430386,\n    126484.62624865794,\n    126509.77167269142,\n    126534.9183462801,\n    126560.06626929982,\n    126585.21544162642,\n    126610.36586313581,\n    126635.51753370391,\n    126660.67045320668,\n    126685.82462152008,\n    126710.98003852014,\n    126736.1367040829,\n    126761.29461808444,\n    126786.45378040087,\n    126811.61419090834,\n    126836.77584948298,\n    126861.93875600102,\n    126887.10291033868,\n    126912.26831237224,\n    126937.43496197795,\n    126962.60285903217,\n    126987.77200341123,\n    127012.94239499152,\n    127038.11403364947,\n    127063.2869192615,\n    127088.46105170409,\n    127113.63643085376,\n    127138.81305658702,\n    127163.99092878048,\n    127189.17004731069,\n    127214.3504120543,\n    127239.53202288797,\n    127264.71487968838,\n    127289.89898233226,\n    127315.08433069635,\n    127340.27092465744,\n    127365.45876409234,\n    127390.64784887788,\n    127415.83817889093,\n    127441.02975400841,\n    127466.22257410725,\n    127491.4166390644,\n    127516.61194875685,\n    127541.80850306165,\n    127567.00630185583,\n    127592.20534501647,\n    127617.4056324207,\n    127642.60716394568,\n    127667.80993946856,\n    127693.01395886653,\n    127718.21922201688,\n    127743.42572879682,\n    127768.63347908368,\n    127793.8424727548,\n    127819.05270968749,\n    127844.26418975917,\n    127869.47691284724,\n    127894.69087882918,\n    127919.90608758242,\n    127945.12253898452,\n    127970.34023291297,\n    127995.55916924539,\n    128020.77934785932,\n    128046.00076863244,\n    128071.22343144237,\n    128096.44733616684,\n    128121.67248268353,\n    128146.89887087021,\n    128172.12650060465,\n    128197.35537176466,\n    128222.5854842281,\n    128247.81683787282,\n    128273.0494325767,\n    128298.28326821771,\n    128323.5183446738,\n    128348.75466182294,\n    128373.99221954317,\n    128399.23101771252,\n    128424.47105620909,\n    128449.71233491098,\n    128474.95485369631,\n    128500.19861244329,\n    128525.44361103009,\n    128550.68984933494,\n    128575.93732723613,\n    128601.18604461191,\n    128626.43600134061,\n    128651.68719730059,\n    128676.93963237021,\n    128702.1933064279,\n    128727.44821935208,\n    128752.70437102125,\n    128777.96176131385,\n    128803.22039010846,\n    128828.48025728362,\n    128853.74136271792,\n    128879.00370628996,\n    128904.2672878784,\n    128929.53210736193,\n    128954.79816461923,\n    128980.06545952905,\n    129005.33399197015,\n    129030.60376182134,\n    129055.87476896142,\n    129081.14701326926,\n    129106.42049462376,\n    129131.6952129038,\n    129156.97116798835,\n    129182.24835975636,\n    129207.52678808685,\n    129232.80645285884,\n    129258.08735395141,\n    129283.36949124365,\n    129308.65286461466,\n    129333.9374739436,\n    129359.22331910966,\n    129384.51039999202,\n    129409.79871646997,\n    129435.08826842274,\n    129460.37905572963,\n    129485.67107826998,\n    129510.96433592314,\n    129536.2588285685,\n    129561.55455608548,\n    129586.85151835352,\n    129612.14971525209,\n    129637.4491466607,\n    129662.74981245887,\n    129688.0517125262,\n    129713.35484674224,\n    129738.65921498663,\n    129763.96481713903,\n    129789.2716530791,\n    129814.57972268655,\n    129839.88902584116,\n    129865.19956242264,\n    129890.51133231082,\n    129915.82433538554,\n    129941.13857152662,\n    129966.45404061397,\n    129991.7707425275,\n    130017.08867714716,\n    130042.4078443529,\n    130067.72824402474,\n    130093.04987604271,\n    130118.37274028687,\n    130143.69683663732,\n    130169.02216497416,\n    130194.34872517755,\n    130219.67651712766,\n    130245.0055407047,\n    130270.33579578891,\n    130295.66728226055,\n    130320.99999999991,\n    130346.33394888733,\n    130371.66912880314,\n    130397.00553962773,\n    130422.34318124152,\n    130447.68205352494,\n    130473.02215635845,\n    130498.36348962256,\n    130523.70605319779,\n    130549.0498469647,\n    130574.39487080388,\n    130599.74112459592,\n    130625.08860822149,\n    130650.43732156123,\n    130675.78726449587,\n    130701.13843690613,\n    130726.49083867275,\n    130751.84446967654,\n    130777.19932979831,\n    130802.5554189189,\n    130827.91273691918,\n    130853.27128368006,\n    130878.63105908247,\n    130903.99206300738,\n    130929.35429533575,\n    130954.71775594862,\n    130980.08244472703,\n    131005.44836155206,\n    131030.81550630482,\n    131056.18387886642,\n    131081.55347911804,\n    131106.92430694087,\n    131132.29636221612,\n    131157.66964482504,\n    131183.0441546489,\n    131208.41989156904,\n    131233.79685546676,\n    131259.17504622342,\n    131284.55446372041,\n    131309.93510783918,\n    131335.31697846117,\n    131360.70007546784,\n    131386.0843987407,\n    131411.46994816128,\n    131436.85672361116,\n    131462.24472497194,\n    131487.6339521252,\n    131513.02440495262,\n    131538.41608333588,\n    131563.80898715663,\n    131589.2031162967,\n    131614.59847063778,\n    131639.9950500617,\n    131665.39285445024,\n    131690.7918836853,\n    131716.19213764873,\n    131741.5936162224,\n    131766.99631928833,\n    131792.4002467284,\n    131817.80539842462,\n    131843.21177425905,\n    131868.6193741137,\n    131894.02819787065,\n    131919.43824541202,\n    131944.84951661993,\n    131970.26201137656,\n    131995.67572956407,\n    132021.09067106468,\n    132046.50683576067,\n    132071.9242235343,\n    132097.34283426782,\n    132122.76266784366,\n    132148.1837241441,\n    132173.60600305157,\n    132199.02950444847,\n    132224.45422821722,\n    132249.88017424036,\n    132275.3073424003,\n    132300.73573257966,\n    132326.16534466096,\n    132351.59617852676,\n    132377.0282340597,\n    132402.46151114244,\n    132427.8960096576,\n    132453.3317294879,\n    132478.7686705161,\n    132504.2068326249,\n    132529.64621569714,\n    132555.0868196156,\n    132580.5286442631,\n    132605.97168952253,\n    132631.41595527678,\n    132656.8614414088,\n    132682.3081478015,\n    132707.75607433787,\n    132733.20522090094,\n    132758.65558737374,\n    132784.1071736393,\n    132809.55997958075,\n    132835.01400508118,\n    132860.46925002377,\n    132885.92571429166,\n    132911.3833977681,\n    132936.84230033628,\n    132962.30242187946,\n    132987.76376228096,\n    133013.22632142407,\n    133038.69009919214,\n    133064.15509546854,\n    133089.62131013666,\n    133115.08874307995,\n    133140.55739418184,\n    133166.0272633258,\n    133191.4983503954,\n    133216.97065527414,\n    133242.4441778456,\n    133267.91891799335,\n    133293.39487560102,\n    133318.87205055228,\n    133344.3504427308,\n    133369.83005202023,\n    133395.3108783044,\n    133420.79292146701,\n    133446.27618139185,\n    133471.76065796276,\n    133497.24635106357,\n    133522.73326057816,\n    133548.2213863904,\n    133573.71072838426,\n    133599.20128644365,\n    133624.6930604526,\n    133650.1860502951,\n    133675.68025585517,\n    133701.1756770169,\n    133726.67231366437,\n    133752.17016568172,\n    133777.66923295305,\n    133803.1695153626,\n    133828.67101279454,\n    133854.1737251331,\n    133879.67765226253,\n    133905.18279406714,\n    133930.68915043125,\n    133956.19672123916,\n    133981.70550637526,\n    134007.215505724,\n    134032.7267191697,\n    134058.23914659687,\n    134083.75278789,\n    134109.26764293358,\n    134134.78371161217,\n    134160.30099381026,\n    134185.8194894125,\n    134211.33919830353,\n    134236.8601203679,\n    134262.38225549037,\n    134287.90560355558,\n    134313.4301644483,\n    134338.95593805326,\n    134364.48292425525,\n    134390.0111229391,\n    134415.54053398955,\n    134441.0711572916,\n    134466.60299273,\n    134492.1360401898,\n    134517.67029955584,\n    134543.20577071316,\n    134568.74245354676,\n    134594.2803479416,\n    134619.81945378278,\n    134645.35977095537,\n    134670.90129934452,\n    134696.4440388353,\n    134721.9879893129,\n    134747.53315066252,\n    134773.07952276937,\n    134798.6271055187,\n    134824.17589879577,\n    134849.7259024859,\n    134875.27711647438,\n    134900.8295406466,\n    134926.38317488792,\n    134951.93801908373,\n    134977.4940731195,\n    135003.0513368807,\n    135028.60981025276,\n    135054.16949312127,\n    135079.73038537172,\n    135105.29248688967,\n    135130.85579756077,\n    135156.42031727062,\n    135181.98604590484,\n    135207.55298334916,\n    135233.12112948927,\n    135258.69048421088,\n    135284.26104739975,\n    135309.83281894168,\n    135335.4057987225,\n    135360.97998662802,\n    135386.55538254412,\n    135412.1319863567,\n    135437.70979795168,\n    135463.28881721498,\n    135488.86904403262,\n    135514.45047829056,\n    135540.03311987486,\n    135565.61696867156,\n    135591.20202456677,\n    135616.78828744654,\n    135642.37575719706,\n    135667.96443370447,\n    135693.55431685498,\n    135719.14540653478,\n    135744.7377026301,\n    135770.33120502727,\n    135795.92591361253,\n    135821.52182827223,\n    135847.11894889272,\n    135872.7172753604,\n    135898.3168075616,\n    135923.91754538284,\n    135949.51948871053,\n    135975.12263743114,\n    136000.72699143123,\n    136026.3325505973,\n    136051.9393148159,\n    136077.5472839737,\n    136103.15645795723,\n    136128.76683665317,\n    136154.37841994822,\n    136179.991207729,\n    136205.60519988232,\n    136231.2203962949,\n    136256.8367968535,\n    136282.45440144493,\n    136308.07320995603,\n    136333.69322227367,\n    136359.3144382847,\n    136384.93685787608,\n    136410.56048093468,\n    136436.18530734754,\n    136461.81133700156,\n    136487.43856978387,\n    136513.06700558143,\n    136538.6966442813,\n    136564.32748577066,\n    136589.95952993655,\n    136615.59277666616,\n    136641.22722584667,\n    136666.86287736523,\n    136692.49973110916,\n    136718.13778696564,\n    136743.77704482197,\n    136769.41750456547,\n    136795.05916608346,\n    136820.7020292633,\n    136846.34609399244,\n    136871.9913601582,\n    136897.63782764805,\n    136923.28549634948,\n    136948.93436614997,\n    136974.58443693706,\n    137000.23570859825,\n    137025.88818102115,\n    137051.54185409332,\n    137077.19672770242,\n    137102.8528017361,\n    137128.51007608202,\n    137154.16855062786,\n    137179.82822526142,\n    137205.4890998704,\n    137231.15117434258,\n    137256.8144485658,\n    137282.4789224279,\n    137308.14459581667,\n    137333.8114686201,\n    137359.47954072602,\n    137385.1488120224,\n    137410.8192823972,\n    137436.49095173844,\n    137462.16381993407,\n    137487.8378868722,\n    137513.5131524409,\n    137539.18961652822,\n    137564.8672790223,\n    137590.5461398113,\n    137616.22619878338,\n    137641.90745582676,\n    137667.58991082967,\n    137693.27356368033,\n    137718.95841426702,\n    137744.64446247809,\n    137770.33170820182,\n    137796.0201513266,\n    137821.7097917408,\n    137847.40062933284,\n    137873.09266399115,\n    137898.78589560417,\n    137924.48032406042,\n    137950.17594924837,\n    137975.8727710566,\n    138001.57078937365,\n    138027.27000408815,\n    138052.97041508864,\n    138078.67202226384,\n    138104.3748255024,\n    138130.07882469296,\n    138155.78401972432,\n    138181.49041048516,\n    138207.1979968643,\n    138232.9067787505,\n    138258.61675603263,\n    138284.3279285995,\n    138310.04029633995,\n    138335.75385914298,\n    138361.46861689744,\n    138387.18456949232,\n    138412.9017168166,\n    138438.62005875923,\n    138464.3395952093,\n    138490.06032605586,\n    138515.78225118798,\n    138541.50537049473,\n    138567.2296838653,\n    138592.95519118884,\n    138618.6818923545,\n    138644.40978725153,\n    138670.13887576913,\n    138695.86915779658,\n    138721.60063322316,\n    138747.33330193823,\n    138773.06716383106,\n    138798.80221879104,\n    138824.53846670757,\n    138850.27590747006,\n    138876.01454096794,\n    138901.7543670907,\n    138927.49538572782,\n    138953.2375967688,\n    138978.9810001032,\n    139004.7255956206,\n    139030.4713832106,\n    139056.2183627628,\n    139081.96653416683,\n    139107.7158973124,\n    139133.46645208917,\n    139159.2181983869,\n    139184.97113609532,\n    139210.7252651042,\n    139236.48058530336,\n    139262.23709658257,\n    139287.99479883176,\n    139313.75369194074,\n    139339.51377579942,\n    139365.27505029776,\n    139391.03751532568,\n    139416.80117077316,\n    139442.56601653024,\n    139468.3320524869,\n    139494.09927853322,\n    139519.86769455927,\n    139545.63730045516,\n    139571.408096111,\n    139597.18008141697,\n    139622.95325626322,\n    139648.72762054,\n    139674.5031741375,\n    139700.27991694602,\n    139726.0578488558,\n    139751.83696975713,\n    139777.61727954043,\n    139803.39877809596,\n    139829.18146531415,\n    139854.9653410854,\n    139880.75040530015,\n    139906.53665784886,\n    139932.324098622,\n    139958.11272751007,\n    139983.90254440365,\n    140009.69354919327,\n    140035.4857417695,\n    140061.27912202294,\n    140087.07368984428,\n    140112.86944512415,\n    140138.6663877532,\n    140164.4645176222,\n    140190.26383462187,\n    140216.06433864293,\n    140241.86602957622,\n    140267.66890731253,\n    140293.47297174268,\n    140319.27822275754,\n    140345.08466024802,\n    140370.89228410498,\n    140396.70109421943,\n    140422.51109048226,\n    140448.32227278448,\n    140474.13464101712,\n    140499.94819507122,\n    140525.7629348378,\n    140551.578860208,\n    140577.3959710729,\n    140603.21426732364,\n    140629.03374885136,\n    140654.8544155473,\n    140680.67626730262,\n    140706.49930400858,\n    140732.32352555645,\n    140758.1489318375,\n    140783.97552274304,\n    140809.80329816442,\n    140835.63225799298,\n    140861.46240212015,\n    140887.2937304373,\n    140913.12624283586,\n    140938.95993920733,\n    140964.79481944317,\n    140990.63088343487,\n    141016.468131074,\n    141042.30656225214,\n    141068.14617686084,\n    141093.98697479168,\n    141119.82895593636,\n    141145.6721201865,\n    141171.51646743377,\n    141197.36199756994,\n    141223.20871048668,\n    141249.05660607578,\n    141274.90568422904,\n    141300.75594483822,\n    141326.6073877952,\n    141352.4600129918,\n    141378.31382031992,\n    141404.16880967148,\n    141430.02498093838,\n    141455.8823340126,\n    141481.74086878612,\n    141507.60058515094,\n    141533.4614829991,\n    141559.32356222265,\n    141585.18682271364,\n    141611.0512643642,\n    141636.9168870665,\n    141662.78369071265,\n    141688.6516751948,\n    141714.5208404052,\n    141740.39118623605,\n    141766.26271257963,\n    141792.1354193282,\n    141818.00930637406,\n    141843.88437360956,\n    141869.760620927,\n    141895.6380482188,\n    141921.51665537735,\n    141947.39644229505,\n    141973.27740886438,\n    141999.15955497778,\n    142025.0428805278,\n    142050.9273854069,\n    142076.81306950765,\n    142102.69993272264,\n    142128.58797494444,\n    142154.4771960657,\n    142180.36759597904,\n    142206.25917457714,\n    142232.15193175265,\n    142258.04586739838,\n    142283.94098140698,\n    142309.83727367126,\n    142335.734744084,\n    142361.63339253806,\n    142387.5332189262,\n    142413.43422314132,\n    142439.33640507632,\n    142465.23976462413,\n    142491.14430167765,\n    142517.05001612983,\n    142542.95690787368,\n    142568.86497680223,\n    142594.77422280848,\n    142620.6846457855,\n    142646.5962456264,\n    142672.50902222423,\n    142698.42297547215,\n    142724.33810526333,\n    142750.25441149093,\n    142776.17189404817,\n    142802.09055282827,\n    142828.0103877245,\n    142853.93139863008,\n    142879.85358543837,\n    142905.77694804268,\n    142931.70148633636,\n    142957.62720021277,\n    142983.55408956532,\n    143009.48215428743,\n    143035.41139427255,\n    143061.34180941415,\n    143087.2733996057,\n    143113.20616474075,\n    143139.14010471283,\n    143165.0752194155,\n    143191.01150874238,\n    143216.94897258704,\n    143242.88761084314,\n    143268.82742340435,\n    143294.76841016437,\n    143320.71057101688,\n    143346.65390585564,\n    143372.59841457437,\n    143398.54409706692,\n    143424.490953227,\n    143450.43898294857,\n    143476.38818612538,\n    143502.33856265133,\n    143528.29011242036,\n    143554.24283532638,\n    143580.19673126334,\n    143606.1518001252,\n    143632.10804180597,\n    143658.0654561997,\n    143684.02404320036,\n    143709.98380270213,\n    143735.944734599,\n    143761.9068387852,\n    143787.87011515474,\n    143813.83456360188,\n    143839.8001840208,\n    143865.7669763057,\n    143891.7349403508,\n    143917.7040760504,\n    143943.67438329876,\n    143969.6458619902,\n    143995.61851201905,\n    144021.59233327967,\n    144047.56732566646,\n    144073.54348907378,\n    144099.52082339607,\n    144125.49932852783,\n    144151.4790043635,\n    144177.45985079758,\n    144203.44186772458,\n    144229.4250550391,\n    144255.40941263564,\n    144281.39494040885,\n    144307.3816382533,\n    144333.36950606373,\n    144359.35854373468,\n    144385.34875116093,\n    144411.34012823718,\n    144437.33267485813,\n    144463.32639091855,\n    144489.32127631325,\n    144515.31733093705,\n    144541.31455468474,\n    144567.3129474512,\n    144593.3125091313,\n    144619.31323961995,\n    144645.31513881206,\n    144671.31820660262,\n    144697.32244288657,\n    144723.3278475589,\n    144749.33442051467,\n    144775.34216164888,\n    144801.35107085665,\n    144827.36114803303,\n    144853.37239307314,\n    144879.38480587213,\n    144905.39838632516,\n    144931.41313432742,\n    144957.4290497741,\n    144983.44613256046,\n    145009.46438258173,\n    145035.48379973322,\n    145061.5043839102,\n    145087.52613500805,\n    145113.54905292206,\n    145139.57313754765,\n    145165.59838878017,\n    145191.6248065151,\n    145217.65239064783,\n    145243.68114107384,\n    145269.71105768863,\n    145295.74214038774,\n    145321.77438906668,\n    145347.807803621,\n    145373.8423839463,\n    145399.87812993818,\n    145425.9150414923,\n    145451.95311850426,\n    145477.9923608698,\n    145504.03276848458,\n    145530.07434124436,\n    145556.11707904484,\n    145582.1609817818,\n    145608.20604935108,\n    145634.25228164849,\n    145660.2996785698,\n    145686.34824001096,\n    145712.39796586783,\n    145738.4488560363,\n    145764.50091041232,\n    145790.55412889185,\n    145816.60851137087,\n    145842.66405774537,\n    145868.7207679114,\n    145894.778641765,\n    145920.83767920226,\n    145946.89788011924,\n    145972.95924441208,\n    145999.02177197693,\n    146025.08546270995,\n    146051.15031650732,\n    146077.21633326527,\n    146103.28351288004,\n    146129.3518552479,\n    146155.42136026506,\n    146181.49202782792,\n    146207.56385783272,\n    146233.63685017588,\n    146259.71100475377,\n    146285.78632146274,\n    146311.86280019928,\n    146337.94044085976,\n    146364.0192433407,\n    146390.09920753856,\n    146416.18033334985,\n    146442.26262067116,\n    146468.34606939898,\n    146494.43067942993,\n    146520.51645066062,\n    146546.60338298764,\n    146572.6914763077,\n    146598.7807305174,\n    146624.87114551352,\n    146650.96272119274,\n    146677.0554574518,\n    146703.14935418745,\n    146729.2444112965,\n    146755.34062867577,\n    146781.43800622207,\n    146807.53654383228,\n    146833.6362414033,\n    146859.73709883197,\n    146885.83911601527,\n    146911.94229285014,\n    146938.04662923355,\n    146964.15212506248,\n    146990.25878023397,\n    147016.36659464505,\n    147042.4755681928,\n    147068.58570077427,\n    147094.6969922866,\n    147120.80944262692,\n    147146.92305169237,\n    147173.03781938017,\n    147199.15374558745,\n    147225.2708302115,\n    147251.38907314953,\n    147277.5084742988,\n    147303.62903355664,\n    147329.75075082036,\n    147355.87362598727,\n    147381.99765895473,\n    147408.12284962015,\n    147434.2491978809,\n    147460.37670363448,\n    147486.50536677826,\n    147512.63518720976,\n    147538.76616482646,\n    147564.89829952587,\n    147591.03159120557,\n    147617.16603976308,\n    147643.301645096,\n    147669.43840710196,\n    147695.5763256786,\n    147721.71540072354,\n    147747.85563213445,\n    147773.9970198091,\n    147800.13956364512,\n    147826.28326354033,\n    147852.42811939248,\n    147878.57413109933,\n    147904.72129855872,\n    147930.8696216685,\n    147957.01910032652,\n    147983.16973443062,\n    148009.32152387875,\n    148035.47446856883,\n    148061.62856839882,\n    148087.78382326665,\n    148113.94023307035,\n    148140.09779770792,\n    148166.2565170774,\n    148192.41639107687,\n    148218.57741960438,\n    148244.73960255808,\n    148270.90293983606,\n    148297.0674313365,\n    148323.23307695755,\n    148349.39987659742,\n    148375.56783015432,\n    148401.73693752653,\n    148427.90719861226,\n    148454.07861330983,\n    148480.25118151752,\n    148506.42490313368,\n    148532.59977805667,\n    148558.77580618486,\n    148584.95298741665,\n    148611.13132165046,\n    148637.3108087847,\n    148663.4914487179,\n    148689.6732413485,\n    148715.85618657502,\n    148742.040284296,\n    148768.22553440998,\n    148794.41193681557,\n    148820.59949141133,\n    148846.7881980959,\n    148872.97805676793,\n    148899.16906732606,\n    148925.361229669,\n    148951.55454369547,\n    148977.74900930419,\n    149003.9446263939,\n    149030.14139486343,\n    149056.3393146115,\n    149082.538385537,\n    149108.73860753875,\n    149134.9399805156,\n    149161.14250436646,\n    149187.34617899026,\n    149213.5510042859,\n    149239.75698015234,\n    149265.96410648854,\n    149292.17238319354,\n    149318.38181016635,\n    149344.59238730598,\n    149370.80411451156,\n    149397.01699168212,\n    149423.2310187168,\n    149449.4461955147,\n    149475.66252197503,\n    149501.87999799693,\n    149528.0986234796,\n    149554.31839832227,\n    149580.53932242419,\n    149606.7613956846,\n    149632.98461800278,\n    149659.2089892781,\n    149685.43450940982,\n    149711.66117829733,\n    149737.88899584,\n    149764.11796193724,\n    149790.34807648844,\n    149816.5793393931,\n    149842.8117505506,\n    149869.0453098605,\n    149895.28001722222,\n    149921.51587253538,\n    149947.75287569952,\n    149973.99102661415,\n    150000.2303251789,\n    150026.47077129342,\n    150052.71236485732,\n    150078.95510577026,\n    150105.1989939319,\n    150131.444029242,\n    150157.69021160025,\n    150183.9375409064,\n    150210.18601706024,\n    150236.43563996154,\n    150262.68640951012,\n    150288.93832560582,\n    150315.19138814852,\n    150341.44559703805,\n    150367.70095217437,\n    150393.95745345735,\n    150420.215100787,\n    150446.4738940632,\n    150472.733833186,\n    150498.99491805542,\n    150525.25714857146,\n    150551.5205246342,\n    150577.7850461437,\n    150604.05071300003,\n    150630.31752510337,\n    150656.58548235384,\n    150682.8545846516,\n    150709.1248318968,\n    150735.39622398972,\n    150761.66876083054,\n    150787.9424423195,\n    150814.2172683569,\n    150840.49323884305,\n    150866.7703536782,\n    150893.04861276277,\n    150919.32801599705,\n    150945.60856328148,\n    150971.89025451642,\n    150998.1730896023,\n    151024.45706843957,\n    151050.74219092872,\n    151077.0284569702,\n    151103.31586646455,\n    151129.6044193123,\n    151155.894115414,\n    151182.1849546702,\n    151208.47693698155,\n    151234.77006224863,\n    151261.0643303721,\n    151287.35974125259,\n    151313.65629479082,\n    151339.95399088747,\n    151366.25282944329,\n    151392.55281035902,\n    151418.85393353543,\n    151445.1561988733,\n    151471.45960627345,\n    151497.76415563675,\n    151524.06984686397,\n    151550.3766798561,\n    151576.68465451393,\n    151602.99377073845,\n    151629.30402843058,\n    151655.61542749128,\n    151681.92796782157,\n    151708.24164932242,\n    151734.55647189484,\n    151760.87243543993,\n    151787.18953985872,\n    151813.50778505235,\n    151839.82717092187,\n    151866.14769736846,\n    151892.46936429327,\n    151918.79217159748,\n    151945.1161191823,\n    151971.4412069489,\n    151997.76743479856,\n    152024.09480263255,\n    152050.42331035214,\n    152076.75295785864,\n    152103.0837450534,\n    152129.41567183775,\n    152155.74873811303,\n    152182.08294378067,\n    152208.41828874208,\n    152234.7547728987,\n    152261.09239615197,\n    152287.43115840337,\n    152313.7710595544,\n    152340.11209950657,\n    152366.45427816146,\n    152392.79759542056,\n    152419.14205118554,\n    152445.48764535793,\n    152471.8343778394,\n    152498.1822485316,\n    152524.53125733617,\n    152550.88140415482,\n    152577.23268888926,\n    152603.5851114412,\n    152629.9386717124,\n    152656.29336960468,\n    152682.64920501978,\n    152709.00617785956,\n    152735.36428802583,\n    152761.72353542043,\n    152788.0839199453,\n    152814.4454415023,\n    152840.80809999333,\n    152867.1718953204,\n    152893.53682738543,\n    152919.9028960904,\n    152946.27010133737,\n    152972.63844302832,\n    152999.0079210653,\n    153025.3785353504,\n    153051.7502857857,\n    153078.12317227334,\n    153104.4971947154,\n    153130.8723530141,\n    153157.24864707157,\n    153183.62607679,\n    153210.00464207167,\n    153236.38434281875,\n    153262.76517893354,\n    153289.1471503183,\n    153315.53025687535,\n    153341.914498507,\n    153368.29987511563,\n    153394.68638660354,\n    153421.07403287315,\n    153447.4628138269,\n    153473.85272936718,\n    153500.24377939643,\n    153526.63596381716,\n    153553.02928253182,\n    153579.42373544298,\n    153605.81932245308,\n    153632.21604346478,\n    153658.61389838057,\n    153685.0128871031,\n    153711.41300953497,\n    153737.8142655788,\n    153764.21665513728,\n    153790.62017811305,\n    153817.02483440886,\n    153843.4306239274,\n    153869.8375465714,\n    153896.24560224364,\n    153922.65479084692,\n    153949.06511228404,\n    153975.4765664578,\n    154001.88915327107,\n    154028.3028726267,\n    154054.7177244276,\n    154081.13370857667,\n    154107.55082497682,\n    154133.969073531,\n    154160.38845414226,\n    154186.8089667135,\n    154213.23061114774,\n    154239.65338734805,\n    154266.07729521746,\n    154292.50233465908,\n    154318.92850557598,\n    154345.35580787127,\n    154371.7842414481,\n    154398.21380620962,\n    154424.64450205903,\n    154451.0763288995,\n    154477.50928663427,\n    154503.9433751666,\n    154530.3785943997,\n    154556.8149442369,\n    154583.25242458144,\n    154609.69103533673,\n    154636.13077640603,\n    154662.5716476928,\n    154689.01364910032,\n    154715.45678053208,\n    154741.90104189145,\n    154768.34643308193,\n    154794.79295400696,\n    154821.24060457002,\n    154847.68938467462,\n    154874.13929422433,\n    154900.59033312264,\n    154927.04250127316,\n    154953.49579857948,\n    154979.9502249452,\n    155006.40578027396,\n    155032.86246446942,\n    155059.32027743524,\n    155085.77921907514,\n    155112.2392892928,\n    155138.70048799197,\n    155165.16281507642,\n    155191.6262704499,\n    155218.09085401625,\n    155244.55656567923,\n    155271.0234053427,\n    155297.4913729106,\n    155323.96046828668,\n    155350.4306913749,\n    155376.9020420792,\n    155403.37452030348,\n    155429.8481259517,\n    155456.3228589279,\n    155482.79871913602,\n    155509.2757064801,\n    155535.75382086422,\n    155562.2330621924,\n    155588.71343036872,\n    155615.1949252973,\n    155641.67754688227,\n    155668.1612950278,\n    155694.64616963797,\n    155721.13217061706,\n    155747.6192978692,\n    155774.1075512987,\n    155800.59693080973,\n    155827.0874363066,\n    155853.5790676936,\n    155880.07182487496,\n    155906.56570775513,\n    155933.06071623837,\n    155959.5568502291,\n    155986.05410963166,\n    156012.5524943505,\n    156039.05200429005,\n    156065.55263935472,\n    156092.054399449,\n    156118.5572844774,\n    156145.06129434443,\n    156171.5664289546,\n    156198.07268821247,\n    156224.5800720226,\n    156251.0885802896,\n    156277.5982129181,\n    156304.10896981266,\n    156330.620850878,\n    156357.1338560188,\n    156383.6479851397,\n    156410.16323814544,\n    156436.67961494075,\n    156463.1971154304,\n    156489.71573951913,\n    156516.2354871118,\n    156542.7563581131,\n    156569.278352428,\n    156595.80146996127,\n    156622.32571061782,\n    156648.85107430254,\n    156675.37756092031,\n    156701.90517037612,\n    156728.4339025749,\n    156754.96375742165,\n    156781.4947348213,\n    156808.0268346789,\n    156834.5600568995,\n    156861.09440138817,\n    156887.62986804993,\n    156914.16645678994,\n    156940.70416751326,\n    156967.24300012505,\n    156993.78295453047,\n    157020.32403063469,\n    157046.8662283429,\n    157073.40954756032,\n    157099.9539881922,\n    157126.49955014378,\n    157153.04623332032,\n    157179.59403762716,\n    157206.14296296958,\n    157232.69300925292,\n    157259.24417638258,\n    157285.79646426387,\n    157312.3498728022,\n    157338.90440190304,\n    157365.46005147175,\n    157392.01682141385,\n    157418.57471163478,\n    157445.13372204005,\n    157471.69385253516,\n    157498.25510302564,\n    157524.81747341706,\n    157551.38096361503,\n    157577.9455735251,\n    157604.51130305286,\n    157631.07815210402,\n    157657.64612058416,\n    157684.21520839902,\n    157710.78541545427,\n    157737.3567416556,\n    157763.92918690876,\n    157790.50275111952,\n    157817.07743419363,\n    157843.65323603692,\n    157870.23015655516,\n    157896.80819565422,\n    157923.3873532399,\n    157949.96762921812,\n    157976.5490234948,\n    158003.13153597576,\n    158029.715166567,\n    158056.2999151745,\n    158082.88578170416,\n    158109.47276606198,\n    158136.06086815405,\n    158162.6500878863,\n    158189.24042516484,\n    158215.83187989573,\n    158242.42445198505,\n    158269.01814133892,\n    158295.61294786347,\n    158322.20887146486,\n    158348.80591204923,\n    158375.4040695228,\n    158402.00334379176,\n    158428.60373476235,\n    158455.2052423408,\n    158481.80786643337,\n    158508.4116069464,\n    158535.01646378616,\n    158561.62243685898,\n    158588.2295260712,\n    158614.8377313292,\n    158641.44705253936,\n    158668.05748960807,\n    158694.6690424418,\n    158721.28171094693,\n    158747.89549502998,\n    158774.5103945974,\n    158801.12640955573,\n    158827.74353981143,\n    158854.36178527112,\n    158880.9811458413,\n    158907.60162142856,\n    158934.22321193956,\n    158960.84591728085,\n    158987.4697373591,\n    159014.09467208097,\n    159040.72072135314,\n    159067.3478850823,\n    159093.9761631752,\n    159120.60555553852,\n    159147.23606207906,\n    159173.8676827036,\n    159200.5004173189,\n    159227.13426583182,\n    159253.76922814918,\n    159280.4053041778,\n    159307.0424938246,\n    159333.6807969965,\n    159360.32021360032,\n    159386.96074354305,\n    159413.60238673165,\n    159440.2451430731,\n    159466.88901247433,\n    159493.53399484244,\n    159520.18009008438,\n    159546.8272981072,\n    159573.47561881805,\n    159600.12505212397,\n    159626.77559793205,\n    159653.4272561494,\n    159680.08002668325,\n    159706.7339094407,\n    159733.38890432892,\n    159760.04501125516,\n    159786.70223012666,\n    159813.3605608506,\n    159840.02000333427,\n    159866.68055748497,\n    159893.34222320997,\n    159920.00500041663,\n    159946.66888901225,\n    159973.33388890422,\n    159999.99999999988,\n    160026.66722220668,\n    160053.33555543202,\n    160080.0049995833,\n    160106.675554568,\n    160133.3472202936,\n    160160.0199966676,\n    160186.6938835975,\n    160213.36888099083,\n    160240.04498875517,\n    160266.72220679803,\n    160293.4005350271,\n    160320.07997334987,\n    160346.76052167406,\n    160373.4421799073,\n    160400.1249479572,\n    160426.8088257315,\n    160453.49381313793,\n    160480.17991008417,\n    160506.86711647795,\n    160533.5554322271,\n    160560.24485723933,\n    160586.93539142248,\n    160613.62703468435,\n    160640.31978693279,\n    160667.0136480757,\n    160693.70861802087,\n    160720.40469667627,\n    160747.1018839498,\n    160773.80017974938,\n    160800.49958398298,\n    160827.20009655855,\n    160853.9017173841,\n    160880.60444636765,\n    160907.30828341722,\n    160934.0132284409,\n    160960.71928134665,\n    160987.4264420427,\n    161014.13471043704,\n    161040.84408643784,\n    161067.55456995327,\n    161094.26616089148,\n    161120.97885916062,\n    161147.69266466892,\n    161174.40757732463,\n    161201.12359703594,\n    161227.84072371112,\n    161254.55895725847,\n    161281.27829758628,\n    161307.99874460287,\n    161334.72029821656,\n    161361.4429583357,\n    161388.1667248687,\n    161414.8915977239,\n    161441.61757680977,\n    161468.34466203468,\n    161495.07285330712,\n    161521.80215053557,\n    161548.53255362847,\n    161575.26406249436,\n    161601.99667704175,\n    161628.7303971792,\n    161655.46522281526,\n    161682.2011538585,\n    161708.93819021754,\n    161735.676331801,\n    161762.4155785175,\n    161789.1559302757,\n    161815.89738698432,\n    161842.639948552,\n    161869.38361488748,\n    161896.1283858995,\n    161922.87426149676,\n    161949.62124158812,\n    161976.3693260823,\n    162003.1185148881,\n    162029.8688079144,\n    162056.62020507,\n    162083.37270626382,\n    162110.1263114047,\n    162136.88102040152,\n    162163.63683316324,\n    162190.3937495988,\n    162217.1517696171,\n    162243.91089312723,\n    162270.67112003808,\n    162297.43245025873,\n    162324.1948836982,\n    162350.9584202655,\n    162377.72305986975,\n    162404.48880242003,\n    162431.25564782543,\n    162458.0235959951,\n    162484.79264683815,\n    162511.56280026378,\n    162538.33405618116,\n    162565.1064144995,\n    162591.879875128,\n    162618.65443797593,\n    162645.43010295252,\n    162672.20686996708,\n    162698.98473892888,\n    162725.76370974723,\n    162752.54378233146,\n    162779.32495659095,\n    162806.10723243505,\n    162832.89060977317,\n    162859.67508851466,\n    162886.46066856902,\n    162913.24734984562,\n    162940.035132254,\n    162966.82401570358,\n    162993.6140001039,\n    163020.40508536444,\n    163047.19727139478,\n    163073.99055810447,\n    163100.78494540305,\n    163127.58043320014,\n    163154.37702140535,\n    163181.1747099283,\n    163207.97349867865,\n    163234.77338756606,\n    163261.57437650024,\n    163288.37646539084,\n    163315.17965414765,\n    163341.98394268038,\n    163368.78933089875,\n    163395.5958187126,\n    163422.40340603172,\n    163449.2120927659,\n    163476.02187882498,\n    163502.83276411882,\n    163529.6447485573,\n    163556.45783205028,\n    163583.2720145077,\n    163610.08729583945,\n    163636.90367595552,\n    163663.72115476584,\n    163690.53973218042,\n    163717.35940810922,\n    163744.18018246227,\n    163771.00205514964,\n    163797.82502608138,\n    163824.64909516752,\n    163851.4742623182,\n    163878.3005274435,\n    163905.12789045356,\n    163931.95635125853,\n    163958.78590976857,\n    163985.61656589387,\n    164012.44831954464,\n    164039.2811706311,\n    164066.11511906344,\n    164092.950164752,\n    164119.786307607,\n    164146.62354753874,\n    164173.46188445756,\n    164200.30131827376,\n    164227.1418488977,\n    164253.98347623978,\n    164280.82620021031,\n    164307.6700207198,\n    164334.51493767856,\n    164361.3609509971,\n    164388.20806058586,\n    164415.05626635533,\n    164441.905568216,\n    164468.75596607837,\n    164495.607459853,\n    164522.4600494504,\n    164549.31373478117,\n    164576.1685157559,\n    164603.02439228518,\n    164629.88136427966,\n    164656.7394316499,\n    164683.59859430668,\n    164710.4588521606,\n    164737.32020512238,\n    164764.18265310273,\n    164791.04619601235,\n    164817.91083376206,\n    164844.77656626256,\n    164871.6433934247,\n    164898.51131515924,\n    164925.38033137703,\n    164952.25044198887,\n    164979.1216469057,\n    165005.9939460383,\n    165032.86733929766,\n    165059.7418265946,\n    165086.61740784015\n]);\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/iqt.js","/**\n * The MSMask indicates, if MS is applied to a specific ICStream.\n * @author in-somnia\n */\n\nmodule.exports = class MSMask\n{\n    static get TYPE_ALL_0() { return 0; };\n    static get TYPE_USED() { return 1; }\n    static get TYPE_ALL_1() { return 2; }\n    static get TYPE_RESERVED() { return 3; }\n\n    static forInt(int) {\n        switch (int) {\n            case MSMask.TYPE_ALL_0:\n            case MSMask.TYPE_USED:\n            case MSMask.TYPE_ALL_1:\n            case MSMask.TYPE_RESERVED:\n                return int;\n            default:\n                throw \"unknown MS mask type\";\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/msmask.js","const Element = require('./element');\n\nconst CPE = require('./cpe');\nconst SCE_LFE = require('./sce_lfe');\n\nconst TYPE_FILL             = 0;\nconst TYPE_FILL_DATA        = 1;\nconst TYPE_EXT_DATA_ELEMENT = 2;\nconst TYPE_DYNAMIC_RANGE    = 11;\nconst TYPE_SBR_DATA         = 13;\nconst TYPE_SBR_DATA_CRC     = 14;\n\nmodule.exports = class FIL extends Element\n{\n    constructor(downSampledSBR) {\n        super();\n\n        this.downSampledSBR = downSampledSBR;\n    }\n\n    decode(bitStream, prev, sf, sbrEnabled, smallFrames)\n    {\n        let count = bitStream.readBits(4);\n        if(count === 15)\n            count += bitStream.readBits(8) - 1;\n        count *= 8; //convert to bits\n\n        const cpy = count;\n        const pos = bitStream.bitPosition;\n\n        while(count > 0) {\n            count = this.decodeExtensionPayload(bitStream, count, prev, sf, sbrEnabled, smallFrames);\n        }\n\n        const pos2 = bitStream.bitPosition - pos;\n        const bitsLeft = cpy - pos2;\n\n        if (bitsLeft > 0)\n            bitStream.skipBits(pos2);\n        else if(bitsLeft < 0)\n            throw \"FIL element overread: \" + bitsLeft;\n    }\n\n    decodeExtensionPayload(bitStream, count, prev, sf, sbrEnabled, smallFrames)\n    {\n        const type = bitStream.readBits(4);\n\n        let ret = count - 4;\n\n        switch(type) {\n            case TYPE_DYNAMIC_RANGE:\n                ret = this.decodeDynamicRangeInfo(bitStream, ret);\n                break;\n\n            case TYPE_SBR_DATA:\n            case TYPE_SBR_DATA_CRC:\n                if(sbrEnabled) {\n                    if(prev instanceof SCE_LFE || prev instanceof CPE) {\n                        prev.decodeSBR(bitStream, sf, ret, (prev instanceof CPE), (type===TYPE_SBR_DATA_CRC), downSampledSBR, smallFrames);\n                        ret = 0;\n                        break;\n                    }\n                    else throw \"SBR applied on unexpected element\";\n                }\n                else {\n                    bitStream.skipBits(ret);\n                    ret = 0;\n                }\n            // fallthrough\n            case TYPE_FILL:\n            case TYPE_FILL_DATA:\n            case TYPE_EXT_DATA_ELEMENT:\n            default:\n                bitStream.skipBits(ret);\n                ret = 0;\n                break;\n        }\n\n        return ret;\n    }\n\n    decodeDynamicRangeInfo() {\n        throw 'not implemented';\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/elements/fil.js","const HCB = require('../huffman/hcb');\n\nmodule.exports = class IS {\n    static process(cpe, specL, specR) {\n        const ics = cpe.getRightChannel();\n\n        const info = ics.getInfo();\n\n        const offsets = info.getSWBOffsets();\n\n        const windowGroups = info.getWindowGroupCount();\n\n        const maxSFB = info.getMaxSFB();\n\n        const sfbCB = ics.getSfbCB();\n\n        const sectEnd = ics.getSectEnd();\n\n        const scaleFactors = ics.getScaleFactors();\n\n        let w, i, j, c, end, off;\n        let idx = 0, groupOff = 0;\n        let scale;\n\n        for (let g = 0; g < windowGroups; g++) {\n            for (i = 0; i < maxSFB;) {\n                if(HCB.INTENSITY_HCB === sfbCB[idx] || HCB.INTENSITY_HCB2 === sfbCB[idx]) {\n                    end = sectEnd[idx];\n                    for(; i < end; i++, idx++) {\n                        c = HCB.INTENSITY_HCB === sfbCB[idx] ? 1 : -1;\n\n                        if(cpe.isMSMaskPresent())\n                            c *= cpe.isMSUsed(idx) ? -1 : 1;\n\n                        scale = c * scaleFactors[idx];\n\n                        for(w = 0; w < info.getWindowGroupLength(g); w++) {\n                            off = groupOff + w * 128 + offsets[i];\n                            for(j = 0; j < offsets[i + 1] - offsets[i]; j++) {\n                                specR[off + j] = specL[off + j] * scale;\n                            }\n                        }\n                    }\n                }\n                else {\n                    end = sectEnd[idx];\n                    idx += end-i;\n                    i = end;\n                }\n            }\n            groupOff += info.getWindowGroupLength(g) * 128;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/is.js","const HCB = require('../huffman/hcb');\n\nmodule.exports = class MS\n{\n    static process(cpe, specL, specR) {\n        const ics = cpe.getLeftChannel();\n\n        const info = ics.getInfo();\n\n        const offsets = info.getSWBOffsets();\n\n        const windowGroups = info.getWindowGroupCount();\n\n        const maxSFB = info.getMaxSFB();\n\n        const sfbCBl = ics.getSfbCB();\n\n        const sfbCBr = cpe.getRightChannel().getSfbCB();\n\n        let groupOff = 0, g, i, w, j, idx = 0;\n\n        for(g = 0; g < windowGroups; g++) {\n            for(i = 0; i < maxSFB; i++, idx++) {\n                if(cpe.isMSUsed(idx) && sfbCBl[idx] < HCB.NOISE_HCB && sfbCBr[idx] < HCB.NOISE_HCB) {\n                    for(w = 0; w < info.getWindowGroupLength(g); w++) {\n                        const off = groupOff + w * 128 + offsets[i];\n                        for(j = 0; j < offsets[i + 1] - offsets[i]; j++) {\n                            let t = specL[off + j] - specR[off + j];\n                            specL[off + j] += specR[off + j];\n                            specR[off + j] = t;\n                        }\n                    }\n                }\n            }\n            groupOff += info.getWindowGroupLength(g) * 128;\n        }\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/tools/ms.js","const Windows = require('./windows');\nconst Constants = require('../constants');\nconst MDCT = require('./mdct');\n\n// todo: extract to enum\nconst ONLY_LONG_SEQUENCE = 0;\nconst LONG_START_SEQUENCE = 1;\nconst EIGHT_SHORT_SEQUENCE = 2;\nconst LONG_STOP_SEQUENCE = 3;\n\nmodule.exports = class FilterBank {\n    constructor(smallFrames, channels) {\n        if (smallFrames) {\n            throw 'not implemented';\n        }\n        else {\n            this.length = Constants.WINDOW_LEN_LONG;\n            this.shortLen = Constants.WINDOW_LEN_SHORT;\n            this.LONG_WINDOWS = [Windows.SINE_1024, Windows.KBD_1024];\n            this.SHORT_WINDOWS = [Windows.SINE_128, Windows.KBD_128];\n        }\n\n        this.mid = (this.length - this.shortLen) / 2;\n        this.trans = this.shortLen / 2;\n\n        this.mdctShort = new MDCT(this.shortLen * 2);\n        this.mdctLong = new MDCT(this.length * 2);\n\n        // private final float[][] overlaps = new float[channels][length];\n        this.overlaps = new Float32Array(channels * this.length);\n\n        // private final float[] buf = new float[2*length];\n        this.buf = new Float32Array(2 * this.length);\n    }\n\n    process(windowSequence, windowShape, windowShapePrev, inp, out, channel) {\n        let i;\n\n        const mdctLong = this.mdctLong, mdctShort = this.mdctShort;\n        const buf = this.buf, overlap = this.overlaps;\n        const shortLen = this.shortLen, length = this.length;\n        const mid = this.mid, trans = this.trans;\n        const LONG_WINDOWS = this.LONG_WINDOWS, SHORT_WINDOWS = this.SHORT_WINDOWS;\n\n        switch (windowSequence) {\n            case ONLY_LONG_SEQUENCE:\n\n                mdctLong.process(inp, 0, buf, 0);\n\n                //add second half output of previous frame to windowed output of current frame\n                for (i = 0; i < length; i++) {\n                    out[i] = overlap[channel * length + i] + (buf[i] * LONG_WINDOWS[windowShapePrev][i]);\n                }\n\n                //window the second half and save as overlap for next frame\n                for (i = 0; i < length; i++) {\n                    overlap[channel * length + i] = buf[length + i] * LONG_WINDOWS[windowShape][length - 1 - i];\n                }\n\n                break;\n\n            case LONG_START_SEQUENCE:\n\n                mdctLong.process(inp, 0, buf, 0);\n\n                //add second half output of previous frame to windowed output of current frame\n                for (i = 0; i < length; i++) {\n                    out[i] = overlap[channel * length + i] + (buf[i] * LONG_WINDOWS[windowShapePrev][i]);\n                }\n\n                //window the second half and save as overlap for next frame\n                for (i = 0; i < mid; i++) {\n                    overlap[channel * length + i] = buf[length + i];\n                }\n\n                for (i = 0; i < shortLen; i++) {\n                    overlap[channel * length + mid + i] = buf[length + mid + i] * SHORT_WINDOWS[windowShape][shortLen - i - 1];\n                }\n\n                for (i = 0; i < mid; i++) {\n                    overlap[channel * length + mid + shortLen + i] = 0;\n                }\n\n                break;\n\n            case EIGHT_SHORT_SEQUENCE:\n\n                for (i = 0; i < 8; i++) {\n                    mdctShort.process(inp, i * shortLen, buf, 2 * i * shortLen);\n                }\n\n                //add second half output of previous frame to windowed output of current frame\n                for (i = 0; i < mid; i++) {\n                    out[i] = overlap[channel * length + i];\n                }\n\n                for (i = 0; i < shortLen; i++) {\n                    out[mid + i] =\n                        overlap[channel * length + mid + i] +\n                        (buf[i] * SHORT_WINDOWS[windowShapePrev][i]);\n\n                    out[mid + 1 * shortLen + i] =\n                        overlap[channel * length + mid + shortLen * 1 + i] +\n                        (buf[shortLen * 1 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 2 + i] * SHORT_WINDOWS[windowShape][i]);\n                    out[mid + 2 * shortLen + i] =\n                        overlap[channel * length + mid + shortLen * 2 + i] +\n                        (buf[shortLen * 3 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 4 + i] * SHORT_WINDOWS[windowShape][i]);\n                    out[mid + 3 * shortLen + i] =\n                        overlap[channel * length + mid + shortLen * 3 + i] +\n                        (buf[shortLen * 5 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 6 + i] * SHORT_WINDOWS[windowShape][i]);\n                    if (i < trans)\n                        out[mid + 4 * shortLen + i] =\n                            overlap[channel * length + mid + shortLen * 4 + i] +\n                            (buf[shortLen * 7 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                            (buf[shortLen * 8 + i] * SHORT_WINDOWS[windowShape][i]);\n                }\n\n                //window the second half and save as overlap for next frame\n                for (i = 0; i < shortLen; i++) {\n                    if (i >= trans)\n                        overlap[channel * length + mid + 4 * shortLen + i - length] =\n                            (buf[shortLen * 7 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                            (buf[shortLen * 8 + i] * SHORT_WINDOWS[windowShape][i]);\n                    overlap[channel * length + mid + 5 * shortLen + i - length] =\n                        (buf[shortLen * 9 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 10 + i] * SHORT_WINDOWS[windowShape][i]);\n                    overlap[channel * length + mid + 6 * shortLen + i - length] =\n                        (buf[shortLen * 11 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 12 + i] * SHORT_WINDOWS[windowShape][i]);\n                    overlap[channel * length + mid + 7 * shortLen + i - length] =\n                        (buf[shortLen * 13 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]) +\n                        (buf[shortLen * 14 + i] * SHORT_WINDOWS[windowShape][i]);\n                    overlap[channel * length + mid + 8 * shortLen + i - length] =\n                        (buf[shortLen * 15 + i] * SHORT_WINDOWS[windowShape][shortLen - 1 - i]);\n                }\n\n                for (i = 0; i < mid; i++) {\n                    overlap[channel * length + mid + shortLen + i] = 0;\n                }\n\n                break;\n\n            case LONG_STOP_SEQUENCE:\n                mdctLong.process(inp, 0, buf, 0);\n\n                //add second half output of previous frame to windowed output of current frame\n                //construct first half window using padding with 1's and 0's\n                for (i = 0; i < mid; i++) {\n                    out[i] = overlap[channel * length + i];\n                }\n                for (i = 0; i < shortLen; i++) {\n                    out[mid + i] = overlap[channel * length + mid + i] + (buf[mid + i] * SHORT_WINDOWS[windowShapePrev][i]);\n                }\n                for (i = 0; i < mid; i++) {\n                    out[mid + shortLen + i] = overlap[channel * length + mid + shortLen + i] + buf[mid + shortLen + i];\n                }\n\n                //window the second half and save as overlap for next frame\n                for (i = 0; i < length; i++) {\n                    overlap[channel * length + i] = buf[length + i] * LONG_WINDOWS[windowShape][length - 1 - i];\n                }\n\n                break;\n        }\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/index.js","class Windows {\n    static generateSineWindow(len) {\n        const d = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            d[i] = Math.sin((i + 0.5) * (Math.PI / (2.0 * len)))\n        }\n        return d;\n    }\n\n    static generateKBDWindow(alpha, len) {\n        const PIN   = Math.PI / len,\n            out     = new Float32Array(len),\n            f       = new Float32Array(len),\n            alpha2  = (alpha * PIN) * (alpha * PIN);\n\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let tmp = n * (len - n) * alpha2,\n                bessel = 1;\n\n            for (let j = 50; j > 0; j--) {\n                bessel = bessel * tmp / (j * j) + 1;\n            }\n\n            sum += bessel;\n            f[n] = sum;\n        }\n\n        sum++;\n        for (let n = 0; n < len; n++) {\n            out[n] = Math.sqrt(f[n] / sum);\n        }\n\n        return out;\n    }\n\n    //static get SINE_120()  { return SINE_120; }\n    static get SINE_128()  { return SINE_128; }\n    //static get SINE_960()  { return SINE_960; }\n    static get SINE_1024() { return SINE_1024; }\n\n    //static get KBD_120()  { return KBD_120; }\n    static get KBD_128()  { return KBD_128; }\n    //static get KBD_960()  { return KBD_960; }\n    static get KBD_1024() { return KBD_1024; }\n}\n\n//const SINE_120  = Windows.generateSineWindow(120);\nconst SINE_128  = Windows.generateSineWindow(128);\n//const SINE_960  = Windows.generateSineWindow(960);\nconst SINE_1024 = Windows.generateSineWindow(1024);\n\n//const KBD_120  = Windows.generateKBDWindow(120);\nconst KBD_128  = Windows.generateKBDWindow(6, 128);\n//const KBD_960  = Windows.generateKBDWindow(960);\nconst KBD_1024 = Windows.generateKBDWindow(4, 1024);\n\nmodule.exports = Windows;\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/windows.js","const Tables = require('./mdct_tables');\nconst FFT = require('./fft');\n\nmodule.exports = class MDCT {\n    constructor(length) {\n        this.N = length;\n        this.N2 = length >> 1;\n        this.N4 = length >> 2;\n        this.N8 = length >> 3;\n\n        switch (length) {\n            case 2048:\n                this.sincos = Tables.MDCT_TABLE_2048;\n                break;\n            case 256:\n                this.sincos = Tables.MDCT_TABLE_256;\n                break;\n            case 1920:\n                this.sincos = Tables.MDCT_TABLE_1920;\n                break;\n            case 240:\n                this.sincos = Tables.MDCT_TABLE_240;\n                break; // fixme: break needed?\n            default:\n                throw \"unsupported MDCT length: \" + length;\n        }\n\n        this.fft = new FFT(this.N4);\n\n        // private final float[][] buf = new float[N4][2];\n        this.buf = (new Float32Array(this.N4 * 2));\n    }\n\n    process(inp, inOff, out, outOff) {\n        // if (this.processed) throw 'processed'; this.processed = true;\n        let k, tmp0, tmp1;\n\n        const N2 = this.N2, N4 = this.N4, N8 = this.N8, buf = this.buf, sincos = this.sincos;\n\n        //pre-IFFT complex multiplication\n        for (k = 0; k < N4; k++) {\n            buf[2 * k + 1] = (inp[inOff + 2 * k] * sincos[k][0]) + (inp[inOff + N2 - 1 - 2 * k] * sincos[k][1]);\n            buf[2 * k + 0] = (inp[inOff + N2 - 1 - 2 * k] * sincos[k][0]) - (inp[inOff + 2 * k] * sincos[k][1]);\n        }\n\n        //complex IFFT, non-scaling\n        this.fft.process(buf, false);\n\n        //post-IFFT complex multiplication\n        for (k = 0; k < N4; k++) {\n            tmp0 = buf[2 * k + 0];\n            tmp1 = buf[2 * k + 1];\n            buf[2 * k + 1] = (tmp1 * sincos[k][0]) + (tmp0 * sincos[k][1]);\n            buf[2 * k + 0] = (tmp0 * sincos[k][0]) - (tmp1 * sincos[k][1]);\n        }\n\n        //reordering\n        for (k = 0; k < N8; k += 2) {\n            out[outOff + 2 * k] = buf[2 * (N8 + k) + 1];\n            out[outOff + 2 + 2 * k] = buf[2 * (N8 + 1 + k) + 1];\n\n            out[outOff + 1 + 2 * k] = -buf[2 * (N8 - 1 - k) + 0];\n            out[outOff + 3 + 2 * k] = -buf[2 * (N8 - 2 - k) + 0];\n\n            out[outOff + N4 + 2 * k] = buf[2 * k + 0];\n            out[outOff + N4 + 2 + 2 * k] = buf[2 * (1 + k)+0];\n\n            out[outOff + N4 + 1 + 2 * k] = -buf[2 * (N4 - 1 - k) + 1];\n            out[outOff + N4 + 3 + 2 * k] = -buf[2 * (N4 - 2 - k) + 1];\n\n            out[outOff + N2 + 2 * k] = buf[2 * (N8 + k) + 0];\n            out[outOff + N2 + 2 + 2 * k] = buf[2 * (N8 + 1 + k) + 0];\n\n            out[outOff + N2 + 1 + 2 * k] = -buf[2 * (N8 - 1 - k) + 1];\n            out[outOff + N2 + 3 + 2 * k] = -buf[2 * (N8 - 2 - k) + 1];\n\n            out[outOff + N2 + N4 + 2 * k] = -buf[2 * k + 1];\n            out[outOff + N2 + N4 + 2 + 2 * k] = -buf[2 * (1 + k) + 1];\n\n            out[outOff + N2 + N4 + 1 + 2 * k] = buf[2 * (N4 - 1 - k) + 0];\n            out[outOff + N2 + N4 + 3 + 2 * k] = buf[2 * (N4 - 2 - k) + 0];\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/mdct.js","module.exports = class MDCTTables\n{\n    static get MDCT_TABLE_256() {\n        return MDCT_TABLE_256;\n    }\n\n    static get MDCT_TABLE_240() {\n        return MDCT_TABLE_240;\n    }\n\n    static get MDCT_TABLE_2048() {\n        return MDCT_TABLE_2048;\n    }\n\n    static get MDCT_TABLE_1920() {\n        return MDCT_TABLE_1920;\n    }\n};\n\nconst MDCT_TABLE_256 = [\n    [0.088387931675923, 0.000271171628935],\n    [0.088354655998507, 0.002440238387037],\n    [0.088268158780110, 0.004607835236780],\n    [0.088128492123423, 0.006772656498875],\n    [0.087935740158418, 0.008933398165942],\n    [0.087690018991670, 0.011088758687994],\n    [0.087391476636423, 0.013237439756448],\n    [0.087040292923427, 0.015378147086172],\n    [0.086636679392621, 0.017509591195118],\n    [0.086180879165703, 0.019630488181053],\n    [0.085673166799686, 0.021739560494940],\n    [0.085113848121515, 0.023835537710479],\n    [0.084503260043847, 0.025917157289369],\n    [0.083841770362110, 0.027983165341813],\n    [0.083129777532952, 0.030032317381813],\n    [0.082367710434230, 0.032063379076803],\n    [0.081556028106671, 0.034075126991164],\n    [0.080695219477356, 0.036066349323177],\n    [0.079785803065216, 0.038035846634965],\n    [0.078828326668693, 0.039982432574992],\n    [0.077823367035766, 0.041904934592675],\n    [0.076771529516540, 0.043802194644686],\n    [0.075673447698606, 0.045673069892513],\n    [0.074529783025390, 0.047516433390863],\n    [0.073341224397728, 0.049331174766491],\n    [0.072108487758894, 0.051116200887052],\n    [0.070832315663343, 0.052870436519557],\n    [0.069513476829429, 0.054592824978055],\n    [0.068152765676348, 0.056282328760143],\n    [0.066751001845620, 0.057937930171918],\n    [0.065309029707361, 0.059558631940996],\n    [0.063827717851668, 0.061143457817234],\n    [0.062307958565413, 0.062691453160784],\n    [0.060750667294763, 0.064201685517134],\n    [0.059156782093749, 0.065673245178784],\n    [0.057527263059216, 0.067105245733220],\n    [0.055863091752499, 0.068496824596852],\n    [0.054165270608165, 0.069847143534609],\n    [0.052434822330188, 0.071155389164853],\n    [0.050672789275903, 0.072420773449336],\n    [0.048880232828135, 0.073642534167879],\n    [0.047058232755862, 0.074819935377512],\n    [0.045207886563797, 0.075952267855771],\n    [0.043330308831298, 0.077038849527912],\n    [0.041426630540984, 0.078079025877766],\n    [0.039497998397473, 0.079072170341994],\n    [0.037545574136653, 0.080017684687506],\n    [0.035570533825892, 0.080914999371817],\n    [0.033574067155622, 0.081763573886112],\n    [0.031557376722714, 0.082562897080836],\n    [0.029521677306074, 0.083312487473584],\n    [0.027468195134911, 0.084011893539132],\n    [0.025398167150101, 0.084660693981419],\n    [0.023312840259098, 0.085258497987320],\n    [0.021213470584847, 0.085804945462053],\n    [0.019101322709138, 0.086299707246093],\n    [0.016977668910873, 0.086742485313442],\n    [0.014843788399692, 0.087133012951149],\n    [0.012700966545425, 0.087471054919968],\n    [0.010550494103830, 0.087756407596056],\n    [0.008393666439096, 0.087988899093631],\n    [0.006231782743558, 0.088168389368510],\n    [0.004066145255116, 0.088294770302461],\n    [0.001898058472816, 0.088367965768336]\n];\n\nconst MDCT_TABLE_240 = [\n    [0.091286604111815, 0.000298735779793],\n    [0.091247502481454, 0.002688238127538],\n    [0.091145864370807, 0.005075898091152],\n    [0.090981759437558, 0.007460079287760],\n    [0.090755300151030, 0.009839147718664],\n    [0.090466641715108, 0.012211472889198],\n    [0.090115981961863, 0.014575428926191],\n    [0.089703561215976, 0.016929395692256],\n    [0.089229662130024, 0.019271759896156],\n    [0.088694609490769, 0.021600916198470],\n    [0.088098769996564, 0.023915268311810],\n    [0.087442552006035, 0.026213230094844],\n    [0.086726405258214, 0.028493226639351],\n    [0.085950820564309, 0.030753695349588],\n    [0.085116329471329, 0.032993087013213],\n    [0.084223503897785, 0.035209866863042],\n    [0.083272955741727, 0.037402515628894],\n    [0.082265336461381, 0.039569530578832],\n    [0.081201336628670, 0.041709426549053],\n    [0.080081685455930, 0.043820736961749],\n    [0.078907150296148, 0.045902014830227],\n    [0.077678536117054, 0.047951833750597],\n    [0.076396684949434, 0.049968788879362],\n    [0.075062475310050, 0.051951497896226],\n    [0.073676821599542, 0.053898601951466],\n    [0.072240673475749, 0.055808766597225],\n    [0.070755015202858, 0.057680682702068],\n    [0.069220864976840, 0.059513067348201],\n    [0.067639274227625, 0.061304664710718],\n    [0.066011326898512, 0.063054246918278],\n    [0.064338138703282, 0.064760614894630],\n    [0.062620856361546, 0.066422599180399],\n    [0.060860656812842, 0.068039060734572],\n    [0.059058746410016, 0.069608891715145],\n    [0.057216360092450, 0.071131016238378],\n    [0.055334760539699, 0.072604391116154],\n    [0.053415237306106, 0.074028006570930],\n    [0.051459105937014, 0.075400886927784],\n    [0.049467707067153, 0.076722091283096],\n    [0.047442405501835, 0.077990714149396],\n    [0.045384589281588, 0.079205886075941],\n    [0.043295668730857, 0.080366774244592],\n    [0.041177075491445, 0.081472583040586],\n    [0.039030261541332, 0.082522554597810],\n    [0.036856698199564, 0.083515969318206],\n    [0.034657875117883, 0.084452146364948],\n    [0.032435299259796, 0.085330444129049],\n    [0.030190493867775, 0.086150260669096],\n    [0.027924997419306, 0.086911034123781],\n    [0.025640362572491, 0.087612243096981],\n    [0.023338155101933, 0.088253407015092],\n    [0.021019952825636, 0.088834086456390],\n    [0.018687344523641, 0.089353883452193],\n    [0.016341928849164, 0.089812441759604],\n    [0.013985313232951, 0.090209447105664],\n    [0.011619112781631, 0.090544627402740],\n    [0.009244949170797, 0.090817752935000],\n    [0.006864449533597, 0.091028636515846],\n    [0.004479245345574, 0.091177133616206],\n    [0.002090971306534, 0.091263142463585]\n];\n\nconst MDCT_TABLE_2048 = [\n    [0.031249997702054, 0.000011984224612],\n    [0.031249813866531, 0.000107857810004],\n    [0.031249335895858, 0.000203730380198],\n    [0.031248563794535, 0.000299601032804],\n    [0.031247497569829, 0.000395468865451],\n    [0.031246137231775, 0.000491332975794],\n    [0.031244482793177, 0.000587192461525],\n    [0.031242534269608, 0.000683046420376],\n    [0.031240291679407, 0.000778893950134],\n    [0.031237755043684, 0.000874734148645],\n    [0.031234924386313, 0.000970566113826],\n    [0.031231799733938, 0.001066388943669],\n    [0.031228381115970, 0.001162201736253],\n    [0.031224668564585, 0.001258003589751],\n    [0.031220662114728, 0.001353793602441],\n    [0.031216361804108, 0.001449570872710],\n    [0.031211767673203, 0.001545334499065],\n    [0.031206879765253, 0.001641083580144],\n    [0.031201698126266, 0.001736817214719],\n    [0.031196222805014, 0.001832534501709],\n    [0.031190453853031, 0.001928234540186],\n    [0.031184391324617, 0.002023916429386],\n    [0.031178035276836, 0.002119579268713],\n    [0.031171385769513, 0.002215222157753],\n    [0.031164442865236, 0.002310844196278],\n    [0.031157206629353, 0.002406444484258],\n    [0.031149677129975, 0.002502022121865],\n    [0.031141854437973, 0.002597576209488],\n    [0.031133738626977, 0.002693105847734],\n    [0.031125329773375, 0.002788610137442],\n    [0.031116627956316, 0.002884088179689],\n    [0.031107633257703, 0.002979539075801],\n    [0.031098345762200, 0.003074961927355],\n    [0.031088765557222, 0.003170355836197],\n    [0.031078892732942, 0.003265719904442],\n    [0.031068727382288, 0.003361053234488],\n    [0.031058269600939, 0.003456354929021],\n    [0.031047519487329, 0.003551624091024],\n    [0.031036477142640, 0.003646859823790],\n    [0.031025142670809, 0.003742061230921],\n    [0.031013516178519, 0.003837227416347],\n    [0.031001597775203, 0.003932357484328],\n    [0.030989387573042, 0.004027450539462],\n    [0.030976885686963, 0.004122505686697],\n    [0.030964092234638, 0.004217522031340],\n    [0.030951007336485, 0.004312498679058],\n    [0.030937631115663, 0.004407434735897],\n    [0.030923963698074, 0.004502329308281],\n    [0.030910005212362, 0.004597181503027],\n    [0.030895755789908, 0.004691990427350],\n    [0.030881215564835, 0.004786755188872],\n    [0.030866384674000, 0.004881474895632],\n    [0.030851263256996, 0.004976148656090],\n    [0.030835851456154, 0.005070775579142],\n    [0.030820149416533, 0.005165354774124],\n    [0.030804157285929, 0.005259885350819],\n    [0.030787875214864, 0.005354366419469],\n    [0.030771303356593, 0.005448797090784],\n    [0.030754441867095, 0.005543176475946],\n    [0.030737290905077, 0.005637503686619],\n    [0.030719850631972, 0.005731777834961],\n    [0.030702121211932, 0.005825998033626],\n    [0.030684102811835, 0.005920163395780],\n    [0.030665795601276, 0.006014273035101],\n    [0.030647199752570, 0.006108326065793],\n    [0.030628315440748, 0.006202321602594],\n    [0.030609142843557, 0.006296258760782],\n    [0.030589682141455, 0.006390136656185],\n    [0.030569933517616, 0.006483954405188],\n    [0.030549897157919, 0.006577711124743],\n    [0.030529573250956, 0.006671405932375],\n    [0.030508961988022, 0.006765037946194],\n    [0.030488063563118, 0.006858606284900],\n    [0.030466878172949, 0.006952110067791],\n    [0.030445406016919, 0.007045548414774],\n    [0.030423647297133, 0.007138920446372],\n    [0.030401602218392, 0.007232225283733],\n    [0.030379270988192, 0.007325462048634],\n    [0.030356653816724, 0.007418629863497],\n    [0.030333750916869, 0.007511727851390],\n    [0.030310562504198, 0.007604755136040],\n    [0.030287088796968, 0.007697710841838],\n    [0.030263330016124, 0.007790594093851],\n    [0.030239286385293, 0.007883404017824],\n    [0.030214958130781, 0.007976139740197],\n    [0.030190345481576, 0.008068800388104],\n    [0.030165448669342, 0.008161385089390],\n    [0.030140267928416, 0.008253892972610],\n    [0.030114803495809, 0.008346323167047],\n    [0.030089055611203, 0.008438674802711],\n    [0.030063024516947, 0.008530947010354],\n    [0.030036710458054, 0.008623138921475],\n    [0.030010113682202, 0.008715249668328],\n    [0.029983234439732, 0.008807278383932],\n    [0.029956072983640, 0.008899224202078],\n    [0.029928629569580, 0.008991086257336],\n    [0.029900904455860, 0.009082863685067],\n    [0.029872897903441, 0.009174555621425],\n    [0.029844610175929, 0.009266161203371],\n    [0.029816041539579, 0.009357679568679],\n    [0.029787192263292, 0.009449109855944],\n    [0.029758062618606, 0.009540451204587],\n    [0.029728652879702, 0.009631702754871],\n    [0.029698963323395, 0.009722863647900],\n    [0.029668994229134, 0.009813933025633],\n    [0.029638745879000, 0.009904910030891],\n    [0.029608218557702, 0.009995793807363],\n    [0.029577412552575, 0.010086583499618],\n    [0.029546328153577, 0.010177278253107],\n    [0.029514965653285, 0.010267877214177],\n    [0.029483325346896, 0.010358379530076],\n    [0.029451407532220, 0.010448784348962],\n    [0.029419212509679, 0.010539090819911],\n    [0.029386740582307, 0.010629298092923],\n    [0.029353992055740, 0.010719405318933],\n    [0.029320967238220, 0.010809411649818],\n    [0.029287666440590, 0.010899316238403],\n    [0.029254089976290, 0.010989118238474],\n    [0.029220238161353, 0.011078816804778],\n    [0.029186111314406, 0.011168411093039],\n    [0.029151709756664, 0.011257900259961],\n    [0.029117033811927, 0.011347283463239],\n    [0.029082083806579, 0.011436559861563],\n    [0.029046860069582, 0.011525728614630],\n    [0.029011362932476, 0.011614788883150],\n    [0.028975592729373, 0.011703739828853],\n    [0.028939549796957, 0.011792580614500],\n    [0.028903234474475, 0.011881310403886],\n    [0.028866647103744, 0.011969928361855],\n    [0.028829788029135, 0.012058433654299],\n    [0.028792657597583, 0.012146825448172],\n    [0.028755256158571, 0.012235102911499],\n    [0.028717584064137, 0.012323265213377],\n    [0.028679641668864, 0.012411311523990],\n    [0.028641429329882, 0.012499241014612],\n    [0.028602947406859, 0.012587052857618],\n    [0.028564196262001, 0.012674746226488],\n    [0.028525176260050, 0.012762320295819],\n    [0.028485887768276, 0.012849774241331],\n    [0.028446331156478, 0.012937107239875],\n    [0.028406506796976, 0.013024318469437],\n    [0.028366415064615, 0.013111407109155],\n    [0.028326056336751, 0.013198372339315],\n    [0.028285430993258, 0.013285213341368],\n    [0.028244539416515, 0.013371929297933],\n    [0.028203381991411, 0.013458519392807],\n    [0.028161959105334, 0.013544982810971],\n    [0.028120271148172, 0.013631318738598],\n    [0.028078318512309, 0.013717526363062],\n    [0.028036101592619, 0.013803604872943],\n    [0.027993620786463, 0.013889553458039],\n    [0.027950876493687, 0.013975371309367],\n    [0.027907869116616, 0.014061057619178],\n    [0.027864599060052, 0.014146611580959],\n    [0.027821066731270, 0.014232032389445],\n    [0.027777272540012, 0.014317319240622],\n    [0.027733216898487, 0.014402471331737],\n    [0.027688900221361, 0.014487487861307],\n    [0.027644322925762, 0.014572368029123],\n    [0.027599485431266, 0.014657111036262],\n    [0.027554388159903, 0.014741716085090],\n    [0.027509031536144, 0.014826182379271],\n    [0.027463415986904, 0.014910509123778],\n    [0.027417541941533, 0.014994695524894],\n    [0.027371409831816, 0.015078740790225],\n    [0.027325020091965, 0.015162644128704],\n    [0.027278373158618, 0.015246404750603],\n    [0.027231469470833, 0.015330021867534],\n    [0.027184309470088, 0.015413494692460],\n    [0.027136893600268, 0.015496822439704],\n    [0.027089222307671, 0.015580004324954],\n    [0.027041296040997, 0.015663039565269],\n    [0.026993115251345, 0.015745927379091],\n    [0.026944680392213, 0.015828666986247],\n    [0.026895991919487, 0.015911257607961],\n    [0.026847050291442, 0.015993698466859],\n    [0.026797855968734, 0.016075988786976],\n    [0.026748409414401, 0.016158127793763],\n    [0.026698711093851, 0.016240114714099],\n    [0.026648761474864, 0.016321948776289],\n    [0.026598561027585, 0.016403629210082],\n    [0.026548110224519, 0.016485155246669],\n    [0.026497409540530, 0.016566526118696],\n    [0.026446459452830, 0.016647741060271],\n    [0.026395260440982, 0.016728799306966],\n    [0.026343812986890, 0.016809700095831],\n    [0.026292117574797, 0.016890442665397],\n    [0.026240174691280, 0.016971026255683],\n    [0.026187984825246, 0.017051450108208],\n    [0.026135548467924, 0.017131713465990],\n    [0.026082866112867, 0.017211815573560],\n    [0.026029938255941, 0.017291755676967],\n    [0.025976765395322, 0.017371533023784],\n    [0.025923348031494, 0.017451146863116],\n    [0.025869686667242, 0.017530596445607],\n    [0.025815781807646, 0.017609881023449],\n    [0.025761633960080, 0.017688999850383],\n    [0.025707243634204, 0.017767952181715],\n    [0.025652611341960, 0.017846737274313],\n    [0.025597737597568, 0.017925354386623],\n    [0.025542622917522, 0.018003802778671],\n    [0.025487267820581, 0.018082081712071],\n    [0.025431672827768, 0.018160190450031],\n    [0.025375838462365, 0.018238128257362],\n    [0.025319765249906, 0.018315894400484],\n    [0.025263453718173, 0.018393488147432],\n    [0.025206904397193, 0.018470908767865],\n    [0.025150117819228, 0.018548155533070],\n    [0.025093094518776, 0.018625227715971],\n    [0.025035835032562, 0.018702124591135],\n    [0.024978339899534, 0.018778845434780],\n    [0.024920609660858, 0.018855389524780],\n    [0.024862644859912, 0.018931756140672],\n    [0.024804446042284, 0.019007944563666],\n    [0.024746013755764, 0.019083954076646],\n    [0.024687348550337, 0.019159783964183],\n    [0.024628450978184, 0.019235433512536],\n    [0.024569321593670, 0.019310902009663],\n    [0.024509960953345, 0.019386188745225],\n    [0.024450369615932, 0.019461293010596],\n    [0.024390548142329, 0.019536214098866],\n    [0.024330497095598, 0.019610951304848],\n    [0.024270217040961, 0.019685503925087],\n    [0.024209708545799, 0.019759871257867],\n    [0.024148972179639, 0.019834052603212],\n    [0.024088008514157, 0.019908047262901],\n    [0.024026818123164, 0.019981854540467],\n    [0.023965401582609, 0.020055473741208],\n    [0.023903759470567, 0.020128904172192],\n    [0.023841892367236, 0.020202145142264],\n    [0.023779800854935, 0.020275195962052],\n    [0.023717485518092, 0.020348055943974],\n    [0.023654946943242, 0.020420724402244],\n    [0.023592185719023, 0.020493200652878],\n    [0.023529202436167, 0.020565484013703],\n    [0.023465997687496, 0.020637573804361],\n    [0.023402572067918, 0.020709469346314],\n    [0.023338926174419, 0.020781169962854],\n    [0.023275060606058, 0.020852674979108],\n    [0.023210975963963, 0.020923983722044],\n    [0.023146672851322, 0.020995095520475],\n    [0.023082151873380, 0.021066009705072],\n    [0.023017413637435, 0.021136725608363],\n    [0.022952458752826, 0.021207242564742],\n    [0.022887287830934, 0.021277559910478],\n    [0.022821901485173, 0.021347676983716],\n    [0.022756300330983, 0.021417593124488],\n    [0.022690484985827, 0.021487307674717],\n    [0.022624456069185, 0.021556819978223],\n    [0.022558214202547, 0.021626129380729],\n    [0.022491760009405, 0.021695235229869],\n    [0.022425094115252, 0.021764136875192],\n    [0.022358217147572, 0.021832833668171],\n    [0.022291129735838, 0.021901324962204],\n    [0.022223832511501, 0.021969610112625],\n    [0.022156326107988, 0.022037688476709],\n    [0.022088611160696, 0.022105559413676],\n    [0.022020688306983, 0.022173222284699],\n    [0.021952558186166, 0.022240676452909],\n    [0.021884221439510, 0.022307921283403],\n    [0.021815678710228, 0.022374956143245],\n    [0.021746930643469, 0.022441780401478],\n    [0.021677977886316, 0.022508393429127],\n    [0.021608821087780, 0.022574794599206],\n    [0.021539460898790, 0.022640983286719],\n    [0.021469897972190, 0.022706958868676],\n    [0.021400132962735, 0.022772720724087],\n    [0.021330166527077, 0.022838268233979],\n    [0.021259999323769, 0.022903600781391],\n    [0.021189632013250, 0.022968717751391],\n    [0.021119065257845, 0.023033618531071],\n    [0.021048299721754, 0.023098302509561],\n    [0.020977336071050, 0.023162769078031],\n    [0.020906174973670, 0.023227017629698],\n    [0.020834817099409, 0.023291047559828],\n    [0.020763263119915, 0.023354858265748],\n    [0.020691513708680, 0.023418449146848],\n    [0.020619569541038, 0.023481819604585],\n    [0.020547431294155, 0.023544969042494],\n    [0.020475099647023, 0.023607896866186],\n    [0.020402575280455, 0.023670602483363],\n    [0.020329858877078, 0.023733085303813],\n    [0.020256951121327, 0.023795344739427],\n    [0.020183852699437, 0.023857380204193],\n    [0.020110564299439, 0.023919191114211],\n    [0.020037086611150, 0.023980776887692],\n    [0.019963420326171, 0.024042136944968],\n    [0.019889566137877, 0.024103270708495],\n    [0.019815524741412, 0.024164177602859],\n    [0.019741296833681, 0.024224857054779],\n    [0.019666883113346, 0.024285308493120],\n    [0.019592284280817, 0.024345531348888],\n    [0.019517501038246, 0.024405525055242],\n    [0.019442534089523, 0.024465289047500],\n    [0.019367384140264, 0.024524822763141],\n    [0.019292051897809, 0.024584125641809],\n    [0.019216538071215, 0.024643197125323],\n    [0.019140843371246, 0.024702036657681],\n    [0.019064968510369, 0.024760643685063],\n    [0.018988914202748, 0.024819017655836],\n    [0.018912681164234, 0.024877158020562],\n    [0.018836270112363, 0.024935064232003],\n    [0.018759681766343, 0.024992735745123],\n    [0.018682916847054, 0.025050172017095],\n    [0.018605976077037, 0.025107372507308],\n    [0.018528860180486, 0.025164336677369],\n    [0.018451569883247, 0.025221063991110],\n    [0.018374105912805, 0.025277553914591],\n    [0.018296468998280, 0.025333805916107],\n    [0.018218659870421, 0.025389819466194],\n    [0.018140679261596, 0.025445594037630],\n    [0.018062527905790, 0.025501129105445],\n    [0.017984206538592, 0.025556424146920],\n    [0.017905715897192, 0.025611478641598],\n    [0.017827056720375, 0.025666292071285],\n    [0.017748229748511, 0.025720863920056],\n    [0.017669235723550, 0.025775193674260],\n    [0.017590075389012, 0.025829280822525],\n    [0.017510749489986, 0.025883124855762],\n    [0.017431258773116, 0.025936725267170],\n    [0.017351603986600, 0.025990081552242],\n    [0.017271785880180, 0.026043193208768],\n    [0.017191805205132, 0.026096059736841],\n    [0.017111662714267, 0.026148680638861],\n    [0.017031359161915, 0.026201055419541],\n    [0.016950895303924, 0.026253183585908],\n    [0.016870271897651, 0.026305064647313],\n    [0.016789489701954, 0.026356698115431],\n    [0.016708549477186, 0.026408083504269],\n    [0.016627451985187, 0.026459220330167],\n    [0.016546197989277, 0.026510108111806],\n    [0.016464788254250, 0.026560746370212],\n    [0.016383223546365, 0.026611134628757],\n    [0.016301504633341, 0.026661272413168],\n    [0.016219632284346, 0.026711159251530],\n    [0.016137607269996, 0.026760794674288],\n    [0.016055430362340, 0.026810178214254],\n    [0.015973102334858, 0.026859309406613],\n    [0.015890623962454, 0.026908187788922],\n    [0.015807996021446, 0.026956812901119],\n    [0.015725219289558, 0.027005184285527],\n    [0.015642294545918, 0.027053301486856],\n    [0.015559222571044, 0.027101164052208],\n    [0.015476004146842, 0.027148771531083],\n    [0.015392640056594, 0.027196123475380],\n    [0.015309131084956, 0.027243219439406],\n    [0.015225478017946, 0.027290058979875],\n    [0.015141681642938, 0.027336641655915],\n    [0.015057742748656, 0.027382967029073],\n    [0.014973662125164, 0.027429034663317],\n    [0.014889440563862, 0.027474844125040],\n    [0.014805078857474, 0.027520394983066],\n    [0.014720577800046, 0.027565686808654],\n    [0.014635938186934, 0.027610719175499],\n    [0.014551160814797, 0.027655491659740],\n    [0.014466246481592, 0.027700003839960],\n    [0.014381195986567, 0.027744255297195],\n    [0.014296010130247, 0.027788245614933],\n    [0.014210689714436, 0.027831974379120],\n    [0.014125235542201, 0.027875441178165],\n    [0.014039648417870, 0.027918645602941],\n    [0.013953929147020, 0.027961587246792],\n    [0.013868078536476, 0.028004265705534],\n    [0.013782097394294, 0.028046680577462],\n    [0.013695986529763, 0.028088831463351],\n    [0.013609746753390, 0.028130717966461],\n    [0.013523378876898, 0.028172339692540],\n    [0.013436883713214, 0.028213696249828],\n    [0.013350262076462, 0.028254787249062],\n    [0.013263514781960, 0.028295612303478],\n    [0.013176642646205, 0.028336171028814],\n    [0.013089646486871, 0.028376463043317],\n    [0.013002527122799, 0.028416487967743],\n    [0.012915285373990, 0.028456245425361],\n    [0.012827922061597, 0.028495735041960],\n    [0.012740438007915, 0.028534956445849],\n    [0.012652834036379, 0.028573909267859],\n    [0.012565110971550, 0.028612593141354],\n    [0.012477269639111, 0.028651007702224],\n    [0.012389310865858, 0.028689152588899],\n    [0.012301235479693, 0.028727027442343],\n    [0.012213044309615, 0.028764631906065],\n    [0.012124738185712, 0.028801965626115],\n    [0.012036317939156, 0.028839028251097],\n    [0.011947784402191, 0.028875819432161],\n    [0.011859138408130, 0.028912338823015],\n    [0.011770380791341, 0.028948586079925],\n    [0.011681512387245, 0.028984560861718],\n    [0.011592534032306, 0.029020262829785],\n    [0.011503446564022, 0.029055691648087],\n    [0.011414250820918, 0.029090846983152],\n    [0.011324947642537, 0.029125728504087],\n    [0.011235537869437, 0.029160335882573],\n    [0.011146022343175, 0.029194668792871],\n    [0.011056401906305, 0.029228726911828],\n    [0.010966677402371, 0.029262509918876],\n    [0.010876849675891, 0.029296017496036],\n    [0.010786919572361, 0.029329249327922],\n    [0.010696887938235, 0.029362205101743],\n    [0.010606755620926, 0.029394884507308],\n    [0.010516523468793, 0.029427287237024],\n    [0.010426192331137, 0.029459412985906],\n    [0.010335763058187, 0.029491261451573],\n    [0.010245236501099, 0.029522832334255],\n    [0.010154613511943, 0.029554125336796],\n    [0.010063894943698, 0.029585140164654],\n    [0.009973081650240, 0.029615876525905],\n    [0.009882174486340, 0.029646334131247],\n    [0.009791174307650, 0.029676512694001],\n    [0.009700081970699, 0.029706411930116],\n    [0.009608898332881, 0.029736031558168],\n    [0.009517624252453, 0.029765371299366],\n    [0.009426260588521, 0.029794430877553],\n    [0.009334808201034, 0.029823210019210],\n    [0.009243267950778, 0.029851708453456],\n    [0.009151640699363, 0.029879925912053],\n    [0.009059927309220, 0.029907862129408],\n    [0.008968128643591, 0.029935516842573],\n    [0.008876245566520, 0.029962889791254],\n    [0.008784278942845, 0.029989980717805],\n    [0.008692229638191, 0.030016789367235],\n    [0.008600098518961, 0.030043315487212],\n    [0.008507886452329, 0.030069558828062],\n    [0.008415594306230, 0.030095519142772],\n    [0.008323222949351, 0.030121196186994],\n    [0.008230773251129, 0.030146589719046],\n    [0.008138246081733, 0.030171699499915],\n    [0.008045642312067, 0.030196525293257],\n    [0.007952962813750, 0.030221066865402],\n    [0.007860208459119, 0.030245323985357],\n    [0.007767380121212, 0.030269296424803],\n    [0.007674478673766, 0.030292983958103],\n    [0.007581504991203, 0.030316386362302],\n    [0.007488459948628, 0.030339503417126],\n    [0.007395344421816, 0.030362334904989],\n    [0.007302159287206, 0.030384880610993],\n    [0.007208905421891, 0.030407140322928],\n    [0.007115583703613, 0.030429113831278],\n    [0.007022195010752, 0.030450800929220],\n    [0.006928740222316, 0.030472201412626],\n    [0.006835220217939, 0.030493315080068],\n    [0.006741635877866, 0.030514141732814],\n    [0.006647988082948, 0.030534681174838],\n    [0.006554277714635, 0.030554933212813],\n    [0.006460505654964, 0.030574897656119],\n    [0.006366672786553, 0.030594574316845],\n    [0.006272779992593, 0.030613963009786],\n    [0.006178828156839, 0.030633063552447],\n    [0.006084818163601, 0.030651875765048],\n    [0.005990750897737, 0.030670399470520],\n    [0.005896627244644, 0.030688634494512],\n    [0.005802448090250, 0.030706580665388],\n    [0.005708214321004, 0.030724237814232],\n    [0.005613926823871, 0.030741605774849],\n    [0.005519586486321, 0.030758684383764],\n    [0.005425194196321, 0.030775473480228],\n    [0.005330750842327, 0.030791972906214],\n    [0.005236257313276, 0.030808182506425],\n    [0.005141714498576, 0.030824102128288],\n    [0.005047123288102, 0.030839731621963],\n    [0.004952484572181, 0.030855070840339],\n    [0.004857799241589, 0.030870119639036],\n    [0.004763068187541, 0.030884877876411],\n    [0.004668292301681, 0.030899345413553],\n    [0.004573472476075, 0.030913522114288],\n    [0.004478609603205, 0.030927407845180],\n    [0.004383704575956, 0.030941002475530],\n    [0.004288758287610, 0.030954305877381],\n    [0.004193771631837, 0.030967317925516],\n    [0.004098745502689, 0.030980038497461],\n    [0.004003680794587, 0.030992467473486],\n    [0.003908578402316, 0.031004604736602],\n    [0.003813439221017, 0.031016450172571],\n    [0.003718264146176, 0.031028003669899],\n    [0.003623054073616, 0.031039265119839],\n    [0.003527809899492, 0.031050234416394],\n    [0.003432532520278, 0.031060911456318],\n    [0.003337222832760, 0.031071296139114],\n    [0.003241881734029, 0.031081388367037],\n    [0.003146510121474, 0.031091188045095],\n    [0.003051108892766, 0.031100695081051],\n    [0.002955678945860, 0.031109909385419],\n    [0.002860221178978, 0.031118830871473],\n    [0.002764736490604, 0.031127459455239],\n    [0.002669225779478, 0.031135795055501],\n    [0.002573689944583, 0.031143837593803],\n    [0.002478129885137, 0.031151586994444],\n    [0.002382546500589, 0.031159043184484],\n    [0.002286940690606, 0.031166206093743],\n    [0.002191313355067, 0.031173075654800],\n    [0.002095665394051, 0.031179651802998],\n    [0.001999997707835, 0.031185934476438],\n    [0.001904311196878, 0.031191923615985],\n    [0.001808606761820, 0.031197619165268],\n    [0.001712885303465, 0.031203021070678],\n    [0.001617147722782, 0.031208129281370],\n    [0.001521394920889, 0.031212943749264],\n    [0.001425627799047, 0.031217464429043],\n    [0.001329847258653, 0.031221691278159],\n    [0.001234054201231, 0.031225624256825],\n    [0.001138249528420, 0.031229263328024],\n    [0.001042434141971, 0.031232608457502],\n    [0.000946608943736, 0.031235659613775],\n    [0.000850774835656, 0.031238416768124],\n    [0.000754932719759, 0.031240879894597],\n    [0.000659083498149, 0.031243048970010],\n    [0.000563228072993, 0.031244923973948],\n    [0.000467367346520, 0.031246504888762],\n    [0.000371502221008, 0.031247791699571],\n    [0.000275633598775, 0.031248784394264],\n    [0.000179762382174, 0.031249482963498],\n    [0.000083889473581, 0.031249887400697]\n];\n\nconst MDCT_TABLE_1920 = [\n    [0.032274858518097, 0.000013202404176],\n    [0.032274642494505, 0.000118821372483],\n    [0.032274080835421, 0.000224439068308],\n    [0.032273173546860, 0.000330054360572],\n    [0.032271920638538, 0.000435666118218],\n    [0.032270322123873, 0.000541273210231],\n    [0.032268378019984, 0.000646874505642],\n    [0.032266088347691, 0.000752468873546],\n    [0.032263453131514, 0.000858055183114],\n    [0.032260472399674, 0.000963632303600],\n    [0.032257146184092, 0.001069199104358],\n    [0.032253474520390, 0.001174754454853],\n    [0.032249457447888, 0.001280297224671],\n    [0.032245095009606, 0.001385826283535],\n    [0.032240387252262, 0.001491340501313],\n    [0.032235334226272, 0.001596838748031],\n    [0.032229935985750, 0.001702319893890],\n    [0.032224192588507, 0.001807782809271],\n    [0.032218104096050, 0.001913226364749],\n    [0.032211670573582, 0.002018649431111],\n    [0.032204892090000, 0.002124050879359],\n    [0.032197768717898, 0.002229429580728],\n    [0.032190300533560, 0.002334784406698],\n    [0.032182487616965, 0.002440114229003],\n    [0.032174330051782, 0.002545417919644],\n    [0.032165827925374, 0.002650694350905],\n    [0.032156981328790, 0.002755942395358],\n    [0.032147790356771, 0.002861160925883],\n    [0.032138255107744, 0.002966348815672],\n    [0.032128375683825, 0.003071504938250],\n    [0.032118152190814, 0.003176628167476],\n    [0.032107584738196, 0.003281717377568],\n    [0.032096673439141, 0.003386771443102],\n    [0.032085418410500, 0.003491789239036],\n    [0.032073819772804, 0.003596769640711],\n    [0.032061877650267, 0.003701711523874],\n    [0.032049592170778, 0.003806613764680],\n    [0.032036963465906, 0.003911475239711],\n    [0.032023991670893, 0.004016294825985],\n    [0.032010676924657, 0.004121071400967],\n    [0.031997019369789, 0.004225803842586],\n    [0.031983019152549, 0.004330491029241],\n    [0.031968676422869, 0.004435131839816],\n    [0.031953991334348, 0.004539725153692],\n    [0.031938964044252, 0.004644269850758],\n    [0.031923594713510, 0.004748764811426],\n    [0.031907883506716, 0.004853208916638],\n    [0.031891830592124, 0.004957601047881],\n    [0.031875436141648, 0.005061940087200],\n    [0.031858700330859, 0.005166224917208],\n    [0.031841623338985, 0.005270454421097],\n    [0.031824205348907, 0.005374627482653],\n    [0.031806446547156, 0.005478742986267],\n    [0.031788347123916, 0.005582799816945],\n    [0.031769907273017, 0.005686796860323],\n    [0.031751127191935, 0.005790733002674],\n    [0.031732007081789, 0.005894607130928],\n    [0.031712547147340, 0.005998418132675],\n    [0.031692747596989, 0.006102164896182],\n    [0.031672608642773, 0.006205846310406],\n    [0.031652130500364, 0.006309461265002],\n    [0.031631313389067, 0.006413008650337],\n    [0.031610157531816, 0.006516487357501],\n    [0.031588663155172, 0.006619896278321],\n    [0.031566830489325, 0.006723234305370],\n    [0.031544659768083, 0.006826500331981],\n    [0.031522151228878, 0.006929693252258],\n    [0.031499305112758, 0.007032811961088],\n    [0.031476121664387, 0.007135855354151],\n    [0.031452601132040, 0.007238822327937],\n    [0.031428743767604, 0.007341711779751],\n    [0.031404549826572, 0.007444522607730],\n    [0.031380019568042, 0.007547253710853],\n    [0.031355153254712, 0.007649903988952],\n    [0.031329951152882, 0.007752472342725],\n    [0.031304413532445, 0.007854957673748],\n    [0.031278540666888, 0.007957358884484],\n    [0.031252332833290, 0.008059674878300],\n    [0.031225790312316, 0.008161904559473],\n    [0.031198913388214, 0.008264046833205],\n    [0.031171702348814, 0.008366100605636],\n    [0.031144157485525, 0.008468064783849],\n    [0.031116279093331, 0.008569938275893],\n    [0.031088067470786, 0.008671719990782],\n    [0.031059522920014, 0.008773408838517],\n    [0.031030645746705, 0.008875003730092],\n    [0.031001436260110, 0.008976503577507],\n    [0.030971894773039, 0.009077907293780],\n    [0.030942021601857, 0.009179213792959],\n    [0.030911817066483, 0.009280421990133],\n    [0.030881281490382, 0.009381530801444],\n    [0.030850415200566, 0.009482539144097],\n    [0.030819218527589, 0.009583445936373],\n    [0.030787691805541, 0.009684250097643],\n    [0.030755835372048, 0.009784950548375],\n    [0.030723649568268, 0.009885546210147],\n    [0.030691134738883, 0.009986036005661],\n    [0.030658291232103, 0.010086418858753],\n    [0.030625119399655, 0.010186693694402],\n    [0.030591619596781, 0.010286859438745],\n    [0.030557792182239, 0.010386915019088],\n    [0.030523637518292, 0.010486859363916],\n    [0.030489155970710, 0.010586691402906],\n    [0.030454347908763, 0.010686410066936],\n    [0.030419213705216, 0.010786014288099],\n    [0.030383753736329, 0.010885502999714],\n    [0.030347968381849, 0.010984875136338],\n    [0.030311858025010, 0.011084129633775],\n    [0.030275423052523, 0.011183265429088],\n    [0.030238663854579, 0.011282281460612],\n    [0.030201580824838, 0.011381176667967],\n    [0.030164174360430, 0.011479949992062],\n    [0.030126444861948, 0.011578600375117],\n    [0.030088392733446, 0.011677126760663],\n    [0.030050018382430, 0.011775528093563],\n    [0.030011322219859, 0.011873803320018],\n    [0.029972304660138, 0.011971951387578],\n    [0.029932966121114, 0.012069971245157],\n    [0.029893307024070, 0.012167861843041],\n    [0.029853327793724, 0.012265622132901],\n    [0.029813028858222, 0.012363251067801],\n    [0.029772410649132, 0.012460747602215],\n    [0.029731473601443, 0.012558110692033],\n    [0.029690218153558, 0.012655339294575],\n    [0.029648644747289, 0.012752432368600],\n    [0.029606753827855, 0.012849388874320],\n    [0.029564545843872, 0.012946207773407],\n    [0.029522021247356, 0.013042888029011],\n    [0.029479180493710, 0.013139428605762],\n    [0.029436024041725, 0.013235828469789],\n    [0.029392552353570, 0.013332086588727],\n    [0.029348765894794, 0.013428201931728],\n    [0.029304665134313, 0.013524173469475],\n    [0.029260250544412, 0.013620000174189],\n    [0.029215522600735, 0.013715681019643],\n    [0.029170481782283, 0.013811214981173],\n    [0.029125128571406, 0.013906601035686],\n    [0.029079463453801, 0.014001838161674],\n    [0.029033486918505, 0.014096925339225],\n    [0.028987199457889, 0.014191861550031],\n    [0.028940601567655, 0.014286645777401],\n    [0.028893693746829, 0.014381277006273],\n    [0.028846476497755, 0.014475754223221],\n    [0.028798950326094, 0.014570076416472],\n    [0.028751115740811, 0.014664242575910],\n    [0.028702973254178, 0.014758251693091],\n    [0.028654523381760, 0.014852102761253],\n    [0.028605766642418, 0.014945794775326],\n    [0.028556703558297, 0.015039326731945],\n    [0.028507334654823, 0.015132697629457],\n    [0.028457660460698, 0.015225906467935],\n    [0.028407681507891, 0.015318952249187],\n    [0.028357398331639, 0.015411833976768],\n    [0.028306811470432, 0.015504550655988],\n    [0.028255921466016, 0.015597101293927],\n    [0.028204728863381, 0.015689484899442],\n    [0.028153234210760, 0.015781700483179],\n    [0.028101438059619, 0.015873747057582],\n    [0.028049340964652, 0.015965623636907],\n    [0.027996943483779, 0.016057329237229],\n    [0.027944246178133, 0.016148862876456],\n    [0.027891249612061, 0.016240223574335],\n    [0.027837954353113, 0.016331410352467],\n    [0.027784360972039, 0.016422422234315],\n    [0.027730470042780, 0.016513258245214],\n    [0.027676282142466, 0.016603917412384],\n    [0.027621797851405, 0.016694398764938],\n    [0.027567017753080, 0.016784701333894],\n    [0.027511942434143, 0.016874824152183],\n    [0.027456572484404, 0.016964766254662],\n    [0.027400908496833, 0.017054526678124],\n    [0.027344951067546, 0.017144104461307],\n    [0.027288700795801, 0.017233498644904],\n    [0.027232158283994, 0.017322708271577],\n    [0.027175324137651, 0.017411732385960],\n    [0.027118198965418, 0.017500570034678],\n    [0.027060783379060, 0.017589220266351],\n    [0.027003077993454, 0.017677682131607],\n    [0.026945083426576, 0.017765954683088],\n    [0.026886800299502, 0.017854036975468],\n    [0.026828229236397, 0.017941928065456],\n    [0.026769370864511, 0.018029627011808],\n    [0.026710225814170, 0.018117132875340],\n    [0.026650794718768, 0.018204444718934],\n    [0.026591078214767, 0.018291561607551],\n    [0.026531076941680, 0.018378482608238],\n    [0.026470791542075, 0.018465206790142],\n    [0.026410222661558, 0.018551733224515],\n    [0.026349370948775, 0.018638060984730],\n    [0.026288237055398, 0.018724189146286],\n    [0.026226821636121, 0.018810116786819],\n    [0.026165125348656, 0.018895842986112],\n    [0.026103148853718, 0.018981366826109],\n    [0.026040892815028, 0.019066687390916],\n    [0.025978357899296, 0.019151803766819],\n    [0.025915544776223, 0.019236715042290],\n    [0.025852454118485, 0.019321420307998],\n    [0.025789086601733, 0.019405918656817],\n    [0.025725442904582, 0.019490209183837],\n    [0.025661523708606, 0.019574290986376],\n    [0.025597329698327, 0.019658163163984],\n    [0.025532861561211, 0.019741824818458],\n    [0.025468119987662, 0.019825275053848],\n    [0.025403105671008, 0.019908512976470],\n    [0.025337819307501, 0.019991537694913],\n    [0.025272261596305, 0.020074348320047],\n    [0.025206433239491, 0.020156943965039],\n    [0.025140334942028, 0.020239323745355],\n    [0.025073967411776, 0.020321486778774],\n    [0.025007331359476, 0.020403432185395],\n    [0.024940427498748, 0.020485159087650],\n    [0.024873256546079, 0.020566666610309],\n    [0.024805819220816, 0.020647953880491],\n    [0.024738116245157, 0.020729020027676],\n    [0.024670148344147, 0.020809864183709],\n    [0.024601916245669, 0.020890485482816],\n    [0.024533420680433, 0.020970883061607],\n    [0.024464662381971, 0.021051056059087],\n    [0.024395642086630, 0.021131003616670],\n    [0.024326360533561, 0.021210724878181],\n    [0.024256818464715, 0.021290218989868],\n    [0.024187016624830, 0.021369485100415],\n    [0.024116955761430, 0.021448522360944],\n    [0.024046636624808, 0.021527329925030],\n    [0.023976059968027, 0.021605906948708],\n    [0.023905226546906, 0.021684252590480],\n    [0.023834137120014, 0.021762366011328],\n    [0.023762792448662, 0.021840246374720],\n    [0.023691193296893, 0.021917892846620],\n    [0.023619340431478, 0.021995304595495],\n    [0.023547234621902, 0.022072480792330],\n    [0.023474876640361, 0.022149420610628],\n    [0.023402267261751, 0.022226123226426],\n    [0.023329407263659, 0.022302587818300],\n    [0.023256297426359, 0.022378813567377],\n    [0.023182938532797, 0.022454799657339],\n    [0.023109331368588, 0.022530545274437],\n    [0.023035476722006, 0.022606049607496],\n    [0.022961375383975, 0.022681311847926],\n    [0.022887028148061, 0.022756331189727],\n    [0.022812435810462, 0.022831106829504],\n    [0.022737599170003, 0.022905637966469],\n    [0.022662519028125, 0.022979923802453],\n    [0.022587196188874, 0.023053963541915],\n    [0.022511631458899, 0.023127756391950],\n    [0.022435825647437, 0.023201301562294],\n    [0.022359779566306, 0.023274598265338],\n    [0.022283494029900, 0.023347645716133],\n    [0.022206969855176, 0.023420443132400],\n    [0.022130207861645, 0.023492989734537],\n    [0.022053208871367, 0.023565284745628],\n    [0.021975973708940, 0.023637327391451],\n    [0.021898503201489, 0.023709116900488],\n    [0.021820798178663, 0.023780652503931],\n    [0.021742859472618, 0.023851933435691],\n    [0.021664687918017, 0.023922958932406],\n    [0.021586284352013, 0.023993728233451],\n    [0.021507649614247, 0.024064240580942],\n    [0.021428784546832, 0.024134495219750],\n    [0.021349689994350, 0.024204491397504],\n    [0.021270366803840, 0.024274228364600],\n    [0.021190815824791, 0.024343705374213],\n    [0.021111037909128, 0.024412921682298],\n    [0.021031033911210, 0.024481876547605],\n    [0.020950804687815, 0.024550569231683],\n    [0.020870351098134, 0.024618998998889],\n    [0.020789674003759, 0.024687165116394],\n    [0.020708774268678, 0.024755066854194],\n    [0.020627652759262, 0.024822703485116],\n    [0.020546310344257, 0.024890074284826],\n    [0.020464747894775, 0.024957178531837],\n    [0.020382966284284, 0.025024015507516],\n    [0.020300966388600, 0.025090584496093],\n    [0.020218749085876, 0.025156884784668],\n    [0.020136315256592, 0.025222915663218],\n    [0.020053665783549, 0.025288676424605],\n    [0.019970801551857, 0.025354166364584],\n    [0.019887723448925, 0.025419384781811],\n    [0.019804432364452, 0.025484330977848],\n    [0.019720929190419, 0.025549004257175],\n    [0.019637214821078, 0.025613403927192],\n    [0.019553290152943, 0.025677529298230],\n    [0.019469156084779, 0.025741379683559],\n    [0.019384813517595, 0.025804954399392],\n    [0.019300263354632, 0.025868252764895],\n    [0.019215506501354, 0.025931274102193],\n    [0.019130543865439, 0.025994017736379],\n    [0.019045376356769, 0.026056482995518],\n    [0.018960004887419, 0.026118669210657],\n    [0.018874430371648, 0.026180575715833],\n    [0.018788653725892, 0.026242201848076],\n    [0.018702675868750, 0.026303546947421],\n    [0.018616497720974, 0.026364610356909],\n    [0.018530120205464, 0.026425391422602],\n    [0.018443544247254, 0.026485889493583],\n    [0.018356770773502, 0.026546103921965],\n    [0.018269800713483, 0.026606034062902],\n    [0.018182634998576, 0.026665679274589],\n    [0.018095274562256, 0.026725038918274],\n    [0.018007720340083, 0.026784112358263],\n    [0.017919973269692, 0.026842898961926],\n    [0.017832034290785, 0.026901398099707],\n    [0.017743904345116, 0.026959609145127],\n    [0.017655584376488, 0.027017531474792],\n    [0.017567075330734, 0.027075164468401],\n    [0.017478378155718, 0.027132507508750],\n    [0.017389493801313, 0.027189559981742],\n    [0.017300423219401, 0.027246321276391],\n    [0.017211167363854, 0.027302790784828],\n    [0.017121727190533, 0.027358967902310],\n    [0.017032103657269, 0.027414852027226],\n    [0.016942297723858, 0.027470442561102],\n    [0.016852310352050, 0.027525738908608],\n    [0.016762142505537, 0.027580740477564],\n    [0.016671795149944, 0.027635446678948],\n    [0.016581269252819, 0.027689856926900],\n    [0.016490565783622, 0.027743970638730],\n    [0.016399685713714, 0.027797787234924],\n    [0.016308630016347, 0.027851306139149],\n    [0.016217399666655, 0.027904526778260],\n    [0.016125995641641, 0.027957448582309],\n    [0.016034418920170, 0.028010070984544],\n    [0.015942670482954, 0.028062393421421],\n    [0.015850751312545, 0.028114415332610],\n    [0.015758662393324, 0.028166136160998],\n    [0.015666404711489, 0.028217555352697],\n    [0.015573979255046, 0.028268672357047],\n    [0.015481387013797, 0.028319486626627],\n    [0.015388628979331, 0.028369997617257],\n    [0.015295706145012, 0.028420204788004],\n    [0.015202619505968, 0.028470107601191],\n    [0.015109370059084, 0.028519705522399],\n    [0.015015958802984, 0.028568998020472],\n    [0.014922386738030, 0.028617984567529],\n    [0.014828654866302, 0.028666664638963],\n    [0.014734764191593, 0.028715037713449],\n    [0.014640715719398, 0.028763103272951],\n    [0.014546510456900, 0.028810860802724],\n    [0.014452149412962, 0.028858309791325],\n    [0.014357633598114, 0.028905449730613],\n    [0.014262964024545, 0.028952280115756],\n    [0.014168141706090, 0.028998800445240],\n    [0.014073167658220, 0.029045010220868],\n    [0.013978042898030, 0.029090908947771],\n    [0.013882768444231, 0.029136496134411],\n    [0.013787345317136, 0.029181771292585],\n    [0.013691774538648, 0.029226733937433],\n    [0.013596057132255, 0.029271383587441],\n    [0.013500194123014, 0.029315719764447],\n    [0.013404186537539, 0.029359741993647],\n    [0.013308035403995, 0.029403449803598],\n    [0.013211741752084, 0.029446842726223],\n    [0.013115306613032, 0.029489920296820],\n    [0.013018731019584, 0.029532682054063],\n    [0.012922016005985, 0.029575127540008],\n    [0.012825162607977, 0.029617256300097],\n    [0.012728171862781, 0.029659067883165],\n    [0.012631044809089, 0.029700561841444],\n    [0.012533782487056, 0.029741737730567],\n    [0.012436385938281, 0.029782595109573],\n    [0.012338856205805, 0.029823133540913],\n    [0.012241194334091, 0.029863352590452],\n    [0.012143401369021, 0.029903251827477],\n    [0.012045478357878, 0.029942830824699],\n    [0.011947426349339, 0.029982089158259],\n    [0.011849246393462, 0.030021026407731],\n    [0.011750939541676, 0.030059642156129],\n    [0.011652506846768, 0.030097935989909],\n    [0.011553949362874, 0.030135907498976],\n    [0.011455268145464, 0.030173556276684],\n    [0.011356464251335, 0.030210881919845],\n    [0.011257538738598, 0.030247884028732],\n    [0.011158492666665, 0.030284562207083],\n    [0.011059327096240, 0.030320916062102],\n    [0.010960043089307, 0.030356945204470],\n    [0.010860641709118, 0.030392649248343],\n    [0.010761124020182, 0.030428027811361],\n    [0.010661491088253, 0.030463080514646],\n    [0.010561743980319, 0.030497806982812],\n    [0.010461883764593, 0.030532206843968],\n    [0.010361911510496, 0.030566279729717],\n    [0.010261828288652, 0.030600025275167],\n    [0.010161635170872, 0.030633443118931],\n    [0.010061333230142, 0.030666532903129],\n    [0.009960923540617, 0.030699294273397],\n    [0.009860407177603, 0.030731726878888],\n    [0.009759785217550, 0.030763830372273],\n    [0.009659058738038, 0.030795604409750],\n    [0.009558228817767, 0.030827048651045],\n    [0.009457296536545, 0.030858162759415],\n    [0.009356262975275, 0.030888946401653],\n    [0.009255129215945, 0.030919399248091],\n    [0.009153896341616, 0.030949520972603],\n    [0.009052565436412, 0.030979311252611],\n    [0.008951137585505, 0.031008769769084],\n    [0.008849613875105, 0.031037896206544],\n    [0.008747995392451, 0.031066690253072],\n    [0.008646283225794, 0.031095151600306],\n    [0.008544478464390, 0.031123279943448],\n    [0.008442582198486, 0.031151074981266],\n    [0.008340595519310, 0.031178536416098],\n    [0.008238519519057, 0.031205663953853],\n    [0.008136355290878, 0.031232457304017],\n    [0.008034103928871, 0.031258916179656],\n    [0.007931766528065, 0.031285040297416],\n    [0.007829344184412, 0.031310829377528],\n    [0.007726837994772, 0.031336283143813],\n    [0.007624249056906, 0.031361401323680],\n    [0.007521578469457, 0.031386183648135],\n    [0.007418827331946, 0.031410629851778],\n    [0.007315996744755, 0.031434739672811],\n    [0.007213087809115, 0.031458512853036],\n    [0.007110101627101, 0.031481949137863],\n    [0.007007039301610, 0.031505048276306],\n    [0.006903901936357, 0.031527810020993],\n    [0.006800690635862, 0.031550234128164],\n    [0.006697406505433, 0.031572320357675],\n    [0.006594050651161, 0.031594068473000],\n    [0.006490624179905, 0.031615478241233],\n    [0.006387128199278, 0.031636549433095],\n    [0.006283563817639, 0.031657281822929],\n    [0.006179932144080, 0.031677675188707],\n    [0.006076234288412, 0.031697729312034],\n    [0.005972471361157, 0.031717443978146],\n    [0.005868644473532, 0.031736818975914],\n    [0.005764754737440, 0.031755854097848],\n    [0.005660803265456, 0.031774549140098],\n    [0.005556791170816, 0.031792903902453],\n    [0.005452719567407, 0.031810918188350],\n    [0.005348589569753, 0.031828591804869],\n    [0.005244402293001, 0.031845924562742],\n    [0.005140158852914, 0.031862916276347],\n    [0.005035860365855, 0.031879566763717],\n    [0.004931507948778, 0.031895875846539],\n    [0.004827102719212, 0.031911843350155],\n    [0.004722645795254, 0.031927469103567],\n    [0.004618138295554, 0.031942752939435],\n    [0.004513581339303, 0.031957694694082],\n    [0.004408976046222, 0.031972294207493],\n    [0.004304323536549, 0.031986551323320],\n    [0.004199624931030, 0.032000465888879],\n    [0.004094881350902, 0.032014037755158],\n    [0.003990093917884, 0.032027266776813],\n    [0.003885263754166, 0.032040152812170],\n    [0.003780391982394, 0.032052695723232],\n    [0.003675479725661, 0.032064895375674],\n    [0.003570528107494, 0.032076751638847],\n    [0.003465538251839, 0.032088264385780],\n    [0.003360511283053, 0.032099433493181],\n    [0.003255448325892, 0.032110258841438],\n    [0.003150350505494, 0.032120740314619],\n    [0.003045218947373, 0.032130877800478],\n    [0.002940054777404, 0.032140671190449],\n    [0.002834859121810, 0.032150120379653],\n    [0.002729633107153, 0.032159225266897],\n    [0.002624377860318, 0.032167985754674],\n    [0.002519094508504, 0.032176401749168],\n    [0.002413784179212, 0.032184473160250],\n    [0.002308448000231, 0.032192199901481],\n    [0.002203087099626, 0.032199581890114],\n    [0.002097702605728, 0.032206619047093],\n    [0.001992295647121, 0.032213311297057],\n    [0.001886867352628, 0.032219658568338],\n    [0.001781418851302, 0.032225660792960],\n    [0.001675951272410, 0.032231317906644],\n    [0.001570465745428, 0.032236629848809],\n    [0.001464963400018, 0.032241596562566],\n    [0.001359445366028, 0.032246217994727],\n    [0.001253912773470, 0.032250494095799],\n    [0.001148366752513, 0.032254424819990],\n    [0.001042808433471, 0.032258010125204],\n    [0.000937238946789, 0.032261249973045],\n    [0.000831659423030, 0.032264144328817],\n    [0.000726070992868, 0.032266693161525],\n    [0.000620474787068, 0.032268896443871],\n    [0.000514871936481, 0.032270754152261],\n    [0.000409263572030, 0.032272266266801],\n    [0.000303650824695, 0.032273432771295],\n    [0.000198034825504, 0.032274253653254],\n    [0.000092416705518, 0.032274728903884]\n];\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/mdct_tables.js","const Tables = require('./fft_tables');\n\nmodule.exports = class FFT {\n    constructor(length) {\n        this.length = length;\n\n        switch (length) {\n            case 64:\n                this.roots = Tables.FFT_TABLE_64;\n                this.tabln = 2;\n                break;\n            case 512:\n                this.roots = Tables.FFT_TABLE_512;\n                this.tabln = 3;\n                break;\n            case 60:\n                this.roots = Tables.FFT_TABLE_60;\n                this.tabln = 2;\n                break;\n            case 480:\n                this.roots = Tables.FFT_TABLE_480;\n                this.tabln = 3;\n                break;\n            default:\n                throw \"unexpected FFT length: \" + length;\n        }\n    }\n\n    process(inp, forward) {\n        const imOff = forward ? 2 : 1;\n        const len = this.length; //N4 of MDCT\n        const scale = forward ? len : 1;\n        const rev = new Float32Array(len * 2);\n\n        //bit-reversal\n        let ii = 0;\n        for (let i = 0; i < len; i++) {\n            rev[i * 2 + 0] = inp[2 * ii + 0];\n            rev[i * 2 + 1] = inp[2 * ii + 1];\n            let k = len >> 1;\n            while (ii >= k && k > 0) {\n                ii -= k;\n                k >>= 1;\n            }\n            ii += k;\n        }\n        for (let i = 0; i < len; i++) {\n            inp[2 * i + 0] = rev[i * 2 + 0];\n            inp[2 * i + 1] = rev[i * 2 + 1];\n        }\n\n        //bottom base-4 round\n        for (let i = 0; i < len; i += 4) {\n            const a0 = inp[2 * i + 0] + inp[2 * (i + 1) + 0];\n            const a1 = inp[2 * i + 1] + inp[2 * (i + 1) + 1];\n            const b0 = inp[2 * (i + 2) + 0] + inp[2 * (i + 3) + 0];\n            const b1 = inp[2 * (i + 2) + 1] + inp[2 * (i + 3) + 1];\n            const c0 = inp[2 * i + 0] - inp[2 * (i + 1) + 0];\n            const c1 = inp[2 * i + 1] - inp[2 * (i + 1) + 1];\n            const d0 = inp[2 * (i + 2) + 0] - inp[2 * (i + 3) + 0];\n            const d1 = inp[2 * (i + 2) + 1] - inp[2 * (i + 3) + 1];\n\n            inp[2 * i + 0] = a0 + b0;\n            inp[2 * i + 1] = a1 + b1;\n            inp[2 * (i + 2) + 0] = a0 - b0;\n            inp[2 * (i + 2) + 1] = a1 - b1;\n\n            const e1_0 = c0 - d1;\n            const e1_1 = c1 + d0;\n            const e2_0 = c0 + d1;\n            const e2_1 = c1 - d0;\n\n            if (forward) {\n                inp[2 * (i + 1) + 0] = e2_0;\n                inp[2 * (i + 1) + 1] = e2_1;\n                inp[2 * (i + 3) + 0] = e1_0;\n                inp[2 * (i + 3) + 1] = e1_1;\n            }\n            else {\n                inp[2 * (i + 1) + 0] = e1_0;\n                inp[2 * (i + 1) + 1] = e1_1;\n                inp[2 * (i + 3) + 0] = e2_0;\n                inp[2 * (i + 3) + 1] = e2_1;\n            }\n        }\n\n        //iterations from bottom to top\n        let shift, m, km;\n        let rootRe, rootIm, zRe, zIm;\n\n        for (let i = 4; i < len; i <<= 1) {\n            shift = i << 1;\n            m = len / shift;\n            for (let j = 0; j < len; j += shift) {\n                for (let k = 0; k < i; k++) {\n                    km = k * m;\n                    rootRe = this.roots[this.tabln * km + 0];\n                    rootIm = this.roots[this.tabln * km + imOff];\n                    zRe = inp[2 * (i + j + k) + 0] * rootRe - inp[2 * (i + j + k) + 1] * rootIm;\n                    zIm = inp[2 * (i + j + k) + 0] * rootIm + inp[2 * (i + j + k) + 1] * rootRe;\n\n                    inp[2 * (i + j + k) + 0] = (inp[2 * (j + k) + 0] - zRe) * scale;\n                    inp[2 * (i + j + k) + 1] = (inp[2 * (j + k) + 1] - zIm) * scale;\n                    inp[2 * (j + k) + 0] = (inp[2 * (j + k) + 0] + zRe) * scale;\n                    inp[2 * (j + k) + 1] = (inp[2 * (j + k) + 1] + zIm) * scale;\n                }\n            }\n        }\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/fft.js","class FFTTables {\n    static get FFT_TABLE_512() {\n        return FFT_TABLE_512;\n    }\n\n    static get FFT_TABLE_480() {\n        return FFT_TABLE_480;\n    }\n\n    static get FFT_TABLE_60() {\n        return FFT_TABLE_60;\n    }\n\n    static get FFT_TABLE_64() {\n        return FFT_TABLE_64;\n    }\n\n    static generateShortTable(len) {\n        let t = 2 * Math.PI / len,\n            cosT = Math.cos(t),\n            sinT = Math.sin(t);\n\n        const f = new Float32Array(len * 2);\n\n        f[2 * 0 + 0] = 1;\n        f[2 * 0 + 1] = 0;\n\n        let lastImag = 0;\n\n        for (let i = 1; i < len; i++) {\n            f[2 * i + 0] = f[2 * (i - 1) + 0] * cosT + lastImag * sinT;\n            lastImag = lastImag * cosT - f[2 * (i - 1) + 0] * sinT;\n            f[2 * i + 1] = -lastImag;\n        }\n\n        return f;\n    }\n\n    static generateLongTable(len) {\n        let t = 2 * Math.PI / len,\n            cosT = Math.cos(t),\n            sinT = Math.sin(t);\n\n        const f = new Float32Array(len * 3);\n\n        f[3 * 0 + 0] = 1;\n        f[3 * 0 + 1] = 0;\n        f[3 * 0 + 2] = 0;\n\n        for (let i = 1; i < len; i++) {\n            f[3 * i + 0] = f[3 * (i - 1) + 0] * cosT + f[3 * (i - 1) + 2] * sinT;\n            f[3 * i + 2] = f[3 * (i - 1) + 2] * cosT - f[3 * (i - 1) + 0] * sinT;\n            f[3 * i + 1] = -f[3 * i + 2];\n        }\n\n        return f;\n    }\n}\n\nconst FFT_TABLE_64 = FFTTables.generateShortTable(64);\n\nconst FFT_TABLE_60 = FFTTables.generateShortTable(60);\n\nconst FFT_TABLE_480 = FFTTables.generateLongTable(480);\n\nconst FFT_TABLE_512 = FFTTables.generateLongTable(512);\n\nmodule.exports = FFTTables;\n\n\n\n// WEBPACK FOOTER //\n// ./src/aac/filterbank/fft_tables.js"],"sourceRoot":""}